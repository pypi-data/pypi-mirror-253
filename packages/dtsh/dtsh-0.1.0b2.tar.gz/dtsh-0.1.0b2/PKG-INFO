Metadata-Version: 2.1
Name: dtsh
Version: 0.1.0b2
Summary: Shell-like interface with Zephyr devicetree and bindings
Home-page: https://github.com/dottspina/dtsh
Author: Chris Duf
Author-email: chris@openmarl.org
License: Apache License version 2.0
Project-URL: Bug Reports, https://github.com/dottspina/dtsh/issues
Project-URL: Source, https://github.com/dottspina/dtsh
Keywords: devicetree,zephyr,dts,embedded
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Embedded Systems
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.8, <4
License-File: LICENSE
Requires-Dist: PyYAML>=5.1
Requires-Dist: rich
Requires-Dist: Pygments
Requires-Dist: gnureadline; sys_platform == "darwin"
Provides-Extra: dev
Requires-Dist: mypy; extra == "dev"
Requires-Dist: types-PyYAML; extra == "dev"
Requires-Dist: pyright; extra == "dev"
Requires-Dist: pylint; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Provides-Extra: dist
Requires-Dist: build; extra == "dist"
Requires-Dist: twine; extra == "dist"

====
dtsh
====

:Author: Chris Duf

**dtsh** is an interactive *shell-like* interface with a devicetree and
its bindings:

-  browse the devicetree through a familiar hierarchical file-system
   metaphor
-  retrieve nodes and bindings with accustomed command names and command
   line syntax
-  generate simple documentation artifacts by redirecting commands
   output to files (text, HTML, SVG)
-  common command line interface paradigms (auto-completion, history)
   and keybindings

::

   $ dtsh build/gzephyr/zephyr.dts
   dtsh (0.1.0a4): Shell-like interface to a devicetree
   Help: man dtsh
   How to exit: q, or quit, or exit, or press Ctrl-D

   /
   > tree -L 1 -l
   /
   ├──  chosen
   ├──  aliases
   ├──  soc
   ├──  pin-controller   The nRF pin controller is a singleton node responsible for controlling…
   ├──  entropy_bt_hci   Bluetooth module that uses Zephyr's Bluetooth Host Controller Interface as…
   ├──  cpus
   ├──  sw-pwm           nRFx S/W PWM
   ├──  leds             This allows you to define a group of LEDs. Each LED in the group is…
   ├──  pwmleds          PWM LEDs parent node
   ├──  buttons          GPIO KEYS parent node
   ├──  connector        GPIO pins exposed on Arduino Uno (R3) headers…
   └──  analog-connector ADC channels exposed on Arduino Uno (R3) headers…


This software was created as a Proof of Concept for a:

- simple tool that could assist newcomers to Zephyr in understanding
  what a devicetree is, and how bindings describe and constrain its content
- an on hand DTS file viewer
