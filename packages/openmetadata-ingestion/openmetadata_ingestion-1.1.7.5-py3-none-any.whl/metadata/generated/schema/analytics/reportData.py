# generated by datamodel-codegen:
#   filename:  analytics/reportData.json
#   timestamp: 2024-01-30T14:24:05+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional, Union

from pydantic import BaseModel, Field

from ..type import basic
from .reportDataType import (
    entityReportData,
    webAnalyticEntityViewReportData,
    webAnalyticUserActivityReportData,
)


class ReportDataType(Enum):
    EntityReportData = 'EntityReportData'
    WebAnalyticUserActivityReportData = 'WebAnalyticUserActivityReportData'
    WebAnalyticEntityViewReportData = 'WebAnalyticEntityViewReportData'


class ReportData(BaseModel):
    id: Optional[basic.Uuid] = Field(
        None, description='Unique identifier for a result.'
    )
    timestamp: Optional[basic.Timestamp] = Field(
        None, description='timestamp for of a result ingestion.'
    )
    reportDataType: Optional[ReportDataType] = Field(None, description='Type of data')
    data: Optional[
        Union[
            entityReportData.EntityReportData,
            webAnalyticUserActivityReportData.WebAnalyticUserActivityReportData,
            webAnalyticEntityViewReportData.WebAnalyticEntityViewReportData,
        ]
    ] = Field(None, description='Data captured')
