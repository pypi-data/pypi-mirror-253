# generated by datamodel-codegen:
#   filename:  dataInsight/dataInsightChartResult.json
#   timestamp: 2024-01-30T14:24:05+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, Extra, Field

from .type import (
    dailyActiveUsers,
    mostActiveUsers,
    mostViewedEntities,
    pageViewsByEntities,
    percentageOfEntitiesWithDescriptionByType,
    percentageOfEntitiesWithOwnerByType,
    percentageOfServicesWithDescription,
    percentageOfServicesWithOwner,
    totalEntitiesByTier,
    totalEntitiesByType,
)


class DataInsightChartType(Enum):
    TotalEntitiesByType = 'TotalEntitiesByType'
    TotalEntitiesByTier = 'TotalEntitiesByTier'
    PercentageOfEntitiesWithDescriptionByType = (
        'PercentageOfEntitiesWithDescriptionByType'
    )
    PercentageOfEntitiesWithOwnerByType = 'PercentageOfEntitiesWithOwnerByType'
    DailyActiveUsers = 'DailyActiveUsers'
    MostActiveUsers = 'MostActiveUsers'
    MostViewedEntities = 'MostViewedEntities'
    PageViewsByEntities = 'PageViewsByEntities'
    PercentageOfServicesWithDescription = 'PercentageOfServicesWithDescription'
    PercentageOfServicesWithOwner = 'PercentageOfServicesWithOwner'


class DataInsightChartResult(BaseModel):
    class Config:
        extra = Extra.forbid

    chartType: DataInsightChartType = Field(
        ...,
        description='Chart Type that will consume the data. Must match name of dataInsightChart.',
    )
    data: Optional[
        List[
            Union[
                percentageOfEntitiesWithDescriptionByType.PercentageOfEntitiesWithDescriptionByType,
                percentageOfEntitiesWithOwnerByType.PercentageOfEntitiesWithOwnerByType,
                totalEntitiesByTier.TotalEntitiesByTier,
                totalEntitiesByType.TotalEntitiesByType,
                dailyActiveUsers.DailyActiveUsers,
                pageViewsByEntities.PageViewsByEntities,
                mostActiveUsers.MostActiveUsers,
                mostViewedEntities.MostViewedEntities,
                percentageOfServicesWithDescription.PercentageOfServicesWithDescription,
                percentageOfServicesWithOwner.PercentageOfServicesWithOwner,
            ]
        ]
    ] = Field(None, description='Array of consumable data.')
