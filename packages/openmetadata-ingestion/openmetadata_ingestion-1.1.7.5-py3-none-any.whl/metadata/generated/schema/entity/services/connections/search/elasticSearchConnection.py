# generated by datamodel-codegen:
#   filename:  entity/services/connections/search/elasticSearchConnection.json
#   timestamp: 2024-01-30T14:24:05+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional, Union

from pydantic import BaseModel, Extra, Field

from metadata.ingestion.models.custom_pydantic import CustomSecretStr

from .. import connectionBasicType


class ElasticSearchType(Enum):
    ElasticSearch = 'ElasticSearch'


class ConnectionScheme(Enum):
    http = 'http'
    https = 'https'


class BasicAuthentication(BaseModel):
    class Config:
        extra = Extra.forbid

    username: str = Field(..., description='Elastic Search Username for Login')
    password: CustomSecretStr = Field(
        ..., description='Elastic Search Password for Login'
    )


class ApiAuthentication(BaseModel):
    apiKeyId: str = Field(
        ..., description='Elastic Search API Key ID for API Authentication'
    )
    apiKey: CustomSecretStr = Field(
        ..., description='Elastic Search API Key for API Authentication'
    )


class ElasticsearchConnection(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[ElasticSearchType] = Field(
        ElasticSearchType.ElasticSearch,
        description='ElasticSearch Type',
        title='ElasticSearch Type',
    )
    hostPort: str = Field(
        ...,
        description='Host and port of the ElasticSearch service.',
        title='Host and Port',
    )
    scheme: Optional[ConnectionScheme] = Field(
        ConnectionScheme.http, description='Http/Https connection scheme'
    )
    authType: Optional[Union[BasicAuthentication, ApiAuthentication]] = Field(
        None, description='Choose Auth Config Type.', title='Auth Configuration Type'
    )
    connectionTimeoutSecs: Optional[int] = Field(
        30, description='Connection Timeout in Seconds'
    )
    connectionArguments: Optional[connectionBasicType.ConnectionArguments] = Field(
        None, title='Connection Arguments'
    )
    supportsMetadataExtraction: Optional[
        connectionBasicType.SupportsMetadataExtraction
    ] = Field(None, title='Supports Metadata Extraction')
