# generated by datamodel-codegen:
#   filename:  entity/applications/configuration/external/metaPilotAppConfig.json
#   timestamp: 2024-01-29T10:59:57+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Extra, Field

from metadata.ingestion.models.custom_pydantic import CustomSecretStr

from .....type import entityReference


class MetaPilotAppType(Enum):
    MetaPilot = 'MetaPilot'


class ServiceDatabases(BaseModel):
    class Config:
        extra = Extra.forbid

    service: entityReference.EntityReference = Field(
        ..., description='Service Name to get descriptions from.', title='Service Name'
    )
    databases: List[entityReference.EntityReference] = Field(
        ...,
        description='List of database names from the Service to get descriptions from.',
        title='Databases',
    )


class MetaPilotAppConfig(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[MetaPilotAppType] = Field(
        MetaPilotAppType.MetaPilot,
        description='Application Type',
        title='Application Type',
    )
    waiiInstance: Optional[str] = Field(
        'https://tweakit.waii.ai/api/',
        description='WAII API host URL',
        title='WAII Instance',
    )
    collateURL: Optional[str] = Field(
        None,
        description='Collate Server public URL. WAII will use this information to interact with the server. E.g., https://sandbox.getcollate.io',
        title='Collate URL',
    )
    token: CustomSecretStr = Field(
        ..., description='WAII API Token', title='WAII API Token'
    )
    serviceDatabases: Optional[List[ServiceDatabases]] = Field(
        None,
        description='Services and Databases configured to get the descriptions from.',
        title='Service Databases',
    )
