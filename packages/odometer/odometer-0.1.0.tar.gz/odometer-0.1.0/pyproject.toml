[tool.poetry]
name = "odometer"
version = "0.1.0"
description = "odometer classes"
license = "GPL-3.0-or-later"
authors = ["An0nym0u5 <anonym0u5@disroot.org>"]
maintainers = ["An0nym0u5 <anonym0u5@disroot.org>"]
readme = "README.md"
homepage = "https://gitlab.com/Anonym0u5/odometer"
repository = "https://gitlab.com/Anonym0u5/odometer.git"
documentation = "https://odometer.readthedocs.io/en/latest/"
keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^8.7.0"
sphinx = "^7.2.6"
sphinx-autodoc-typehints = "^1.25.2"
sphinx-markdown-builder = "^0.6.6"
pylint = "^3.0.3"
sphinx-rtd-theme = "^2.0.0"
sphinx-prompt = "^1.8.0"
sphinx-tabs = "^3.4.5"
sphinx-substitution-extensions = {extras = ["prompt"], version = "^2022.2.16"}
sphinx-exec-code = "^0.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_variables = [
    "odometer/__release__.py:__version__",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.development]
match = "develop"
prerelease = true
prerelease_token = "alpha"

[tool.semantic_release.branches.features]
match = "^feature/.*$"
prerelease = true
prerelease_token = "dev"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

#[tool.semantic_release.remote]
#name = "origin"
#type = "gitlab"
#ignore_token_for_push = false

#[tool.semantic_release.remote.token]
#env = "GITLAB_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
