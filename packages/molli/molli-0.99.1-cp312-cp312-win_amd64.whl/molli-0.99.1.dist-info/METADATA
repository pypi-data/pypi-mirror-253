Metadata-Version: 2.1
Name: molli
Version: 0.99.1
Summary: Molecular toolbox library
Author: Blake E. Ocampo, Elena S. Burlova, Casey L. Olen, N. Ian Rinehart
Author-email: "Alexander S. Shved" <shvedalx@illinois.edu>
License: MIT License
        
        Copyright (c) 2022-2023 The Board of Trustees of the University of Illinois
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy >=1.24.0
Requires-Dist: scipy >=1.9.1
Requires-Dist: h5py >=3.8
Requires-Dist: msgpack >=1.0.3
Requires-Dist: msgpack-numpy >=0.4.8
Requires-Dist: attrs >=22.1.0
Requires-Dist: bidict >=0.21.2
Requires-Dist: requests >=2.28
Requires-Dist: PyYAML >=5.3
Requires-Dist: colorama >=0.4.4
Requires-Dist: networkx >=3.0
Requires-Dist: tqdm >=4.64.0
Requires-Dist: packaging >=23.1
Requires-Dist: deprecated >=1.2.14
Requires-Dist: fasteners >=0.19
Requires-Dist: joblib >=1.3.2

![Anaconda version](https://anaconda.org/esalx/molli/badges/version.svg)
![Anaconda license](https://anaconda.org/esalx/molli/badges/license.svg)
![Anaconda last updated](https://anaconda.org/esalx/molli/badges/latest_release_relative_date.svg)
![Anaconda platforms](https://anaconda.org/esalx/molli/badges/platforms.svg)

# `molli 1.0`: Molecular Toolbox Library

https://github.com/SEDenmarkLab/molli

Developed by:

- Alexander S. Shved
- Blake E. Ocampo   
- Elena S. Burlova  
- Casey L. Olen 
- N. Ian Rinehart   

[S. E. Denmark Laboratory, University of Illinois, Urbana-Champaign](https://denmarkgroup.illinois.edu/)

Copyright 2022-2023 The Board of Trustees of the University of Illinois.
All Rights Reserved.

# Installation and Building

Molli is designed to serve as both a pip package and a conda package.
The main difference comes from the fact that several required components are unavailable from a normal pip distribution (openbabel, xtb/crest, etc). 

Molli is both a pip and conda package. Technically, it is installable with both, but there are large differences described below. They boil down to pip's inability to install certain secondary dependencies.

## Install as a `pip` package

This mode is not preferred, but allows easier debugging in certain cases. Please note that this installation may leave your conda environment (if you have one) in a broken state.

1. Download or clone the source code to *`<path_to_molli_src>`*
2. `pip install` *`<path_to_molli_src>`*

This way of installing also compiles molli external C++ code correctly.

## Install as a `conda` package

TBD when conda channel becomes functional


## Building
1. Create a new environment
2.
```
conda config --set channel_priority flexible
conda config --append channels conda-forge
```

## Testing installation

1. Run the following command from your terminal.
```
molli info
```
2. Perform unit tests (-v for verbose mode is optional):
```
python -m unittest molli_test -v
```

## Install in development mode

```
pip install -e . --config-settings editable_mode=compat
```

# Hello, World!

This section describes your first steps in molli package

# Package structure

# Benchmarks
