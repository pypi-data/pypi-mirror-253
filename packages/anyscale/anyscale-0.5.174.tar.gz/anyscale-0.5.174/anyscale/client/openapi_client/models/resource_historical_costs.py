# coding: utf-8

"""
    Managed Ray API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ResourceHistoricalCosts(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'cpu_core_cost': 'HistoricalCosts',
        'memory_gb_cost': 'HistoricalCosts',
        'a100_core_cost': 'HistoricalCosts',
        'k80_core_cost': 'HistoricalCosts',
        'm60_core_cost': 'HistoricalCosts',
        't4_core_cost': 'HistoricalCosts',
        'v100_core_cost': 'HistoricalCosts',
        'v520_core_cost': 'HistoricalCosts'
    }

    attribute_map = {
        'cpu_core_cost': 'cpu_core_cost',
        'memory_gb_cost': 'memory_gb_cost',
        'a100_core_cost': 'a100_core_cost',
        'k80_core_cost': 'k80_core_cost',
        'm60_core_cost': 'm60_core_cost',
        't4_core_cost': 't4_core_cost',
        'v100_core_cost': 'v100_core_cost',
        'v520_core_cost': 'v520_core_cost'
    }

    def __init__(self, cpu_core_cost=None, memory_gb_cost=None, a100_core_cost=None, k80_core_cost=None, m60_core_cost=None, t4_core_cost=None, v100_core_cost=None, v520_core_cost=None, local_vars_configuration=None):  # noqa: E501
        """ResourceHistoricalCosts - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._cpu_core_cost = None
        self._memory_gb_cost = None
        self._a100_core_cost = None
        self._k80_core_cost = None
        self._m60_core_cost = None
        self._t4_core_cost = None
        self._v100_core_cost = None
        self._v520_core_cost = None
        self.discriminator = None

        self.cpu_core_cost = cpu_core_cost
        self.memory_gb_cost = memory_gb_cost
        self.a100_core_cost = a100_core_cost
        self.k80_core_cost = k80_core_cost
        self.m60_core_cost = m60_core_cost
        self.t4_core_cost = t4_core_cost
        self.v100_core_cost = v100_core_cost
        self.v520_core_cost = v520_core_cost

    @property
    def cpu_core_cost(self):
        """Gets the cpu_core_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on CPU cores by this organization.  # noqa: E501

        :return: The cpu_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._cpu_core_cost

    @cpu_core_cost.setter
    def cpu_core_cost(self, cpu_core_cost):
        """Sets the cpu_core_cost of this ResourceHistoricalCosts.

        The money spent on CPU cores by this organization.  # noqa: E501

        :param cpu_core_cost: The cpu_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and cpu_core_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `cpu_core_cost`, must not be `None`")  # noqa: E501

        self._cpu_core_cost = cpu_core_cost

    @property
    def memory_gb_cost(self):
        """Gets the memory_gb_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on memory by this organization.  # noqa: E501

        :return: The memory_gb_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._memory_gb_cost

    @memory_gb_cost.setter
    def memory_gb_cost(self, memory_gb_cost):
        """Sets the memory_gb_cost of this ResourceHistoricalCosts.

        The money spent on memory by this organization.  # noqa: E501

        :param memory_gb_cost: The memory_gb_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and memory_gb_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `memory_gb_cost`, must not be `None`")  # noqa: E501

        self._memory_gb_cost = memory_gb_cost

    @property
    def a100_core_cost(self):
        """Gets the a100_core_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on A100 cores by this organization.  # noqa: E501

        :return: The a100_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._a100_core_cost

    @a100_core_cost.setter
    def a100_core_cost(self, a100_core_cost):
        """Sets the a100_core_cost of this ResourceHistoricalCosts.

        The money spent on A100 cores by this organization.  # noqa: E501

        :param a100_core_cost: The a100_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and a100_core_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `a100_core_cost`, must not be `None`")  # noqa: E501

        self._a100_core_cost = a100_core_cost

    @property
    def k80_core_cost(self):
        """Gets the k80_core_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on K80 cores by this organization.  # noqa: E501

        :return: The k80_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._k80_core_cost

    @k80_core_cost.setter
    def k80_core_cost(self, k80_core_cost):
        """Sets the k80_core_cost of this ResourceHistoricalCosts.

        The money spent on K80 cores by this organization.  # noqa: E501

        :param k80_core_cost: The k80_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and k80_core_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `k80_core_cost`, must not be `None`")  # noqa: E501

        self._k80_core_cost = k80_core_cost

    @property
    def m60_core_cost(self):
        """Gets the m60_core_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on M60 cores by this organization.  # noqa: E501

        :return: The m60_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._m60_core_cost

    @m60_core_cost.setter
    def m60_core_cost(self, m60_core_cost):
        """Sets the m60_core_cost of this ResourceHistoricalCosts.

        The money spent on M60 cores by this organization.  # noqa: E501

        :param m60_core_cost: The m60_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and m60_core_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `m60_core_cost`, must not be `None`")  # noqa: E501

        self._m60_core_cost = m60_core_cost

    @property
    def t4_core_cost(self):
        """Gets the t4_core_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on T4 cores by this organization.  # noqa: E501

        :return: The t4_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._t4_core_cost

    @t4_core_cost.setter
    def t4_core_cost(self, t4_core_cost):
        """Sets the t4_core_cost of this ResourceHistoricalCosts.

        The money spent on T4 cores by this organization.  # noqa: E501

        :param t4_core_cost: The t4_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and t4_core_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `t4_core_cost`, must not be `None`")  # noqa: E501

        self._t4_core_cost = t4_core_cost

    @property
    def v100_core_cost(self):
        """Gets the v100_core_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on V100 cores by this organization.  # noqa: E501

        :return: The v100_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._v100_core_cost

    @v100_core_cost.setter
    def v100_core_cost(self, v100_core_cost):
        """Sets the v100_core_cost of this ResourceHistoricalCosts.

        The money spent on V100 cores by this organization.  # noqa: E501

        :param v100_core_cost: The v100_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and v100_core_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `v100_core_cost`, must not be `None`")  # noqa: E501

        self._v100_core_cost = v100_core_cost

    @property
    def v520_core_cost(self):
        """Gets the v520_core_cost of this ResourceHistoricalCosts.  # noqa: E501

        The money spent on V520 cores by this organization.  # noqa: E501

        :return: The v520_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :rtype: HistoricalCosts
        """
        return self._v520_core_cost

    @v520_core_cost.setter
    def v520_core_cost(self, v520_core_cost):
        """Sets the v520_core_cost of this ResourceHistoricalCosts.

        The money spent on V520 cores by this organization.  # noqa: E501

        :param v520_core_cost: The v520_core_cost of this ResourceHistoricalCosts.  # noqa: E501
        :type: HistoricalCosts
        """
        if self.local_vars_configuration.client_side_validation and v520_core_cost is None:  # noqa: E501
            raise ValueError("Invalid value for `v520_core_cost`, must not be `None`")  # noqa: E501

        self._v520_core_cost = v520_core_cost

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResourceHistoricalCosts):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ResourceHistoricalCosts):
            return True

        return self.to_dict() != other.to_dict()
