Index: examples/camera_settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import cv2\n\nfrom camera_management.frontends.basic_frontend import manager_interface\n\n# open the manager frontend\nmgr_if = manager_interface()\n\n# get the camera interface listening on port 8091\ncam = mgr_if.get_interface_by_port(8091)\n\n# set max fps to 12 and show if it was set\nprint(cam.set_general_setting(cv2.CAP_PROP_FPS, 14))\nprint(cam.get_general_setting(cv2.CAP_PROP_FPS))\n\n# set auto exposure to 0.8 and show if it was set\nprint(cam.set_general_setting(cv2.CAP_PROP_AUTO_EXPOSURE, 0.8))\nprint(cam.get_general_setting(cv2.CAP_PROP_AUTO_EXPOSURE))\n\nprint(cam.set_general_setting(cv2.CAP_PROP_FRAME_WIDTH, 400))\nprint(cam.get_general_setting(cv2.CAP_PROP_FRAME_WIDTH))\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/examples/camera_settings.py b/examples/camera_settings.py
--- a/examples/camera_settings.py	(revision f28a246d1da7af04d63beaa369b7d8d767c02aab)
+++ b/examples/camera_settings.py	(date 1705331090717)
@@ -6,10 +6,10 @@
 mgr_if = manager_interface()
 
 # get the camera interface listening on port 8091
-cam = mgr_if.get_interface_by_port(8091)
+cam = mgr_if.get_interface_by_port(8092)
 
 # set max fps to 12 and show if it was set
-print(cam.set_general_setting(cv2.CAP_PROP_FPS, 14))
+print(cam.set_general_setting(cv2.CAP_PROP_FPS, 30))
 print(cam.get_general_setting(cv2.CAP_PROP_FPS))
 
 # set auto exposure to 0.8 and show if it was set
Index: examples/viewer_examples.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pickle\n\nimport cv2\nimport requests\n\n\ndef image_viewer_requests(port: int, host=\"localhost\"):\n    \"\"\"\n    This is the most basic form of a viewer. It continually requests the current frame from a given address\n    \"\"\"\n    while True:\n        try:\n            response = requests.get(f\"http://{host}:{port}/data/imageProcessor\")\n        except requests.exceptions.ConnectionError:\n            continue\n        if response.status_code == 200:\n            cv2.imshow(\"Moin\", pickle.loads(response.content).image)\n            if cv2.waitKey(20) == ord(\"q\"):\n                break\n\n\ndef image_viewer_interface(port: int, host=\"localhost\"):\n    \"\"\"\n    This is an image viewer which uses the basic frontends \"fetch_data\" function.\n    \"\"\"\n    from camera_management.frontends.basic_frontend import manager_interface\n\n    manager_frontend = manager_interface(port=8090, host=host)\n    camera_interface = manager_frontend.get_interface_by_port(port)\n\n    while True:\n        data = camera_interface.fetch_data()\n        cv2.imshow(\"Stream\", data.image)\n        if cv2.waitKey(20) == ord(\"q\"):\n            break\n\n\nif __name__ == \"__main__\":\n    image_viewer_requests(port=8091)\n    # image_viewer_interface(port=8091)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/examples/viewer_examples.py b/examples/viewer_examples.py
--- a/examples/viewer_examples.py	(revision f28a246d1da7af04d63beaa369b7d8d767c02aab)
+++ b/examples/viewer_examples.py	(date 1705331090720)
@@ -36,5 +36,5 @@
 
 
 if __name__ == "__main__":
-    image_viewer_requests(port=8091)
+    image_viewer_requests(port=8092)
     # image_viewer_interface(port=8091)
