name: ci

on:
  push:
    branches:
      - master
      - development
    tags:
      - '**'
  pull_request: { }



jobs:
  run-tests:
    name: "test ${{ matrix.os }} ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
#        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version: [ '3.10' ]
#        python-version: [ '3.10', '3.11', '3.12' ]

    steps:
      - uses: actions/checkout@v4

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: install requirements
        run: |
          python -m pip install -U pip
          pip install -r requirements/main.txt -r requirements/test.txt

      - name: make coverage directory
        run: mkdir coverage

      - name: test with coverage
        run: coverage run -m pytest tests
        env:
          COVERAGE_FILE: coverage/.coverage.${{ matrix.os }}.${{ matrix.python-version }}
          CONTEXT: ${{ matrix.os }}-py${{ matrix.python-version }}

      - name: store coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  build:
    needs: run-tests
    name: build distribution package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: install pypa/build
        run: |
          python -m pip install -U pip
          pip install build

      - name: build the binary wheel and source tarball
        run: python3 -m build

      - name: store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  release-to-pypi:
    name: publish package to pypi
    if: startsWith(github.ref, 'refs/tags/v')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: download dist files
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: publish distribution to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          repository-url:  https://upload.pypi.org/legacy/
