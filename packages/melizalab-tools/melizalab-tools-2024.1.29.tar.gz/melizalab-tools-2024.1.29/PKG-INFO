Metadata-Version: 2.1
Name: melizalab-tools
Version: 2024.1.29
Summary: Meliza lab scripts and modules for auditory neurophysiology
Home-page: https://github.com/melizalab/melizalab-tools
Author: Dan Meliza
Author-email: dan@meliza.org
Maintainer: Dan Meliza
Maintainer-email: dan@meliza.org
License: BSD 3-Clause License
Keywords: neuroscience,auditory
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
Requires-Dist: appdirs>=1.4.4
Requires-Dist: arf>=2.6.4
Requires-Dist: neurobank==0.10.8
Requires-Dist: numpy<2,>=1.19.5
Requires-Dist: scipy>=1.8
Requires-Dist: pandas>=1.4.0
Requires-Dist: quickspikes>=1.3.9
Requires-Dist: toelis>=2.1.1
Requires-Dist: libtfr>=2.1.7
Requires-Dist: ewave>=1.0.7
Requires-Dist: PyYAML>=6.0.1
Requires-Dist: samplerate==0.1.0
Provides-Extra: test
Requires-Dist: pytest>=7.0; extra == "test"

dlab
----

A collection of python code and scripts used by the Meliza Lab.

To install: ``pip install melizalab-tools``

modules
~~~~~~~

-  ``dlab.pprox``: functions for working with
   `pprox <https://meliza.org/spec:2/pprox/>`__ objects, a data format
   for storing multi-trial point process data (e.g.Â spike times evoked
   by stimulus presentation).

console scripts
~~~~~~~~~~~~~~~

-  ``group-kilo-spikes``: sort spike times output from
   `kilosort <https://github.com/MouseLand/Kilosort>`__ and
   `phy2 <https://github.com/cortex-lab/phy/>`__ into pprox files.

other stuff
~~~~~~~~~~~

-  ``scripts/extract_waveforms.py``: extracts spike waveforms from a raw
   recording (in ARF format) using spike times stored in a file (pprox
   format). This script is mostly only used to verify that spike sorting
   is working properly, because the ``group-kilo-spikes`` script has an
   option to store average waveforms.
