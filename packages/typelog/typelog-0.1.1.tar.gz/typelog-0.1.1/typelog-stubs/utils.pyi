from . import settings as settings
from _typeshed import Incomplete
from dataclasses import dataclass, field as field
from typing import Dict, Optional

LibName: Incomplete
LogLevel: Incomplete
is_configured: bool

@dataclass
class Loggers:
    root_log_level: int
    log_levels: Optional[Dict[LibName, LogLevel]] = ...
    turn_json: Optional[bool] = ...
    add_thread: Optional[bool] = ...
    add_process: Optional[bool] = ...
    add_level: Optional[bool] = ...
    add_filepath: Optional[bool] = ...
    add_time: Optional[bool] = ...
    def configure(self) -> None: ...
    def __init__(self, root_log_level, log_levels, turn_json, add_thread, add_process, add_level, add_filepath, add_time) -> None: ...
