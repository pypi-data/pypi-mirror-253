# coding: utf-8

"""
    Stock API

    Stock API for Korbyte

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date, datetime
from typing import Any, ClassVar, Dict, List, Optional, Union
from pydantic import BaseModel, StrictFloat, StrictInt
from pydantic import Field
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class Daily(BaseModel):
    """
    Daily
    """ # noqa: E501
    id: Optional[StrictInt] = None
    var_date: Optional[date] = Field(default=None, alias="date")
    open: Optional[Union[StrictFloat, StrictInt]] = None
    high: Optional[Union[StrictFloat, StrictInt]] = None
    low: Optional[Union[StrictFloat, StrictInt]] = None
    close: Optional[Union[StrictFloat, StrictInt]] = None
    volume: Optional[Union[StrictFloat, StrictInt]] = None
    adjusted_open: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="adjustedOpen")
    adjusted_close: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="adjustedClose")
    adjusted_high: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="adjustedHigh")
    adjusted_low: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="adjustedLow")
    volume_weighted_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="volumeWeightedAverage")
    created_at: Optional[datetime] = Field(default=None, alias="createdAt")
    updated_at: Optional[datetime] = Field(default=None, alias="updatedAt")
    __properties: ClassVar[List[str]] = ["id", "date", "open", "high", "low", "close", "volume", "adjustedOpen", "adjustedClose", "adjustedHigh", "adjustedLow", "volumeWeightedAverage", "createdAt", "updatedAt"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of Daily from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of Daily from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "id": obj.get("id"),
            "date": obj.get("date"),
            "open": obj.get("open"),
            "high": obj.get("high"),
            "low": obj.get("low"),
            "close": obj.get("close"),
            "volume": obj.get("volume"),
            "adjustedOpen": obj.get("adjustedOpen"),
            "adjustedClose": obj.get("adjustedClose"),
            "adjustedHigh": obj.get("adjustedHigh"),
            "adjustedLow": obj.get("adjustedLow"),
            "volumeWeightedAverage": obj.get("volumeWeightedAverage"),
            "createdAt": obj.get("createdAt"),
            "updatedAt": obj.get("updatedAt")
        })
        return _obj


