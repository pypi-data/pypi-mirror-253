{"name": "HumanEval_45_triangle_area", "language": "py", "prompt": "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n", "tests": "def check(candidate):\n    total_tests = 0\n    failed_tests = 0\n\n    try:\n        total_tests += 1\n        assert candidate(5, 3) == 7.5\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(2, 2) == 2.0\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(10, 8) == 40.0\n    except AssertionError:\n        failed_tests += 1\n    print(total_tests, failed_tests)\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n", "completions": ["    return 0.5 * a * h\n", "    area = a*h/2\n    return area\n", "    return a * h * 0.5\n\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    area = a * h / 2\n    return area\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a*h)/2\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    return a*h/2\n\n", "    return a * h / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return 0.5 * a * h\n", "    return a*h/2\n", "    area = 0.5 * a * h\n    return area\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n", "    return 0.5 * a * h\n", "    return 0.5 * a * h\n\n", "    return 0.5 * a * h\n\n", "    return (a*h)/2\n", "    return 0.5*a*h\n", "    return a * h *.5\n\n", "    return (a * h * 0.5)\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    area = a * h / 2\n    return area\n\n", "    return 0.5 * a * h\n", "    area = 0.5 * a * h\n    return area\n\n", "    return a * h / 2\n", "    area = a * h / 2\n    return area\n\n", "    return a*h/2\n", "    area = (a * h) / 2\n    return area\n\n", "    return a * h / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    area = a * h / 2\n    return area\n\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n", "    return a * h * 0.5\n\n", "    return a * h / 2\n\n", "    area = (a * h) / 2\n    return area\n\n", "    return a * h / 2\n", "    return a * h * 0.5\n", "    area = a * h / 2\n    return area\n", "    return 0.5 * a * h\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", "    return a * h * 0.5\n", "    return 0.5 * a * h\n", "    return a*h/2\n", "    return a * h / 2\n\n", "    return a * h / 2\n", "    return 0.5 * a * h\n", "    return 0.5 * a * h\n\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    return a * h / 2\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return a * h * 0.5\n", "    area = 0.5 * a * h\n    return area\n\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    area = a * h *.5\n    return area\n\n", "    return a * h / 2\n", "    return a*h/2\n\n", "    area = (a * h) / 2\n    return area\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a*h)/2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n", "    return a * h / 2\n", "    return a * h / 2\n", "    return a * h / 2\n", "    return a * h / 2\n\n", "    return a * h * 0.5\n", "    return a * h / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return a*h/2\n", "    return a * h * 0.5\n\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "    return a * h / 2\n", "    return (a * h) / 2\n", "    return (a*h)/2\n", "    return (a * h) / 2\n", "    return a*h/2\n", "    return (a * h) / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return (a * h) / 2\n", "    area = a * h / 2\n    return area\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return (a*h)/2\n\n", "    return 0.5 * a * h\n", "    return (a*h)/2\n", "    area = a * h / 2\n    return area\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    return a * h * 0.5\n", "    return 0.5 * a * h\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return (a * h) / 2\n", "    return (a*h) / 2\n", "    return (a * h) / 2\n", "    return 0.5 * a * h\n\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    # return 0.5*(a*h)\n    return (a * h) / 2\n\n", "    return a * h * 0.5\n", "    return (a * h) / 2\n", "    return a * h / 2\n", "    return 0.5 * a * h\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    return a * h / 2\n", "    return 0.5 * a * h\n\n", "    area = a * h / 2\n    return area\n\n", "    return (a*h)/2\n", "    area = 0.5 * a * h\n    return area\n\n", "    return 0.5 * a * h\n", "    return a*h/2\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", "    # return (a * h) / 2\n    return (a * h) / 2\n", "    area = 0.5 * a * h\n    return area\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return 0.5 * a * h\n", "    return 0.5*a*h\n", "    return a*h/2\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n", "    area = 0.5 * a * h\n    return area\n\n", "    return a * h / 2\n\n", "    return a*h/2\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    area = 0.5 * a * h\n    return area\n\n", "    return a * h * 0.5\n\n", "    return 0.5 * a * h\n", "    return a * h / 2\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n", "    area = a * h / 2\n    return area\n\n", "    return a * h / 2\n\n", "    return (a * h * 0.5)\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}