{"name": "HumanEval_71_triangle_area", "language": "py", "prompt": "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n", "tests": "def check(candidate):\n    total_tests = 0\n    failed_tests = 0\n\n    try:\n        total_tests += 1\n        assert candidate(3, 4, 5) == 6.0\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(1, 2, 10) == -1\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(4, 8, 5) == 8.18\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(2, 2, 2) == 1.73\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(1, 2, 3) == -1\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(10, 5, 7) == 16.25\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(2, 6, 3) == -1\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(1, 1, 1) == 0.43\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(2, 2, 10) == -1\n    except AssertionError:\n        failed_tests += 1\n    print(total_tests, failed_tests)\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n", "completions": ["    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return 0.5 * a * b\n    else:\n        return -1\n\n", "    if a > (b + c):\n        return -1\n    elif b > (a + c):\n        return -1\n    elif c > (a + b):\n        return -1\n    else:\n        s = (a + b + c) / 2\n        return round(s * (s - a) * (s - b) * (s - c), 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a * b * c) / 2, 2)\n    else:\n        return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        a, b, c = sorted([a, b, c])\n        if a <= b + c and b <= a + c and c <= b + a:\n            return 0.5 * abs(a * b * c)\n        else:\n            return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return (a + b + c) / 2\n\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    else:\n        return round((a + b + c)/2, 2)\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round(0.5 * (a * b * c), 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a + b + c) / 2, 2)\n    else:\n        return -1\n\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n\n    if a + b > c and a + c > b and b + c > a:\n        return round((a * b * c) / 2, 2)\n    else:\n        return -1\n\n", "    a, b, c = sorted([a, b, c])\n    return round((a+b+c)/2, 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or b + c <= a or a + c <= b:\n        return -1\n    return 0.5 * abs(a * b * c)\n\n", "    # if any of the sides are less than or equal to zero, return -1\n    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    # if all of the sides are greater than zero, return the area of the triangle\n    return (a + b + c) / 2\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    if a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n        return (a + b + c) / 2\n    return (a * b * c) / 2\n\n", "    if a > b + c or b > a + c or c > a + b:\n        return -1\n\n    area = (a + b + c) / 2\n    return round(area, 2)\n\n", "    if a < b + c or b < a + c or c < a + b:\n        return -1.0\n    else:\n        return (a * b * c) / 2\n", "    s = (a + b + c) / 2\n    return round(s * (s - a) * (s - b) * (s - c), 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        s = (a + b + c) / 2\n        area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area, 2)\n\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return round((a * b * 0.5), 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return (a * b * c) / 2\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n", "    a, b, c = sorted([a, b, c])\n    if a + b <= c:\n        return -1\n    if a + c <= b:\n        return -1\n    if b + c <= a:\n        return -1\n    return (a + b + c) / 2\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b) / 2, 2)\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        s = (a + b + c) / 2\n        area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area, 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return (a + b) * 0.5 * c\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a * b * c) / 2, 2)\n    else:\n        return -1\n", "    if a+b > c and a+c > b and b+c > a:\n        area = (a + b + c)/2\n        return round(area, 2)\n    else:\n        return -1\n", "    if a+b <= c or a+c <= b or b+c <= a:\n        return -1\n    \n    return 0.5 * (a+b+c)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    \n    return 0.5 * a * b\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round(((a * b * c) / 2), 2)\n", "    return -1 if a < 0 or b < 0 or c < 0 else (a + b + c) / 2\n", "    if a + b > c and b + c > a and a + c > b:\n        return round((a*b*c)/(2.0), 2)\n    else:\n        return -1\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n", "    if a + b > c:\n        if a + c > b:\n            if b + c > a:\n                return a * b * 0.5\n            else:\n                return -1\n        else:\n            return -1\n    else:\n        return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return 0.5 * a * b\n", "    # Calculate the lengths of the sides\n    side_a = a\n    side_b = b\n    side_c = c\n    \n    # Check if the three sides make a triangle\n    if a + b > c and a + c > b and b + c > a:\n        # Calculate the area\n        area = 0.5 * (a * b * c)\n        return area\n    else:\n        return -1\n    \n    ", "    if a + b > c and a + c > b and b + c > a:\n        return (a * b * c) / 2\n    return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round(((a * b) / 2), 2)\n\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    return 0.5 * (a + b + c)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        s = (a + b + c) / 2\n        return round(s * (s - a) * (s - b) * (s - c), 2)\n\n", "    if a + b <= c or b + c <= a or a + c <= b:\n        return -1\n    else:\n        return ((a + b + c) / 2) * (a ** 2 + b ** 2 + c ** 2) ** 0.5\n", "    if a > 0 and b > 0 and c > 0:\n        s = (a + b + c) / 2\n        return round(s*(s-a)*(s-b)*(s-c), 2)\n    else:\n        return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n\n    p = (a + b + c) / 2\n    return sqrt(p * (p - a) * (p - b) * (p - c))\n\n", "    sides = sorted([a, b, c])\n    if sides[0] + sides[1] > sides[2]:\n        return sum(sides) / 2.0\n    return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return (a + b) * 0.5 * c\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return 0.5 * (a + b + c) * (a ** 2 + b ** 2 + c ** 2) ** 0.5\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if (a + b <= c) or (b + c <= a) or (c + a <= b):\n        return -1\n    return round(((a * b) / 2), 2)\n\n", "    if a > b + c:\n        return -1\n    elif b > a + c:\n        return -1\n    elif c > a + b:\n        return -1\n    else:\n        return (a*b*c) / 2\n", "    \n    if (a + b) < c or (b + c) < a or (a + c) < b:\n        return -1\n    else:\n        return round(((a + b) * c) / 2, 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return (a * b * 0.5)\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round(0.5*(a*b+b*c+c*a),2)\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    else:\n        s = (a + b + c) / 2\n        area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area, 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    elif a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return (a + b + c) / 2\n    else:\n        return -1\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n\n    return 0.5 * (a + b + c)\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return 0.5 * (a + b + c)\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if a > b + c:\n        return -1\n    if b > a + c:\n        return -1\n    if c > a + b:\n        return -1\n    return 0.5 * (a + b + c) * (a + b - c)\n", "    if a + b > c and a + c > b and b + c > a:\n        return (a + b + c) / 2\n    else:\n        return -1\n\n", "    if a >= b and b >= c:\n        return (a + b) * 0.5\n    elif a >= c and c >= b:\n        return (a + c) * 0.5\n    elif b >= a and a >= c:\n        return (b + c) * 0.5\n    else:\n        return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return (a * b) / 2\n", "    # Side lengths\n    side_a = a\n    side_b = b\n    side_c = c\n\n    # Check if sides are different\n    if side_a == side_b and side_b == side_c:\n        return -1\n    # Check if sides are different\n    elif side_a!= side_b and side_b!= side_c and side_c!= side_a:\n        return -1\n\n    # Calculate the area\n    area = 0.5 * (side_a + side_b + side_c)\n    return area\n\n", "    s = a + b + c\n    if s < a + b or s < a + c or s < b + c:\n        return -1\n    else:\n        return (a * b * c) / 2\n\n", "    return round((a + b + c) / 2, 2)\n\n", "    s = (a + b + c) / 2\n    area = 0.5 * s * (s - a) * (s - b) * (s - c)\n    return round(area, 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n", "    if (a <= 0 or b <= 0 or c <= 0):\n        return -1\n    \n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    \n    return round(((a + b + c) / 2), 2)\n", "    if a + b > c and a + c > b and b + c > a:\n        return (a * b * c) / 2\n    else:\n        return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n\n    s = (a + b + c) / 2.0\n    return math.sqrt(s * (s - a) * (s - b) * (s - c))\n", "    if a < b + c:\n        return -1\n    if b < a + c:\n        return -1\n    if c < a + b:\n        return -1\n    return round((a * b * c) / 2, 2)\n\n", "    # calculate the length of the three sides\n    side_a = a\n    side_b = b\n    side_c = c\n    \n    # calculate the length of the hypotenuse\n    hypotenuse = sqrt(side_a**2 + side_b**2)\n    \n    # calculate the length of the other two sides\n    side_c_ = hypotenuse\n    side_b_ = sqrt(side_c**2 - side_a**2)\n    side_a_ = sqrt(side_c**2 - side_b**2)\n    \n    # calculate the area of the triangle\n    area_of_triangle = (side_a_ + side_b_ + side_c_) / 2\n    \n    # check if the triangle is valid\n    if area_of_triangle > hypotenuse:\n        return area_of_triangle\n    else:\n        return -1\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    area = sqrt(p * (p - a) * (p - b) * (p - c))\n    return round(area, 2)\n\n", "    a = float(a)\n    b = float(b)\n    c = float(c)\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        s = (a + b + c) / 2\n        return (s * (s - a) * (s - b) * (s - c)) ** 0.5\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return (a + b) / 2 * c\n", "    if a > b + c or b > a + c or c > a + b:\n        return -1\n    else:\n        return (a + b + c) / 2\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        return (a + b + c) / 2\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a * b * c) / 2, 2)\n    else:\n        return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a * b) / 2, 2)\n    else:\n        return -1\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round(((a*b)/2) + ((a*c)/2) + ((b*c)/2), 2)\n\n", "    return round((a + b + c)/2, 2)\n", "    if a + b > c and a + c > b and b + c > a:\n        return ((a + b) * c) / 2\n    else:\n        return -1\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        # Calculate the semi-perimeter\n        s = (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area, 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a + b + c) / 2, 2)\n    else:\n        return -1\n", "    if a + b <= c:\n        return -1\n    if a + c <= b:\n        return -1\n    if b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    return round((p * (p - a) * (p - b) * (p - c)), 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return round(((a * b) / 2), 2)\n\n", "    if a + b <= c:\n        return -1\n    if a + c <= b:\n        return -1\n    if b + c <= a:\n        return -1\n\n    return 0.5 * (a * b * c)\n", "    # Return -1 if there are not 3 sides\n    if a+b+c!= 3:\n        return -1\n\n    # Check if any side is 0\n    if (a == 0) or (b == 0) or (c == 0):\n        return -1\n\n    # Calculate the area\n    area = 0.5 * (a * b * c)\n    return round(area, 2)\n\n", "    s = (a + b + c) / 2\n    if s < max(a, b, c):\n        return -1\n    elif s == max(a, b, c):\n        return (s + a) / 2\n    else:\n        return (s + b) / 2\n", "    # If the sum of any two sides is greater than the third side, then return -1\n    if a + b > c and a + c > b and b + c > a:\n        # Return the area rounded to two decimal places\n        return round(((a * b) / 2), 2)\n    else:\n        return -1\n    ", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    else:\n        a = float(a)\n        b = float(b)\n        c = float(c)\n\n        if (a + b) < c or (a + c) < b or (b + c) < a:\n            return -1\n\n        return 0.5 * abs((a * b) - (b * c) + (a * c))\n\n", "    sides = sorted([a, b, c])\n    if sides[0] + sides[1] > sides[2]:\n        return round(0.5 * sides[0] * sides[1], 2)\n    else:\n        return -1\n\n", "    if a > 0 and b > 0 and c > 0:\n        s = (a + b + c) / 2\n        return (s*(s-a)*(s-b)*(s-c))**0.5\n    else:\n        return -1\n    \n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    return round((a + b + c) / 2, 2)\n\n", "    if a+b < c or a+c < b or b+c < a:\n        return -1\n    else:\n        return (a + b + c) / 2\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b) / 2, 2)\n\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n\n    p = (a + b + c) / 2\n    area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    return round(area, 2)\n\n", "    if a+b <= c or b+c <= a or a+c <= b:\n        return -1\n    else:\n        return round((a*b*0.5),2)\n", "    # (a + b + c) / 2 = a + b + c / 2\n    if (a + b + c) / 2.0!= a:\n        return -1\n    else:\n        return round(((a * (a + b) * (a + c)) / 6.0), 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a*b)/2, 2)\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n", "    if a + b <= c or b + c <= a or a + c <= b:\n        return -1\n    else:\n        return (a*b)/2\n", "    # checks for valid triangle\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n\n    # area calculation\n    area = (a + b + c) / 2\n\n    return round(area, 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return (a * b * c) / 2\n    return -1\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if (a + b) <= c or (a + c) <= b or (b + c) <= a:\n        return -1\n    return 0.5 * a * b\n", "    if a+b <= c or a+c <= b or b+c <= a:\n        return -1\n    return round((a*b*0.5), 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    return area\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return 0.5 * abs(a * b * c)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return (a + b + c) / 2\n\n", "    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(s * (s - a) * (s - b) * (s - c), 2)\n    return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return 0.5 * (a + b + c) * abs(a * b - b * c + a * c) / 2\n", "    sides = [a, b, c]\n    if a+b <= c:\n        return -1\n    if a+c <= b:\n        return -1\n    if b+c <= a:\n        return -1\n    if sides[0] == sides[1]:\n        return -1\n    if sides[1] == sides[2]:\n        return -1\n    if sides[0] == sides[2]:\n        return -1\n    return round(((sides[0]*sides[1]) / 2), 2)\n", "    if a + b > c and b + c > a and a + c > b:\n        return round(((a + b + c) / 2), 2)\n    else:\n        return -1\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b > c and a + c > b and b + c > a:\n        return (a * b * c) / 2.0\n    else:\n        return -1\n\n", "    if a >= 0 and b >= 0 and c >= 0:\n        s = (a + b + c) / 2\n        area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area, 2)\n    else:\n        return -1\n\n", "    return round((a*b*c)/2, 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return a*b*0.5\n    else:\n        return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return (a + b + c) / 2\n\n", "    return round((a * b * c) / 2, 2)\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n\n", "    return abs(a * b * c) / 2 if a + b > c and a + c > b and b + c > a else -1\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    elif a + b > c and a + c > b and b + c > a:\n        return (a * b) / 2\n    else:\n        return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n\n    # calculate the semi-perimeter\n    s = (a + b + c) / 2\n\n    # calculate the area\n    area = sqrt(s * (s - a) * (s - b) * (s - c))\n\n    return round(area, 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return 0.5 * (a + b + c)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        return (a + b + c) / 2\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a + b + c)/2, 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n", "    if a + b <= c or b + c <= a or a + c <= b:\n        return -1\n    else:\n        return round(a * b *.5, 2)\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a * b * c) / 2, 2)\n    else:\n        return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    return ((a + b + c) / 2) * sqrt(abs(a * b * c - (a + b + c) * (a + b) * c))\n\n", "    if a+b > c and a+c > b and b+c > a:\n        return 0.5 * (a + b + c)\n    else:\n        return -1\n\n", "    # If the three sides of the triangle are smaller than the third side, \n    # return -1\n    if a > c or b > c or c > a:\n        return -1\n    # Calculate the area\n    triangle_area = (a * b) / 2\n    return round(triangle_area, 2)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n\n    return round((a + b + c) / 2, 2)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a + b + c) / 2, 2)\n    else:\n        return -1\n\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if a + b > c and a + c > b and b + c > a:\n        return (a * b * c) / 2\n    else:\n        return -1\n\n", "    if a >= 0 and b >= 0 and c >= 0:\n        if a + b > c:\n            if a + c > b:\n                if b + c > a:\n                    return (a * b) / 2\n                else:\n                    return -1\n            else:\n                return -1\n        else:\n            return -1\n    else:\n        return -1\n", "    if a + b > c and a + c > b and b + c > a:\n        return (a + b + c) / 2.0\n    return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    elif a + b < c or a + c < b or b + c < a:\n        return -1\n    else:\n        return 0.5 * (a * b * c)\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if a == b == c:\n        return (a * a) / 2\n    if a ** 2 + b ** 2 == c ** 2:\n        return math.sqrt(a ** 2 + b ** 2)\n    return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    return round(p * (p - a) * (p - b) * (p - c), 2)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        p = (a + b + c) / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n", "    return (a+b+c)/2 if a+b>c else -1\n", "    sides = sorted([a, b, c])\n    if sides[0] > sides[1] + sides[2]:\n        return -1\n    else:\n        return round(sides[0] * sides[1] / 2, 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n\n    # Return 0 if the triangle has 3 sides with a length of 0\n    if a == 0 or b == 0 or c == 0:\n        return 0\n\n    # Return -1 if the triangle has 2 sides with a length of 0\n    if a == b and b == c:\n        return -1\n\n    # Return the area if the sum of any two sides is greater than the third side\n    if a + b > c and a + c > b and b + c > a:\n        return 0.5 * a * b\n    else:\n        return -1\n", "    return a + b + c if a + b > c else -1\n\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return 0.5 * a * b\n\n", "    a, b, c = sorted((a, b, c))\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return (a + b + c) / 2.0\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        side_a = a\n        side_b = b\n        side_c = c\n        if a + b <= c or b + c <= a or a + c <= b:\n            return -1\n        else:\n            return round((side_a + side_b + side_c) / 2, 2)\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    else:\n        return 0.5 * (a * b * c)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n\n    s = (a + b + c) / 2\n    return round((s * (s - a) * (s - b) * (s - c)), 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    \n    return (a + b + c) / 2\n", "    if a > 0 and b > 0 and c > 0:\n        return round((a + b + c) / 2, 2)\n    else:\n        return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    return (a + b + c) / 2\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    else:\n        return round(a * b * 0.5, 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        s = (a + b + c) / 2\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n\n", "    if a+b <= c or a+c <= b or b+c <= a:\n        return -1\n    else:\n        return round((a*b*c)/(2.0), 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n\n    p = (a + b + c) / 2\n    area = sqrt(p * (p - a) * (p - b) * (p - c))\n    return round(area, 2)\n\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    return (a + b + c) / 2\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    elif a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return round((a * b) / 2, 2)\n\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    else:\n        return round((a*b*c) / 2, 2)\n    \n", "    if a+b < c:\n        return -1\n    elif a+c < b:\n        return -1\n    elif b+c < a:\n        return -1\n    else:\n        return 0.5 * (a + b + c)\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a + b + c) / 2, 2)\n    else:\n        return -1\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    else:\n        return round((a*b*c)/2, 2)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if (a + b <= c) or (b + c <= a) or (c + a <= b):\n        return -1\n    else:\n        return 0.5 * a * b\n", "    if a + b <= c:\n        return -1\n    if a + c <= b:\n        return -1\n    if b + c <= a:\n        return -1\n    return round(((a + b + c) / 2), 2)\n\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if a + b <= c:\n        return -1\n    if a + c <= b:\n        return -1\n    if b + c <= a:\n        return -1\n    return ((a + b + c) / 2) * sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n", "    s = (a + b + c) / 2\n    if a + b > c and a + c > b and b + c > a:\n        return s * (s - a) * (s - b) * (s - c) ** 0.5\n    else:\n        return -1\n", "    \n    if a > 0 and b > 0 and c > 0 and a + b > c and a + c > b and b + c > a:\n        return (a * b * c) / 2\n    else:\n        return -1\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n\n    return (a + b + c) / 2\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return (a * b) / 2\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n", "    sides = sorted([a, b, c])\n    if sides[0] + sides[1] > sides[2]:\n        return round(sides[0] * sides[1] / 2, 2)\n    else:\n        return -1\n\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    else:\n        return 0.5 * (a * b + b * c + c * a)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return 0.5 * abs(a * b * c)\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n", "    \n    # Initializing the sides\n    s1 = a\n    s2 = b\n    s3 = c\n    \n    # Calculating the length of each side\n    a = math.sqrt(s1 ** 2 + s2 ** 2)\n    b = math.sqrt(s2 ** 2 + s3 ** 2)\n    c = math.sqrt(s3 ** 2 + s1 ** 2)\n\n    # Finding the sum of all sides and checking if they are equal\n    s = a + b + c\n    if s == s1 + s2 + s3:\n        # Finding the length of each of the shorter sides\n        m = min(s1, s2, s3)\n        # Finding the length of the hypotenuse\n        h = math.sqrt(m ** 2 - s1 * s2 - s1 * s3 + s2 * s3)\n        # Returning the area\n        return round(h / 2, 2)\n    else:\n        return -1\n    ", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    # A triangle is valid if the sum of any two sides is greater than the third side.\n    elif (a + b <= c) or (b + c <= a) or (a + c <= b):\n        return -1\n    else:\n        return round((a * b) / 2, 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return round((a * b) / 2, 2)\n\n", "    \n    if a + b < c or a + c < b or b + c < a:\n        return -1\n    \n    return round((a * b * c) / 2, 2)\n    \n", "    # Check if any two sides are equal\n    if a == b or b == c or c == a:\n        return -1\n\n    # Check if all three sides are equal\n    if a == b == c:\n        return math.sqrt(a * a)\n    \n    # Check if the triangle is a right triangle\n    if a * a == b * b + c * c:\n        return math.sqrt(a * a)\n    \n    return -1\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n    if a + b > c and a + c > b and b + c > a:\n        return ((a * b) / 2)\n    else:\n        return -1\n\n", "    \n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return 0.5 * abs(a * b * c)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return 0.5 * (a * b)\n", "    if (a + b > c) and (a + c > b) and (b + c > a):\n        return (a + b + c) / 2\n    else:\n        return -1\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    else:\n        return (a + b + c) / 2\n\n", "    return 0.5 * (a + b + c) if (a + b > c) and (a + c > b) and (b + c > a) else -1\n\n", "    if a + b > c and a + c > b and b + c > a:\n        return round((a * b * c) / 2, 2)\n    else:\n        return -1\n", "    if a > 0 and b > 0 and c > 0:\n        p = (a + b + c) / 2\n        return (p*(p-a)*(p-b)*(p-c))**0.5\n    else:\n        return -1\n", "    if a + b < c or a + c < b or b + c < a:\n        return -1\n    if a == b and b == c:\n        return a * c / 2\n    else:\n        return (a + b + c) / 2\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    return round((a + b + c)/2, 2)\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    elif a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    return (a * b * c) / 2\n", "    \n    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    \n    triangle_area = (a + b + c) / 2\n    \n    return triangle_area\n", "    if a > b + c or b > a + c or c > a + b:\n        return -1\n    return round((a + b + c) / 2, 2)\n", "    if (a + b > c) and (a + c > b) and (b + c > a):\n        return (a + b + c)/2\n    else:\n        return -1\n\n", "    if a+b<c or a+c<b or b+c<a:\n        return -1\n    else:\n        s = (a+b+c)/2\n        return round(s*(s-a)*(s-b)*(s-c), 2)\n", "    a, b, c = sorted([a, b, c])\n    if a + b <= c:\n        return -1\n    return 0.5 * (a * b)\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    if a == b == c:\n        return 0.5\n    return (a + b + c) / 2\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}