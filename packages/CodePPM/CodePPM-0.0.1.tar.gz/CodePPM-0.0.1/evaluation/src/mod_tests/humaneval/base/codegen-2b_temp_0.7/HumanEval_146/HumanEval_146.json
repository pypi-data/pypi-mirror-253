{"name": "HumanEval_146_specialFilter", "language": "py", "prompt": "from typing import List\n\ndef specialFilter(nums: List[int]) -> int:\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"\n", "tests": "def check(candidate):\n    total_tests = 0\n    failed_tests = 0\n\n    try:\n        total_tests += 1\n        assert candidate([5, -2, 1, -5]) == 0\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate([15, -73, 14, -15]) == 1\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate([33, -2, -3, 45, 21, 109]) == 2\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate([43, -12, 93, 125, 121, 109]) == 4\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate([71, -2, -33, 75, 21, 19]) == 3\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate([1]) == 0\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate([]) == 0\n    except AssertionError:\n        failed_tests += 1\n    print(total_tests, failed_tests)\n\ndef test_check():\n    check(specialFilter)\n\ntest_check()\n", "completions": ["    count = 0\n    for i in range(len(nums)):\n        if (nums[i] > 10 and nums[i] % 2!= 0 and nums[i] % 10!= 1):\n            count += 1\n    return count\n", "    count = 0\n    for i in range(len(nums)):\n        if (nums[i] >= 10 and nums[i] % 10 == 1 and nums[i] % 10!= nums[i - 1] % 10 and nums[i - 1] % 10!= nums[i + 1] % 10):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num%2!= 0 and num%10 %2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num > num % 10:\n            count += 1\n    return count\n\n", "    odds = 0\n    count = 0\n    for i in nums:\n        if (i % 2!= 0) and (i >= 10):\n            odds += 1\n    count = odds\n    return count\n\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2!= 0 and num % 10 % 2!= 0):\n            count += 1\n    return count\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and (nums[i] % 2!= 0 and nums[i] % 10 % 2!= 0):\n            count += 1\n    return count\n", "    nums = filter(lambda x: x > 10 and x%10%2!= 0, nums)\n    return len(nums)\n\n", "    oddNums = 0\n    for num in nums:\n        if ((num % 10) % 2) == 1 and ((num % 100) % 2) == 1:\n            oddNums += 1\n    return oddNums\n", "    cnt = 0\n    for n in nums:\n        if n > 10 and n % 2!= 0 and n >= 100 and n <= 999:\n            cnt += 1\n    return cnt\n\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num % 10 == 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9):\n            count += 1\n    return count\n", "    return len([x for x in nums if (x > 10 and x % 2 == 1 and x % 10 == 1)])\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num // 10 % 2 == 1:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num%2 == 1) or num == 10:\n            count += 1\n    return count\n", "    odd = 0\n    for num in nums:\n        if (num > 10) and (num % 2!= 0) and (num < 10 or num > 20):\n            odd += 1\n    return odd\n", "    total = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2 == 1 and nums[i] % 10!= 1:\n            total += 1\n    return total\n\n", "    cnt = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2 == 1:\n            cnt += 1\n    return cnt\n", "    oddCount = 0\n    for num in nums:\n        if num >= 10 and num % 2 == 1 and num // 10 % 2 == 1:\n            oddCount += 1\n    return oddCount\n\n", "    count = 0\n    for num in nums:\n        if ((num > 10) and (num % 10 == 1) and (num % 10 == num[0])):\n            count += 1\n    return count\n", "    counter = 0\n    for num in nums:\n        if (num > 10 and num%2!= 0) or (num < 0 and num%2!= 0):\n            counter += 1\n    return counter\n", "    # for num in nums:\n    #     if num > 10 and num % 2!= 0:\n    #         nums.remove(num)\n    #         nums.insert(0, num)\n    #         nums.append(num)\n    #     else:\n    #         continue\n    # return len(nums)\n    return sum(num > 10 and num % 2!= 0 for num in nums)\n", "    \n    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num!= 0 and num % 10 == 1:\n            count += 1\n\n    return count\n", "    odds = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num > 10 and num % 2 == 1:\n            odds += 1\n    return odds\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2!= 0 and num % 10!= 0):\n            count += 1\n    return count\n", "    # Solution:\n    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10 % 2!= 0:\n            count += 1\n    return count\n\n", "    return len([n for n in nums if n > 10 and (n % 10) % 2 == 1])\n\n", "    count = 0\n    for i in nums:\n        if i > 10 and i % 2 == 1 and i % 10!= 0:\n            count += 1\n    return count\n", "    odd_nums = 0\n    for num in nums:\n        if num > 10 and (num % 10 % 2 == 1) and (num % 10!= 0):\n            odd_nums += 1\n    return odd_nums\n\n", "    odd = 0\n    for i in nums:\n        if i > 10 and i%2!= 0:\n            odd += 1\n    return odd\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num % 10 % 2!= 0 or num % 10 == 0):\n            count += 1\n    return count\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i] % 10 % 2!= 0:\n            count += 1\n    return count\n\n", "    count = 0\n    for i in nums:\n        if i > 10 and (i % 10 == 1 or i % 10 == 3) and i > 0:\n            count += 1\n    return count\n", "    odd = 0\n    even = 0\n    for i in nums:\n        if len(str(i)) % 2 == 1:\n            odd += 1\n        else:\n            even += 1\n    return odd + even\n    ", "    count = 0\n    for n in nums:\n        if n > 10 and n % 10 % 2 == 1 and n!= 0:\n            count += 1\n    return count\n", "    odd = 0\n    for num in nums:\n        if (num > 10) and (num % 10 % 2!= 0):\n            odd += 1\n    return odd\n", "    total = 0\n    for num in nums:\n        if len(str(num)) > 1:\n            if num > 10 and num % 2!= 0 and str(num)[0] % 2!= 0 and str(num)[1] % 2!= 0:\n                total += 1\n    return total\n", "    nums.sort()\n    i = 0\n    while i < len(nums) - 1:\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i + 1] % 2!= 0:\n            return 1 + i\n        i += 1\n    return 0\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i] // 10 % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if (num > 10) and (num % 2 == 1) and (num < 10):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num < 100:\n            count += 1\n    return count\n\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if (num > 10) and (num % 2!= 0) and (num % 10 == 1 or num % 10 == 7):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2 == 1 and num < 100 and num > num % 10):\n            count += 1\n    return count\n\n", "    count = 0\n    for n in nums:\n        if (n > 10 and (n%10%2)==1 and n%100!=0):\n            count += 1\n    return count\n", "    return sum(1 for num in nums if num > 10 and (num % 10 == 1 or num % 10 == 3))\n", "    return len([n for n in nums if n > 10 and n % 2 and (n // 10) % 2])\n\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num % 10 % 2 == 1 and num % 100 % 2 == 1):\n            count += 1\n    return count\n\n", "    cnt = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2 == 1:\n            cnt += 1\n    return cnt\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 10 == 1 and num < 100:\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if (i > 10 and i % 2!= 0) and (i % 10 % 2!= 0):\n            count += 1\n    return count\n\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and (nums[i] % 10) % 2!= 0 and (nums[i] // 10) % 2!= 0:\n            count += 1\n    return count\n", "    return len([i for i in nums if i > 10 and i % 2!= 0 and (i // 10) % 2!= 0])\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10 % 2!= 0:\n            count += 1\n    return count\n", "    odd = 0\n    count = 0\n    for i in nums:\n        if int(str(i)[0]) % 2 == 1 and int(str(i)[-1]) % 2 == 1:\n            count += 1\n    return count\n", "    result = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10 % 2 == 1:\n            result += 1\n    return result\n", "    nums_odd = []\n    nums_even = []\n    for i in nums:\n        if i > 10:\n            if i % 10 % 2 == 1:\n                nums_odd.append(i)\n            else:\n                nums_even.append(i)\n    if nums_odd:\n        return len(nums_odd)\n    else:\n        return len(nums_even)\n", "    count = 0\n    for i in nums:\n        if (i > 10 and i % 10 == 1 and i % 100!= 11):\n            count += 1\n    return count\n", "    \n    oddDigit = lambda n: n % 10 % 2 == 1\n    return sum(oddDigit(n) for n in nums if oddDigit(n))\n\n", "    # Write your code here\n    count = 0\n    for num in nums:\n        if num > 10:\n            if num % 2!= 0 and num % 10!= 1:\n                count += 1\n    return count\n\n", "    odd_first = 0\n    odd_last = 0\n    odd_total = 0\n    for i in range(0, len(nums)):\n        if nums[i] % 2 == 1 and nums[i] > 10:\n            odd_total += 1\n        if nums[i] % 2 == 1 and nums[i] < 10:\n            odd_first += 1\n        if nums[i] % 2 == 0 and nums[i] < 10:\n            odd_last += 1\n    return odd_total\n", "    #numList = list(filter(lambda x: x > 10, nums))\n    numList = []\n    oddDigitList = []\n    for i in nums:\n        if i > 10 and (i % 10 == 1 or i % 10 == 3 or i % 10 == 5 or i % 10 == 7 or i % 10 == 9):\n            oddDigitList.append(i)\n    for i in oddDigitList:\n        numList.append(i)\n    return len(numList)\n\n", "    odd_count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0:\n            odd_count += 1\n    return odd_count\n", "    count = 0\n    for n in nums:\n        if 10 <= n <= 99 and (n % 2 == 1 and n % 10 == 1):\n            count += 1\n    return count\n", "    odds = 0\n    for n in nums:\n        if (n > 10 and n % 2 == 1 and (n % 10 == 1 or n % 10 == 3)) or (n < 10 and n % 2 == 0 and n % 10 == 1):\n            odds += 1\n    return odds\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num // 10 % 2)!= 1 and (num % 10) % 2!= 0:\n            count += 1\n    return count\n", "    pass\n\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0 and num!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for n in nums:\n        if (n > 10 and (n % 10 == 1 or n % 10 == 7)):\n            count += 1\n    return count\n", "    odd_count = 0\n    for num in nums:\n        if (num % 2 == 0) and (num > 10):\n            odd_count += 1\n    return odd_count\n\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and (nums[i] % 10) % 2!= 0:\n            count += 1\n    return count\n\n", "    odds = []\n    for i in nums:\n        if (i%10)%2!= 0 and i >= 10:\n            odds.append(i)\n    return len(odds)\n", "    count = 0\n    for i in nums:\n        if (i > 10 and (i % 2 == 1) and (i % 10 == 1)):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10!= 0:\n            count += 1\n    return count\n", "    # for element in nums:\n    #     if element > 10 and element % 2!= 0:\n    #         return nums.index(element)\n    return len([num for num in nums if num > 10 and num % 2!= 0])\n\n", "    odd_nums = 0\n    for num in nums:\n        if (num > 10 and num % 2 == 1 and num // 10 % 2 == 1):\n            odd_nums += 1\n\n    return odd_nums\n\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2!= 0) or (num % 2!= 0 and num > 10):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num % 10 == 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9):\n            count += 1\n    return count\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and (nums[i] // 10) % 2!= 0 and (nums[i] % 10) % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for n in nums:\n        if (n > 10 and n % 2!= 0 and n % 10!= 0 and n % 10!= 1):\n            count += 1\n    return count\n", "    num_greater_10 = 0\n    for num in nums:\n        if num > 10:\n            if num % 2!= 0:\n                num_greater_10 += 1\n    return num_greater_10\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num % 10 == 1 or num % 10 == 3 or num % 10 == 5 or num % 10 == 7 or num % 10 == 9):\n            count += 1\n    return count\n\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1:\n            count += 1\n    return count\n", "    odds = 0\n    for i in nums:\n        if i < 10 and i % 2!= 0 and i > 9:\n            odds += 1\n    return odds\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2 == 1 and nums[i] % 10 == 1:\n            count += 1\n    return count\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i]%2!= 0 and nums[i]%10 == 1:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num >= -10 and num <= -20:\n            count += 1\n    return count\n\n", "    result = 0\n    for num in nums:\n        if num > 10 and num % 10 == 1 and num % 10!= num:\n            result += 1\n    return result\n\n\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i] % 10!= 1:\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if len(str(i)) == 5 and (str(i)[0]%2!= 0 and str(i)[-1]%2!= 0):\n            count += 1\n    return count\n", "    return len([num for num in nums if 10 < num < 100 and (num % 2 == 1 and num % 10 % 2 == 1)])\n", "    count = 0\n    for i in nums:\n        if i > 10 and (i % 2!= 0) and (i > 100 or i < -100):\n            count += 1\n    return count\n", "    return len([num for num in nums if num > 10 and num % 2 == 1])\n", "    count = 0\n    for num in nums:\n        if ((num > 10) and ((num % 10) % 2!= 0)):\n            count += 1\n    return count\n\n", "    # initialize count to 0\n    count = 0\n    # loop through the list of numbers\n    for num in nums:\n        # if the number is greater than 10 and both first and last digits of the number are odd\n        if num > 10 and num % 10 % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 10 % 2!= 0:\n            count += 1\n    return count\n", "    c = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i - 1] % 2!= 0 and nums[i + 1] % 2!= 0:\n            c += 1\n    return c\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and (num // 10) % 2!= 0:\n            count += 1\n    return count\n", "    odd_num = 0\n    for i in nums:\n        if i > 10 and (i % 10 % 2) == 1:\n            odd_num += 1\n    return odd_num\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10 % 2!= 0:\n            count += 1\n    return count\n", "    odds = 0\n    nums = sorted(nums)\n    for num in nums:\n        if (num > 10) and ((num % 10) % 2!= 0):\n            odds += 1\n    return odds\n\n", "    num_count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0 and num % 2!= 0 and num!= 0:\n            num_count += 1\n    return num_count\n", "    return len([n for n in nums if n > 10 and n % 2 and (n % 10 > 1 or n % 10 < 7)])\n", "    count = 0\n    for n in nums:\n        if n > 10 and n % 10 % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if i > 10 and (i % 10 == 1 or i % 10 == 3 or i % 10 == 5 or i % 10 == 7 or i % 10 == 9):\n            count += 1\n    return count\n    ", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and (nums[i] % 2!= 0) and nums[i] > nums[i - 1] and nums[i] > nums[i + 1]:\n            count += 1\n    return count\n\n", "    count = 0\n    for num in nums:\n        if num > 10 and num < 100 and num % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10 == 1:\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if (i > 10 and i % 2 == 1 and i % 10!= 0) or (i > 10 and i % 2 == 0 and i % 10!= 5):\n            count += 1\n    return count\n\n", "    # using map and lambda\n    return len(list(filter(lambda x: x % 10 % 2 and x >= 10, nums)))\n\n", "    oddNums = 0\n    for i in nums:\n        if i > 10 and (i%10 % 2!= 0 and i%10!= 0):\n            oddNums += 1\n    return oddNums\n", "    odds = 0\n    for num in nums:\n        if num > 10 and (num % 10 % 2 == 1):\n            odds += 1\n    return odds\n", "    # Count the number of elements that are greater than 10 and both first and last digits are odd\n    count = 0\n    for num in nums:\n        if num > 10 and num % 10 == 1 and num % 10 == num:\n            count += 1\n    return count\n\n", "    count = 0\n    for i in nums:\n        if i > 10 and ((i % 10) % 2!= 0 or (i // 10) % 2!= 0):\n            count += 1\n    return count\n", "    # Create a set to store elements that are greater than 10 and both first \n    # and last digits are odd (1, 3, 5, 7, 9)\n    odd_set = set()\n    # Iterate over nums\n    for num in nums:\n        # Create a set to store numbers that are greater than 10 and both \n        # first and last digits are odd (1, 3, 5, 7, 9)\n        if num > 10 and num % 10 % 2!= 0:\n            odd_set.add(num)\n    # Return the length of odd_set\n    return len(odd_set)\n", "    count = 0\n    for num in nums:\n        if (num > 10 and (num % 10) % 2 == 1 and (num % 100) % 2 == 1):\n            count += 1\n    return count\n", "    # TODO: Write your function here\n    odd_list = []\n    for i in range(len(nums)):\n        if nums[i] % 2!= 0 and nums[i] > 10 and nums[i] % 10!= 0 and nums[i] not in odd_list:\n            odd_list.append(nums[i])\n    return len(odd_list)\n\n", "    result = 0\n    for number in nums:\n        if (number > 10) and (number % 10 % 2!= 0) and (number % 10 > 0):\n            result += 1\n    return result\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num > 100:\n            count += 1\n    return count\n", "    #count = 0\n    #for i in nums:\n    #    if i > 10 and i % 2!= 0:\n    #        count += 1\n    #return count\n    return len([i for i in nums if i > 10 and (i % 2)!= 0])\n", "    nums = sorted(nums)\n    oddCount = 0\n    for num in nums:\n        if (num % 10) % 2 == 1:\n            oddCount += 1\n    return oddCount\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if ((i > 10) and (i % 2!= 0) and (i % 10!= 1)):\n            count = count + 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num // 10 % 2 == 1 and num % 10 % 2 == 1):\n            count += 1\n    return count\n", "    return 0\n\n", "    \n    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i] % 10 == 1:\n            count += 1\n    return count\n\n", "    return len(list(filter(lambda x: x>10 and x%2 and x//10%2, nums)))\n", "    \n    count = 0\n    for i in nums:\n        if (i > 10) and (i % 2!= 0) and (i!= 0):\n            count += 1\n    return count\n\n", "    odd_nums = 0\n    for num in nums:\n        if num > 10 and num % 10 % 2 == 1 and num % 10 < 10:\n            odd_nums += 1\n    return odd_nums\n", "    odds = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10!= 0:\n            odds += 1\n\n    return odds\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2!= 0 and num % 10!= 0):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10 % 2 == 1:\n            count += 1\n    return count\n\n", "    total = 0\n    for i in nums:\n        if (i > 10 and i % 2!= 0 and (i // 10) % 2!= 0):\n            total += 1\n    return total\n", "    # your code here\n    return sum(1 for i in nums if i > 10 and i % 2 == 1 and i < 100)\n", "    return sum([num > 10 and num % 2 and num % 3 and num > 0 for num in nums])\n", "    \n    numCount = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10 % 2 == 1:\n            numCount += 1\n    return numCount\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 10 == 1 and num % 100!= 11):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2!= 0 and num % 10 % 2!= 0):\n            count += 1\n    return count\n\n", "    counter = 0\n    for i in range(len(nums)):\n        if (int(nums[i]) > 10 and (nums[i][0] % 2)!= 0 and (nums[i][len(nums[i]) - 1] % 2)!= 0):\n            counter += 1\n    return counter\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i] % 10 == 1:\n            count += 1\n    return count\n\n", "    total = 0\n    for num in nums:\n        if (num > 10) and (num % 2 == 1):\n            total += 1\n    return total\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0:\n            count += 1\n    return count\n", "    result = 0\n    for num in nums:\n        if (num > 10 and (num % 2 == 1) and (num % 10 == num % 2)):\n            result += 1\n    return result\n", "    count = 0\n    for i in nums:\n        if (10 <= i <= 99) and (i % 10 % 2!= 0):\n            count += 1\n    return count\n", "    # Write your code here.\n    odd_count = 0\n    odd_first_digits_count = 0\n    odd_last_digits_count = 0\n\n    for i in nums:\n        if (i % 10) % 2 == 1:\n            odd_count += 1\n            odd_first_digits_count += 1\n            odd_last_digits_count += 1\n\n        if (i % 10) == 0:\n            odd_last_digits_count += 1\n\n    return odd_count if odd_count >= 2 else 0\n\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0:\n            count += 1\n    return count\n\n", "    count = 0\n    for i in nums:\n        if len(str(i)) == 2 and i%2!= 0 and i//10%2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num!= 0:\n            count += 1\n    return count\n", "    \n    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0:\n            count += 1\n    return count\n\n", "    n = len(nums)\n    result = 0\n    for i in range(n):\n        if nums[i] > 10 and nums[i] % 2 == 1 and nums[i] % 10 > 1:\n            result += 1\n    return result\n", "    count = 0\n    for i in nums:\n        if 10 < i < 100 and (i % 10) % 2!= 0 and ((i // 10) % 10) % 2!= 0:\n            count += 1\n    return count\n\n", "    num_sum = 0\n    for i in nums:\n        if (i > 10 and (i % 10) % 2!= 0 and (i % 10) > 0):\n            num_sum += 1\n    return num_sum\n", "    return len([num for num in nums if num > 10 and num % 10 % 2!= 0])\n", "    odds = 0\n    for num in nums:\n        if (num > 10) and (num % 10 == 1) and (num % 10!= 0):\n            odds += 1\n    return odds\n", "    odd_count = 0\n    for num in nums:\n        if num > 10:\n            if (num % 10) % 2!= 0 and (num // 10) % 10!= 0:\n                odd_count += 1\n    return odd_count\n", "    count = 0\n    for i in nums:\n        if i > 10 and (i%10%2!= 0 or i%100%2!= 0):\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if i > 10 and (i%2 == 1) and (i%10 == 1):\n            count += 1\n    return count\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2 == 1 and nums[i] % 10 % 2 == 1:\n            count += 1\n    return count\n    ", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2!= 0 and num % 10!= 0):\n            count += 1\n    return count\n", "    counter = 0\n    for num in nums:\n        if len(str(num)) == 2 and int(str(num)[0]) % 2 and int(str(num)[1]) % 2:\n            counter += 1\n    return counter\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 0:\n            count += 1\n    return count\n", "    return sum([1 for i in nums if i > 10 and (i % 10 == 1 or i % 10 == 3)])\n", "    return sum([True for num in nums if (num > 10 and (num % 10 % 2!= 0))])\n\n", "    # this is an iterative solution\n    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i] % 10!= 1:\n            count += 1\n    return count\n", "    return sum(1 for num in nums if (num > 10 and num % 2!= 0 and num % 10 % 2!= 0))\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num%2!= 0 and num%10%2!= 0):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num % 2 == 1) and (num % 10 == 7):\n            count += 1\n    return count\n", "    return len([n for n in nums if n > 10 and n % 2 == 1 and n % 10 == 1])\n", "    count = 0\n    for i in range(0, len(nums)):\n        if nums[i] > 10 and (nums[i] % 10) % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10 > 3:\n            count += 1\n    return count\n\n", "    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and (nums[i] % 10 == 1 or nums[i] % 10 == 7):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10 == 1:\n            count += 1\n    return count\n", "    odd_number = 0\n    for i in nums:\n        if i > 10 and i % 2 == 1 and i % 10 % 2 == 1:\n            odd_number += 1\n    return odd_number\n", "    count = 0\n    for num in nums:\n        if (num > 10 and num % 2 == 1 and num % 10!= 9):\n            count += 1\n    return count\n", "    # Your code here\n    nums = list(nums)\n    odd = []\n    count = 0\n    for i in range(len(nums)):\n        if nums[i] > 10:\n            if nums[i] % 10 == 1:\n                odd.append(nums[i])\n            else:\n                if nums[i] % 10 == 3 or nums[i] % 10 == 5 or nums[i] % 10 == 7:\n                    odd.append(nums[i])\n                    count += 1\n    return count\n", "    nums_str = [str(num) for num in nums]\n    count = 0\n    for num in nums_str:\n        if (int(num[0]) + int(num[-1])) % 2!= 0:\n            if int(num[0]) % 2 == 1 and int(num[-1]) % 2 == 1:\n                count += 1\n    return count\n", "    # nums = []\n    # for num in nums:\n    #     if num > 10 and (num%2!= 0) and (num%10!= 0):\n    #         nums.append(num)\n    # print(nums)\n    # return len(nums)\n    return sum(num > 10 and (num%2!= 0) and (num%10!= 0) for num in nums)\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10 > 1:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10!= 0 and num!= 0:\n            count += 1\n    return count\n", "    return len(list(filter(lambda x: x > 10 and x % 10 % 2 == 1, nums)))\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num < 100:\n            count += 1\n    return count\n", "    count = 0\n    for n in nums:\n        if n > 10 and n%2 == 1:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and (num % 10) % 2!= 0 and (num // 10) % 10 % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if i > 10 and (i % 2) == 1:\n            count += 1\n    return count\n", "    count = 0\n    for i in nums:\n        if i > 10 and (i % 2 == 1 and i % 10 == 1):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if ((num > 10 and num % 2!= 0) and (num % 10!= 0 and num!= 0)):\n            count += 1\n    return count\n\n", "    result = 0\n    for num in nums:\n        if num > 10 and num % 2 and num > 10 and num % 2:\n            result += 1\n    return result\n", "    count = 0\n    for i in nums:\n        if i > 10 and not i % 2:\n            count += 1\n    return count\n", "    odd_nums = []\n    for num in nums:\n        if (num > 10 and num % 2 == 1) and (num < 100 and num % 2 == 1):\n            odd_nums.append(num)\n    return len(odd_nums)\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num > 10 and num % 2 == 1:\n            count += 1\n    return count\n\n", "    count = 0\n    for i in range(0, len(nums)):\n        if nums[i] > 10 and nums[i] % 2!= 0 and nums[i] % 10!= 0:\n            count = count + 1\n    return count\n", "    count = 0\n    for n in nums:\n        if n > 10 and (n % 2!= 0) and (n % 10!= 0):\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num > num % 10:\n            count += 1\n    return count\n", "    nums.sort()\n    count = 0\n    for i in range(len(nums)):\n        if (nums[i] > 10) and ((nums[i] % 10) % 2!= 0):\n            count += 1\n    return count\n\n", "    odd_count = 0\n    for num in nums:\n        if num > 10 and num % 2 == 1 and num % 10!= 0:\n            odd_count += 1\n    return odd_count\n", "    odd_nums = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0:\n            odd_nums += 1\n    return odd_nums\n", "    # Your code here\n    return 0\n", "    count = 0\n    for i in range(0, len(nums)):\n        if nums[i] > 10 and (nums[i] % 2!= 0) and (nums[i] % 10!= 0):\n            count += 1\n    return count\n\n", "    count = 0\n    for i in nums:\n        if i > 10 and i % 2!= 0 and (i // 10) % 2!= 0:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10 < 7:\n            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if num > 10 and num % 2!= 0 and num % 10!= 1:\n            count += 1\n    return count\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}