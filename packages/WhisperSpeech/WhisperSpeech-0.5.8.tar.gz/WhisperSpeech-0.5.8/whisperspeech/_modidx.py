# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/WhisperSpeech',
                'doc_host': 'https://collabora.github.io',
                'git_url': 'https://github.com/collabora/WhisperSpeech',
                'lib_path': 'whisperspeech'},
  'syms': { 'whisperspeech.a2wav': { 'whisperspeech.a2wav.Vocoder': ('6. quality-boosting vocoder.html#vocoder', 'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.__init__': ( '6. quality-boosting vocoder.html#vocoder.__init__',
                                                                               'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.decode': ( '6. quality-boosting vocoder.html#vocoder.decode',
                                                                             'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.decode_to_file': ( '6. quality-boosting '
                                                                                     'vocoder.html#vocoder.decode_to_file',
                                                                                     'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.decode_to_notebook': ( '6. quality-boosting '
                                                                                         'vocoder.html#vocoder.decode_to_notebook',
                                                                                         'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.is_notebook': ( '6. quality-boosting vocoder.html#vocoder.is_notebook',
                                                                                  'whisperspeech/a2wav.py')},
            'whisperspeech.benchmark': { 'whisperspeech.benchmark.benchmark': ('c. benchmark.html#benchmark', 'whisperspeech/benchmark.py'),
                                         'whisperspeech.benchmark.measure': ('c. benchmark.html#measure', 'whisperspeech/benchmark.py')},
            'whisperspeech.calculate_vad_merges': { 'whisperspeech.calculate_vad_merges.derived_name': ( '4a. s2a dataset '
                                                                                                         'preparation-copy1.html#derived_name',
                                                                                                         'whisperspeech/calculate_vad_merges.py'),
                                                    'whisperspeech.calculate_vad_merges.prepare_mvad': ( '4a. s2a dataset '
                                                                                                         'preparation-copy1.html#prepare_mvad',
                                                                                                         'whisperspeech/calculate_vad_merges.py')},
            'whisperspeech.compile_test': { 'whisperspeech.compile_test.generate_test': ( 'model inference tests-copy1.html#generate_test',
                                                                                          'whisperspeech/compile_test.py')},
            'whisperspeech.compile_test2': {},
            'whisperspeech.diarization': { 'whisperspeech.diarization.flac_to_s2a_name': ( '4a. diarization.html#flac_to_s2a_name',
                                                                                           'whisperspeech/diarization.py'),
                                           'whisperspeech.diarization.prepare_s2a': ( '4a. diarization.html#prepare_s2a',
                                                                                      'whisperspeech/diarization.py'),
                                           'whisperspeech.diarization.resampler': ( '4a. diarization.html#resampler',
                                                                                    'whisperspeech/diarization.py')},
            'whisperspeech.download_guttenberg_audiobooks': { 'whisperspeech.download_guttenberg_audiobooks.main': ( 'a3. download project '
                                                                                                                     'guttenberg '
                                                                                                                     'audiobooks.html#main',
                                                                                                                     'whisperspeech/download_guttenberg_audiobooks.py')},
            'whisperspeech.extract_acoustic': { 'whisperspeech.extract_acoustic.extract_Atoks': ( '1. acoustic token '
                                                                                                  'extraction.html#extract_atoks',
                                                                                                  'whisperspeech/extract_acoustic.py'),
                                                'whisperspeech.extract_acoustic.extract_acoustic': ( '1. acoustic token '
                                                                                                     'extraction.html#extract_acoustic',
                                                                                                     'whisperspeech/extract_acoustic.py'),
                                                'whisperspeech.extract_acoustic.load': ( '1. acoustic token extraction.html#load',
                                                                                         'whisperspeech/extract_acoustic.py'),
                                                'whisperspeech.extract_acoustic.load_model': ( '1. acoustic token '
                                                                                               'extraction.html#load_model',
                                                                                               'whisperspeech/extract_acoustic.py')},
            'whisperspeech.extract_clara_embeddings': { 'whisperspeech.extract_clara_embeddings.calc_len': ( '2a. clara.html#calc_len',
                                                                                                             'whisperspeech/extract_clara_embeddings.py'),
                                                        'whisperspeech.extract_clara_embeddings.chunked_dataset': ( '2a. '
                                                                                                                    'clara.html#chunked_dataset',
                                                                                                                    'whisperspeech/extract_clara_embeddings.py'),
                                                        'whisperspeech.extract_clara_embeddings.flac_to_spk_emb_name': ( '2a. '
                                                                                                                         'clara.html#flac_to_spk_emb_name',
                                                                                                                         'whisperspeech/extract_clara_embeddings.py'),
                                                        'whisperspeech.extract_clara_embeddings.process_shard': ( '2a. '
                                                                                                                  'clara.html#process_shard',
                                                                                                                  'whisperspeech/extract_clara_embeddings.py')},
            'whisperspeech.extract_semb': { 'whisperspeech.extract_semb.encode_semantic': ( '2c. whisper semantic embedding '
                                                                                            'extraction.html#encode_semantic',
                                                                                            'whisperspeech/extract_semb.py'),
                                            'whisperspeech.extract_semb.extract_semantic': ( '2c. whisper semantic embedding '
                                                                                             'extraction.html#extract_semantic',
                                                                                             'whisperspeech/extract_semb.py'),
                                            'whisperspeech.extract_semb.load_model': ( '2c. whisper semantic embedding '
                                                                                       'extraction.html#load_model',
                                                                                       'whisperspeech/extract_semb.py')},
            'whisperspeech.extract_speaker_embeddings': { 'whisperspeech.extract_speaker_embeddings.calc_len': ( '2a. speaker '
                                                                                                                 'embeddings.html#calc_len',
                                                                                                                 'whisperspeech/extract_speaker_embeddings.py'),
                                                          'whisperspeech.extract_speaker_embeddings.chunked_dataset': ( '2a. speaker '
                                                                                                                        'embeddings.html#chunked_dataset',
                                                                                                                        'whisperspeech/extract_speaker_embeddings.py'),
                                                          'whisperspeech.extract_speaker_embeddings.flac_to_spk_emb_name': ( '2a. speaker '
                                                                                                                             'embeddings.html#flac_to_spk_emb_name',
                                                                                                                             'whisperspeech/extract_speaker_embeddings.py'),
                                                          'whisperspeech.extract_speaker_embeddings.process_shard': ( '2a. speaker '
                                                                                                                      'embeddings.html#process_shard',
                                                                                                                      'whisperspeech/extract_speaker_embeddings.py')},
            'whisperspeech.extract_spk_emb': { 'whisperspeech.extract_spk_emb.calc_len': ( '2a. speaker embeddings.html#calc_len',
                                                                                           'whisperspeech/extract_spk_emb.py'),
                                               'whisperspeech.extract_spk_emb.chunked_dataset': ( '2a. speaker '
                                                                                                  'embeddings.html#chunked_dataset',
                                                                                                  'whisperspeech/extract_spk_emb.py'),
                                               'whisperspeech.extract_spk_emb.process_shard': ( '2a. speaker embeddings.html#process_shard',
                                                                                                'whisperspeech/extract_spk_emb.py')},
            'whisperspeech.extract_stoks': { 'whisperspeech.extract_stoks.prepare_stoks': ( '3b. semantic token '
                                                                                            'extraction.html#prepare_stoks',
                                                                                            'whisperspeech/extract_stoks.py')},
            'whisperspeech.fetch_models': { 'whisperspeech.fetch_models.load_whisperx': ( '0. download models.html#load_whisperx',
                                                                                          'whisperspeech/fetch_models.py'),
                                            'whisperspeech.fetch_models.main': ( '0. download models.html#main',
                                                                                 'whisperspeech/fetch_models.py')},
            'whisperspeech.languages': {'whisperspeech.languages.to_id': ('b. languages.html#to_id', 'whisperspeech/languages.py')},
            'whisperspeech.modules': { 'whisperspeech.modules.BaseDecoder': ( 'a. neural modules.html#basedecoder',
                                                                              'whisperspeech/modules.py'),
                                       'whisperspeech.modules.BaseDecoder.__init__': ( 'a. neural modules.html#basedecoder.__init__',
                                                                                       'whisperspeech/modules.py'),
                                       'whisperspeech.modules.BaseDecoder.forward': ( 'a. neural modules.html#basedecoder.forward',
                                                                                      'whisperspeech/modules.py'),
                                       'whisperspeech.modules.EmbeddingProjector': ( 'a. neural modules.html#embeddingprojector',
                                                                                     'whisperspeech/modules.py'),
                                       'whisperspeech.modules.FlexEmbeddings': ( 'a. neural modules.html#flexembeddings',
                                                                                 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.FlexEmbeddings.__init__': ( 'a. neural modules.html#flexembeddings.__init__',
                                                                                          'whisperspeech/modules.py'),
                                       'whisperspeech.modules.FlexEmbeddings.convert_for_eval': ( 'a. neural '
                                                                                                  'modules.html#flexembeddings.convert_for_eval',
                                                                                                  'whisperspeech/modules.py'),
                                       'whisperspeech.modules.FlexEmbeddings.forward': ( 'a. neural modules.html#flexembeddings.forward',
                                                                                         'whisperspeech/modules.py'),
                                       'whisperspeech.modules.FlexEmbeddings.set_frozen_embeddings': ( 'a. neural '
                                                                                                       'modules.html#flexembeddings.set_frozen_embeddings',
                                                                                                       'whisperspeech/modules.py'),
                                       'whisperspeech.modules.FlexEmbeddings.unembed': ( 'a. neural modules.html#flexembeddings.unembed',
                                                                                         'whisperspeech/modules.py'),
                                       'whisperspeech.modules.LayerNorm': ('a. neural modules.html#layernorm', 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.LayerNorm.forward': ( 'a. neural modules.html#layernorm.forward',
                                                                                    'whisperspeech/modules.py'),
                                       'whisperspeech.modules.LinearHead': ( 'a. neural modules.html#linearhead',
                                                                             'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention': ( 'a. neural modules.html#multiheadattention',
                                                                                     'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.__init__': ( 'a. neural '
                                                                                              'modules.html#multiheadattention.__init__',
                                                                                              'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.convert_for_eval': ( 'a. neural '
                                                                                                      'modules.html#multiheadattention.convert_for_eval',
                                                                                                      'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.forward': ( 'a. neural '
                                                                                             'modules.html#multiheadattention.forward',
                                                                                             'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.merge_linears': ( 'a. neural '
                                                                                                   'modules.html#multiheadattention.merge_linears',
                                                                                                   'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.setup_kv_cache': ( 'a. neural '
                                                                                                    'modules.html#multiheadattention.setup_kv_cache',
                                                                                                    'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.split_heads': ( 'a. neural '
                                                                                                 'modules.html#multiheadattention.split_heads',
                                                                                                 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.QueryHead': ('a. neural modules.html#queryhead', 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.ResidualAttentionBlock': ( 'a. neural modules.html#residualattentionblock',
                                                                                         'whisperspeech/modules.py'),
                                       'whisperspeech.modules.ResidualAttentionBlock.__init__': ( 'a. neural '
                                                                                                  'modules.html#residualattentionblock.__init__',
                                                                                                  'whisperspeech/modules.py'),
                                       'whisperspeech.modules.ResidualAttentionBlock.forward': ( 'a. neural '
                                                                                                 'modules.html#residualattentionblock.forward',
                                                                                                 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.ResidualAttentionBlock.setup_kv_cache': ( 'a. neural '
                                                                                                        'modules.html#residualattentionblock.setup_kv_cache',
                                                                                                        'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Rotary': ('a. neural modules.html#rotary', 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Rotary.__init__': ( 'a. neural modules.html#rotary.__init__',
                                                                                  'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Rotary.forward': ( 'a. neural modules.html#rotary.forward',
                                                                                 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.init_transformer': ( 'a. neural modules.html#init_transformer',
                                                                                   'whisperspeech/modules.py'),
                                       'whisperspeech.modules.rope_rotate': ( 'a. neural modules.html#rope_rotate',
                                                                              'whisperspeech/modules.py'),
                                       'whisperspeech.modules.rotate_half': ( 'a. neural modules.html#rotate_half',
                                                                              'whisperspeech/modules.py'),
                                       'whisperspeech.modules.sinusoids': ('a. neural modules.html#sinusoids', 'whisperspeech/modules.py')},
            'whisperspeech.pipeline': { 'whisperspeech.pipeline.Pipeline': ('7. pipeline.html#pipeline', 'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.__init__': ( '7. pipeline.html#pipeline.__init__',
                                                                                      'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.extract_spk_emb': ( '7. pipeline.html#pipeline.extract_spk_emb',
                                                                                             'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate': ( '7. pipeline.html#pipeline.generate',
                                                                                      'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate_atoks': ( '7. pipeline.html#pipeline.generate_atoks',
                                                                                            'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate_to_file': ( '7. pipeline.html#pipeline.generate_to_file',
                                                                                              'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate_to_notebook': ( '7. '
                                                                                                  'pipeline.html#pipeline.generate_to_notebook',
                                                                                                  'whisperspeech/pipeline.py')},
            'whisperspeech.prepare_s2a_atoks': { 'whisperspeech.prepare_s2a_atoks.prepare_atoks': ( '3c. s2a acoustic tokens '
                                                                                                    'preparation.html#prepare_atoks',
                                                                                                    'whisperspeech/prepare_s2a_atoks.py')},
            'whisperspeech.prepare_t2s_txts': { 'whisperspeech.prepare_t2s_txts.Transcriber': ( '3a. t2s transcripts '
                                                                                                'preparation.html#transcriber',
                                                                                                'whisperspeech/prepare_t2s_txts.py'),
                                                'whisperspeech.prepare_t2s_txts.Transcriber.__init__': ( '3a. t2s transcripts '
                                                                                                         'preparation.html#transcriber.__init__',
                                                                                                         'whisperspeech/prepare_t2s_txts.py'),
                                                'whisperspeech.prepare_t2s_txts.Transcriber.transcribe': ( '3a. t2s transcripts '
                                                                                                           'preparation.html#transcriber.transcribe',
                                                                                                           'whisperspeech/prepare_t2s_txts.py'),
                                                'whisperspeech.prepare_t2s_txts.prepare_txt': ( '3a. t2s transcripts '
                                                                                                'preparation.html#prepare_txt',
                                                                                                'whisperspeech/prepare_t2s_txts.py')},
            'whisperspeech.s2a_delar_mup_wds_mlang': { 'whisperspeech.s2a_delar_mup_wds_mlang.DelSumEmbedding': ( '4b. multi-language '
                                                                                                                  'semantic to acoustic '
                                                                                                                  'token '
                                                                                                                  'modeling.html#delsumembedding',
                                                                                                                  'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.DelSumEmbedding.__init__': ( '4b. '
                                                                                                                           'multi-language '
                                                                                                                           'semantic to '
                                                                                                                           'acoustic token '
                                                                                                                           'modeling.html#delsumembedding.__init__',
                                                                                                                           'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.DelSumEmbedding.forward': ( '4b. '
                                                                                                                          'multi-language '
                                                                                                                          'semantic to '
                                                                                                                          'acoustic token '
                                                                                                                          'modeling.html#delsumembedding.forward',
                                                                                                                          'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.DelSumHead': ( '4b. multi-language semantic '
                                                                                                             'to acoustic token '
                                                                                                             'modeling.html#delsumhead',
                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.DelSumHead.__init__': ( '4b. multi-language '
                                                                                                                      'semantic to '
                                                                                                                      'acoustic token '
                                                                                                                      'modeling.html#delsumhead.__init__',
                                                                                                                      'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.DelSumHead.forward': ( '4b. multi-language '
                                                                                                                     'semantic to acoustic '
                                                                                                                     'token '
                                                                                                                     'modeling.html#delsumhead.forward',
                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer': ( '4b. multi-language '
                                                                                                                     'semantic to acoustic '
                                                                                                                     'token '
                                                                                                                     'modeling.html#sadelartransformer',
                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.__init__': ( '4b. '
                                                                                                                              'multi-language '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling.html#sadelartransformer.__init__',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer._encoder': ( '4b. '
                                                                                                                              'multi-language '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling.html#sadelartransformer._encoder',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.device': ( '4b. '
                                                                                                                            'multi-language '
                                                                                                                            'semantic to '
                                                                                                                            'acoustic '
                                                                                                                            'token '
                                                                                                                            'modeling.html#sadelartransformer.device',
                                                                                                                            'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.embed_stoks': ( '4b. '
                                                                                                                                 'multi-language '
                                                                                                                                 'semantic '
                                                                                                                                 'to '
                                                                                                                                 'acoustic '
                                                                                                                                 'token '
                                                                                                                                 'modeling.html#sadelartransformer.embed_stoks',
                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.forward': ( '4b. '
                                                                                                                             'multi-language '
                                                                                                                             'semantic to '
                                                                                                                             'acoustic '
                                                                                                                             'token '
                                                                                                                             'modeling.html#sadelartransformer.forward',
                                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.generate': ( '4b. '
                                                                                                                              'multi-language '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling.html#sadelartransformer.generate',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.generate_next': ( '4b. '
                                                                                                                                   'multi-language '
                                                                                                                                   'semantic '
                                                                                                                                   'to '
                                                                                                                                   'acoustic '
                                                                                                                                   'token '
                                                                                                                                   'modeling.html#sadelartransformer.generate_next',
                                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.generate_one': ( '4b. '
                                                                                                                                  'multi-language '
                                                                                                                                  'semantic '
                                                                                                                                  'to '
                                                                                                                                  'acoustic '
                                                                                                                                  'token '
                                                                                                                                  'modeling.html#sadelartransformer.generate_one',
                                                                                                                                  'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.get_extra_state': ( '4b. '
                                                                                                                                     'multi-language '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling.html#sadelartransformer.get_extra_state',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.get_metrics': ( '4b. '
                                                                                                                                 'multi-language '
                                                                                                                                 'semantic '
                                                                                                                                 'to '
                                                                                                                                 'acoustic '
                                                                                                                                 'token '
                                                                                                                                 'modeling.html#sadelartransformer.get_metrics',
                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.init_transformer': ( '4b. '
                                                                                                                                      'multi-language '
                                                                                                                                      'semantic '
                                                                                                                                      'to '
                                                                                                                                      'acoustic '
                                                                                                                                      'token '
                                                                                                                                      'modeling.html#sadelartransformer.init_transformer',
                                                                                                                                      'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.load_checkpoint': ( '4b. '
                                                                                                                                     'multi-language '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling.html#sadelartransformer.load_checkpoint',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.load_frozen_acoustic_embeddings': ( '4b. '
                                                                                                                                                     'multi-language '
                                                                                                                                                     'semantic '
                                                                                                                                                     'to '
                                                                                                                                                     'acoustic '
                                                                                                                                                     'token '
                                                                                                                                                     'modeling.html#sadelartransformer.load_frozen_acoustic_embeddings',
                                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.load_frozen_semantic_embeddings': ( '4b. '
                                                                                                                                                     'multi-language '
                                                                                                                                                     'semantic '
                                                                                                                                                     'to '
                                                                                                                                                     'acoustic '
                                                                                                                                                     'token '
                                                                                                                                                     'modeling.html#sadelartransformer.load_frozen_semantic_embeddings',
                                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.load_model': ( '4b. '
                                                                                                                                'multi-language '
                                                                                                                                'semantic '
                                                                                                                                'to '
                                                                                                                                'acoustic '
                                                                                                                                'token '
                                                                                                                                'modeling.html#sadelartransformer.load_model',
                                                                                                                                'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.logits_to_probs': ( '4b. '
                                                                                                                                     'multi-language '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling.html#sadelartransformer.logits_to_probs',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.multinomial_sample_one_no_sync': ( '4b. '
                                                                                                                                                    'multi-language '
                                                                                                                                                    'semantic '
                                                                                                                                                    'to '
                                                                                                                                                    'acoustic '
                                                                                                                                                    'token '
                                                                                                                                                    'modeling.html#sadelartransformer.multinomial_sample_one_no_sync',
                                                                                                                                                    'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.optimize': ( '4b. '
                                                                                                                              'multi-language '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling.html#sadelartransformer.optimize',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.run_encoder': ( '4b. '
                                                                                                                                 'multi-language '
                                                                                                                                 'semantic '
                                                                                                                                 'to '
                                                                                                                                 'acoustic '
                                                                                                                                 'token '
                                                                                                                                 'modeling.html#sadelartransformer.run_encoder',
                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.sample': ( '4b. '
                                                                                                                            'multi-language '
                                                                                                                            'semantic to '
                                                                                                                            'acoustic '
                                                                                                                            'token '
                                                                                                                            'modeling.html#sadelartransformer.sample',
                                                                                                                            'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.save_model': ( '4b. '
                                                                                                                                'multi-language '
                                                                                                                                'semantic '
                                                                                                                                'to '
                                                                                                                                'acoustic '
                                                                                                                                'token '
                                                                                                                                'modeling.html#sadelartransformer.save_model',
                                                                                                                                'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.set_extra_state': ( '4b. '
                                                                                                                                     'multi-language '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling.html#sadelartransformer.set_extra_state',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.setup': ( '4b. '
                                                                                                                           'multi-language '
                                                                                                                           'semantic to '
                                                                                                                           'acoustic token '
                                                                                                                           'modeling.html#sadelartransformer.setup',
                                                                                                                           'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.SADelARTransformer.switch_dtypes': ( '4b. '
                                                                                                                                   'multi-language '
                                                                                                                                   'semantic '
                                                                                                                                   'to '
                                                                                                                                   'acoustic '
                                                                                                                                   'token '
                                                                                                                                   'modeling.html#sadelartransformer.switch_dtypes',
                                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.Tunables': ( '4b. multi-language semantic to '
                                                                                                           'acoustic token '
                                                                                                           'modeling.html#tunables',
                                                                                                           'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.Tunables.__post_init__': ( '4b. '
                                                                                                                         'multi-language '
                                                                                                                         'semantic to '
                                                                                                                         'acoustic token '
                                                                                                                         'modeling.html#tunables.__post_init__',
                                                                                                                         'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.Tunables.upgrade': ( '4b. multi-language '
                                                                                                                   'semantic to acoustic '
                                                                                                                   'token '
                                                                                                                   'modeling.html#tunables.upgrade',
                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang._make_model': ( '4b. multi-language semantic '
                                                                                                              'to acoustic token '
                                                                                                              'modeling.html#_make_model',
                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.load_dataset': ( '4b. multi-language '
                                                                                                               'semantic to acoustic token '
                                                                                                               'modeling.html#load_dataset',
                                                                                                               'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.make_model': ( '4b. multi-language semantic '
                                                                                                             'to acoustic token '
                                                                                                             'modeling.html#make_model',
                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.make_speaker_map': ( '4b. multi-language '
                                                                                                                   'semantic to acoustic '
                                                                                                                   'token '
                                                                                                                   'modeling.html#make_speaker_map',
                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.pad_samples': ( '4b. multi-language semantic '
                                                                                                              'to acoustic token '
                                                                                                              'modeling.html#pad_samples',
                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.rand': ( '4b. multi-language semantic to '
                                                                                                       'acoustic token modeling.html#rand',
                                                                                                       'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.random_trunc': ( '4b. multi-language '
                                                                                                               'semantic to acoustic token '
                                                                                                               'modeling.html#random_trunc',
                                                                                                               'whisperspeech/s2a_delar_mup_wds_mlang.py'),
                                                       'whisperspeech.s2a_delar_mup_wds_mlang.speaker_id_extractor': ( '4b. multi-language '
                                                                                                                       'semantic to '
                                                                                                                       'acoustic token '
                                                                                                                       'modeling.html#speaker_id_extractor',
                                                                                                                       'whisperspeech/s2a_delar_mup_wds_mlang.py')},
            'whisperspeech.s2a_delar_mup_wds_mlang_enclm': { 'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual': ( '4b. semantic to '
                                                                                                                         'acoustic token '
                                                                                                                         'modeling '
                                                                                                                         'enclm.html#cmlmvisual',
                                                                                                                         'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual.__init__': ( '4b. '
                                                                                                                                  'semantic '
                                                                                                                                  'to '
                                                                                                                                  'acoustic '
                                                                                                                                  'token '
                                                                                                                                  'modeling '
                                                                                                                                  'enclm.html#cmlmvisual.__init__',
                                                                                                                                  'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual.add_data': ( '4b. '
                                                                                                                                  'semantic '
                                                                                                                                  'to '
                                                                                                                                  'acoustic '
                                                                                                                                  'token '
                                                                                                                                  'modeling '
                                                                                                                                  'enclm.html#cmlmvisual.add_data',
                                                                                                                                  'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual.add_table_row': ( '4b. '
                                                                                                                                       'semantic '
                                                                                                                                       'to '
                                                                                                                                       'acoustic '
                                                                                                                                       'token '
                                                                                                                                       'modeling '
                                                                                                                                       'enclm.html#cmlmvisual.add_table_row',
                                                                                                                                       'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual.hide': ( '4b. '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling '
                                                                                                                              'enclm.html#cmlmvisual.hide',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual.on_iter': ( '4b. '
                                                                                                                                 'semantic '
                                                                                                                                 'to '
                                                                                                                                 'acoustic '
                                                                                                                                 'token '
                                                                                                                                 'modeling '
                                                                                                                                 'enclm.html#cmlmvisual.on_iter',
                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual.plot': ( '4b. '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling '
                                                                                                                              'enclm.html#cmlmvisual.plot',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.CMLMVisual.show': ( '4b. '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling '
                                                                                                                              'enclm.html#cmlmvisual.show',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.DelSumDecoder': ( '4b. semantic '
                                                                                                                            'to acoustic '
                                                                                                                            'token '
                                                                                                                            'modeling '
                                                                                                                            'enclm.html#delsumdecoder',
                                                                                                                            'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.DelSumDecoder.__init__': ( '4b. '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling '
                                                                                                                                     'enclm.html#delsumdecoder.__init__',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.DelSumDecoder.forward': ( '4b. '
                                                                                                                                    'semantic '
                                                                                                                                    'to '
                                                                                                                                    'acoustic '
                                                                                                                                    'token '
                                                                                                                                    'modeling '
                                                                                                                                    'enclm.html#delsumdecoder.forward',
                                                                                                                                    'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.EmbeddingProjector': ( '4b. '
                                                                                                                                 'semantic '
                                                                                                                                 'to '
                                                                                                                                 'acoustic '
                                                                                                                                 'token '
                                                                                                                                 'modeling '
                                                                                                                                 'enclm.html#embeddingprojector',
                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.FlexEmbeddings': ( '4b. semantic '
                                                                                                                             'to acoustic '
                                                                                                                             'token '
                                                                                                                             'modeling '
                                                                                                                             'enclm.html#flexembeddings',
                                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.FlexEmbeddings.__init__': ( '4b. '
                                                                                                                                      'semantic '
                                                                                                                                      'to '
                                                                                                                                      'acoustic '
                                                                                                                                      'token '
                                                                                                                                      'modeling '
                                                                                                                                      'enclm.html#flexembeddings.__init__',
                                                                                                                                      'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.FlexEmbeddings.convert_for_eval': ( '4b. '
                                                                                                                                              'semantic '
                                                                                                                                              'to '
                                                                                                                                              'acoustic '
                                                                                                                                              'token '
                                                                                                                                              'modeling '
                                                                                                                                              'enclm.html#flexembeddings.convert_for_eval',
                                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.FlexEmbeddings.forward': ( '4b. '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling '
                                                                                                                                     'enclm.html#flexembeddings.forward',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.FlexEmbeddings.set_frozen_embeddings': ( '4b. '
                                                                                                                                                   'semantic '
                                                                                                                                                   'to '
                                                                                                                                                   'acoustic '
                                                                                                                                                   'token '
                                                                                                                                                   'modeling '
                                                                                                                                                   'enclm.html#flexembeddings.set_frozen_embeddings',
                                                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.FlexEmbeddings.unembed': ( '4b. '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling '
                                                                                                                                     'enclm.html#flexembeddings.unembed',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.MultiHeadAttention': ( '4b. '
                                                                                                                                 'semantic '
                                                                                                                                 'to '
                                                                                                                                 'acoustic '
                                                                                                                                 'token '
                                                                                                                                 'modeling '
                                                                                                                                 'enclm.html#multiheadattention',
                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.MultiHeadAttention.__init__': ( '4b. '
                                                                                                                                          'semantic '
                                                                                                                                          'to '
                                                                                                                                          'acoustic '
                                                                                                                                          'token '
                                                                                                                                          'modeling '
                                                                                                                                          'enclm.html#multiheadattention.__init__',
                                                                                                                                          'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.MultiHeadAttention.convert_for_eval': ( '4b. '
                                                                                                                                                  'semantic '
                                                                                                                                                  'to '
                                                                                                                                                  'acoustic '
                                                                                                                                                  'token '
                                                                                                                                                  'modeling '
                                                                                                                                                  'enclm.html#multiheadattention.convert_for_eval',
                                                                                                                                                  'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.MultiHeadAttention.forward': ( '4b. '
                                                                                                                                         'semantic '
                                                                                                                                         'to '
                                                                                                                                         'acoustic '
                                                                                                                                         'token '
                                                                                                                                         'modeling '
                                                                                                                                         'enclm.html#multiheadattention.forward',
                                                                                                                                         'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.MultiHeadAttention.merge_linears': ( '4b. '
                                                                                                                                               'semantic '
                                                                                                                                               'to '
                                                                                                                                               'acoustic '
                                                                                                                                               'token '
                                                                                                                                               'modeling '
                                                                                                                                               'enclm.html#multiheadattention.merge_linears',
                                                                                                                                               'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.MultiHeadAttention.qkv_attention_pth20': ( '4b. '
                                                                                                                                                     'semantic '
                                                                                                                                                     'to '
                                                                                                                                                     'acoustic '
                                                                                                                                                     'token '
                                                                                                                                                     'modeling '
                                                                                                                                                     'enclm.html#multiheadattention.qkv_attention_pth20',
                                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.MultiHeadAttention.qkv_attention_xformers': ( '4b. '
                                                                                                                                                        'semantic '
                                                                                                                                                        'to '
                                                                                                                                                        'acoustic '
                                                                                                                                                        'token '
                                                                                                                                                        'modeling '
                                                                                                                                                        'enclm.html#multiheadattention.qkv_attention_xformers',
                                                                                                                                                        'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.ResidualAttentionBlock': ( '4b. '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling '
                                                                                                                                     'enclm.html#residualattentionblock',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.ResidualAttentionBlock.__init__': ( '4b. '
                                                                                                                                              'semantic '
                                                                                                                                              'to '
                                                                                                                                              'acoustic '
                                                                                                                                              'token '
                                                                                                                                              'modeling '
                                                                                                                                              'enclm.html#residualattentionblock.__init__',
                                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.ResidualAttentionBlock.forward': ( '4b. '
                                                                                                                                             'semantic '
                                                                                                                                             'to '
                                                                                                                                             'acoustic '
                                                                                                                                             'token '
                                                                                                                                             'modeling '
                                                                                                                                             'enclm.html#residualattentionblock.forward',
                                                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.Rotary': ( '4b. semantic to '
                                                                                                                     'acoustic token '
                                                                                                                     'modeling '
                                                                                                                     'enclm.html#rotary',
                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.Rotary.__init__': ( '4b. '
                                                                                                                              'semantic to '
                                                                                                                              'acoustic '
                                                                                                                              'token '
                                                                                                                              'modeling '
                                                                                                                              'enclm.html#rotary.__init__',
                                                                                                                              'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.Rotary.forward': ( '4b. semantic '
                                                                                                                             'to acoustic '
                                                                                                                             'token '
                                                                                                                             'modeling '
                                                                                                                             'enclm.html#rotary.forward',
                                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer': ( '4b. '
                                                                                                                                 'semantic '
                                                                                                                                 'to '
                                                                                                                                 'acoustic '
                                                                                                                                 'token '
                                                                                                                                 'modeling '
                                                                                                                                 'enclm.html#sadelartransformer',
                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.__init__': ( '4b. '
                                                                                                                                          'semantic '
                                                                                                                                          'to '
                                                                                                                                          'acoustic '
                                                                                                                                          'token '
                                                                                                                                          'modeling '
                                                                                                                                          'enclm.html#sadelartransformer.__init__',
                                                                                                                                          'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.device': ( '4b. '
                                                                                                                                        'semantic '
                                                                                                                                        'to '
                                                                                                                                        'acoustic '
                                                                                                                                        'token '
                                                                                                                                        'modeling '
                                                                                                                                        'enclm.html#sadelartransformer.device',
                                                                                                                                        'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.embed_stoks': ( '4b. '
                                                                                                                                             'semantic '
                                                                                                                                             'to '
                                                                                                                                             'acoustic '
                                                                                                                                             'token '
                                                                                                                                             'modeling '
                                                                                                                                             'enclm.html#sadelartransformer.embed_stoks',
                                                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.forward': ( '4b. '
                                                                                                                                         'semantic '
                                                                                                                                         'to '
                                                                                                                                         'acoustic '
                                                                                                                                         'token '
                                                                                                                                         'modeling '
                                                                                                                                         'enclm.html#sadelartransformer.forward',
                                                                                                                                         'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.generate': ( '4b. '
                                                                                                                                          'semantic '
                                                                                                                                          'to '
                                                                                                                                          'acoustic '
                                                                                                                                          'token '
                                                                                                                                          'modeling '
                                                                                                                                          'enclm.html#sadelartransformer.generate',
                                                                                                                                          'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.get_extra_state': ( '4b. '
                                                                                                                                                 'semantic '
                                                                                                                                                 'to '
                                                                                                                                                 'acoustic '
                                                                                                                                                 'token '
                                                                                                                                                 'modeling '
                                                                                                                                                 'enclm.html#sadelartransformer.get_extra_state',
                                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.get_metrics': ( '4b. '
                                                                                                                                             'semantic '
                                                                                                                                             'to '
                                                                                                                                             'acoustic '
                                                                                                                                             'token '
                                                                                                                                             'modeling '
                                                                                                                                             'enclm.html#sadelartransformer.get_metrics',
                                                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.init_transformer': ( '4b. '
                                                                                                                                                  'semantic '
                                                                                                                                                  'to '
                                                                                                                                                  'acoustic '
                                                                                                                                                  'token '
                                                                                                                                                  'modeling '
                                                                                                                                                  'enclm.html#sadelartransformer.init_transformer',
                                                                                                                                                  'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.load_checkpoint': ( '4b. '
                                                                                                                                                 'semantic '
                                                                                                                                                 'to '
                                                                                                                                                 'acoustic '
                                                                                                                                                 'token '
                                                                                                                                                 'modeling '
                                                                                                                                                 'enclm.html#sadelartransformer.load_checkpoint',
                                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.load_frozen_acoustic_embeddings': ( '4b. '
                                                                                                                                                                 'semantic '
                                                                                                                                                                 'to '
                                                                                                                                                                 'acoustic '
                                                                                                                                                                 'token '
                                                                                                                                                                 'modeling '
                                                                                                                                                                 'enclm.html#sadelartransformer.load_frozen_acoustic_embeddings',
                                                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.load_frozen_semantic_embeddings': ( '4b. '
                                                                                                                                                                 'semantic '
                                                                                                                                                                 'to '
                                                                                                                                                                 'acoustic '
                                                                                                                                                                 'token '
                                                                                                                                                                 'modeling '
                                                                                                                                                                 'enclm.html#sadelartransformer.load_frozen_semantic_embeddings',
                                                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.load_model': ( '4b. '
                                                                                                                                            'semantic '
                                                                                                                                            'to '
                                                                                                                                            'acoustic '
                                                                                                                                            'token '
                                                                                                                                            'modeling '
                                                                                                                                            'enclm.html#sadelartransformer.load_model',
                                                                                                                                            'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.run_encoder': ( '4b. '
                                                                                                                                             'semantic '
                                                                                                                                             'to '
                                                                                                                                             'acoustic '
                                                                                                                                             'token '
                                                                                                                                             'modeling '
                                                                                                                                             'enclm.html#sadelartransformer.run_encoder',
                                                                                                                                             'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.save_model': ( '4b. '
                                                                                                                                            'semantic '
                                                                                                                                            'to '
                                                                                                                                            'acoustic '
                                                                                                                                            'token '
                                                                                                                                            'modeling '
                                                                                                                                            'enclm.html#sadelartransformer.save_model',
                                                                                                                                            'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.set_extra_state': ( '4b. '
                                                                                                                                                 'semantic '
                                                                                                                                                 'to '
                                                                                                                                                 'acoustic '
                                                                                                                                                 'token '
                                                                                                                                                 'modeling '
                                                                                                                                                 'enclm.html#sadelartransformer.set_extra_state',
                                                                                                                                                 'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.SADelARTransformer.setup': ( '4b. '
                                                                                                                                       'semantic '
                                                                                                                                       'to '
                                                                                                                                       'acoustic '
                                                                                                                                       'token '
                                                                                                                                       'modeling '
                                                                                                                                       'enclm.html#sadelartransformer.setup',
                                                                                                                                       'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.Tunables': ( '4b. semantic to '
                                                                                                                       'acoustic token '
                                                                                                                       'modeling '
                                                                                                                       'enclm.html#tunables',
                                                                                                                       'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.Tunables.__post_init__': ( '4b. '
                                                                                                                                     'semantic '
                                                                                                                                     'to '
                                                                                                                                     'acoustic '
                                                                                                                                     'token '
                                                                                                                                     'modeling '
                                                                                                                                     'enclm.html#tunables.__post_init__',
                                                                                                                                     'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.Tunables.upgrade': ( '4b. '
                                                                                                                               'semantic '
                                                                                                                               'to '
                                                                                                                               'acoustic '
                                                                                                                               'token '
                                                                                                                               'modeling '
                                                                                                                               'enclm.html#tunables.upgrade',
                                                                                                                               'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm._make_model': ( '4b. semantic to '
                                                                                                                          'acoustic token '
                                                                                                                          'modeling '
                                                                                                                          'enclm.html#_make_model',
                                                                                                                          'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.apply_rotary_pos_emb': ( '4b. '
                                                                                                                                   'semantic '
                                                                                                                                   'to '
                                                                                                                                   'acoustic '
                                                                                                                                   'token '
                                                                                                                                   'modeling '
                                                                                                                                   'enclm.html#apply_rotary_pos_emb',
                                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.lang_to_id': ( '4b. semantic to '
                                                                                                                         'acoustic token '
                                                                                                                         'modeling '
                                                                                                                         'enclm.html#lang_to_id',
                                                                                                                         'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.load_dataset': ( '4b. semantic '
                                                                                                                           'to acoustic '
                                                                                                                           'token modeling '
                                                                                                                           'enclm.html#load_dataset',
                                                                                                                           'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.make_model': ( '4b. semantic to '
                                                                                                                         'acoustic token '
                                                                                                                         'modeling '
                                                                                                                         'enclm.html#make_model',
                                                                                                                         'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.make_speaker_map': ( '4b. '
                                                                                                                               'semantic '
                                                                                                                               'to '
                                                                                                                               'acoustic '
                                                                                                                               'token '
                                                                                                                               'modeling '
                                                                                                                               'enclm.html#make_speaker_map',
                                                                                                                               'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.pad_samples': ( '4b. semantic to '
                                                                                                                          'acoustic token '
                                                                                                                          'modeling '
                                                                                                                          'enclm.html#pad_samples',
                                                                                                                          'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.rand': ( '4b. semantic to '
                                                                                                                   'acoustic token '
                                                                                                                   'modeling '
                                                                                                                   'enclm.html#rand',
                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.random_trunc': ( '4b. semantic '
                                                                                                                           'to acoustic '
                                                                                                                           'token modeling '
                                                                                                                           'enclm.html#random_trunc',
                                                                                                                           'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.rotate_half': ( '4b. semantic to '
                                                                                                                          'acoustic token '
                                                                                                                          'modeling '
                                                                                                                          'enclm.html#rotate_half',
                                                                                                                          'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py'),
                                                             'whisperspeech.s2a_delar_mup_wds_mlang_enclm.speaker_id_extractor': ( '4b. '
                                                                                                                                   'semantic '
                                                                                                                                   'to '
                                                                                                                                   'acoustic '
                                                                                                                                   'token '
                                                                                                                                   'modeling '
                                                                                                                                   'enclm.html#speaker_id_extractor',
                                                                                                                                   'whisperspeech/s2a_delar_mup_wds_mlang_enclm.py')},
            'whisperspeech.split_out_val_datasets': { 'whisperspeech.split_out_val_datasets.split_dataset': ( '3d. split out '
                                                                                                              'validation.html#split_dataset',
                                                                                                              'whisperspeech/split_out_val_datasets.py')},
            'whisperspeech.split_vq_stoks_webdataset': { 'whisperspeech.split_vq_stoks_webdataset.split_dataset': ( 'split and shuffle '
                                                                                                                    'quantization '
                                                                                                                    'webdataset.html#split_dataset',
                                                                                                                    'whisperspeech/split_vq_stoks_webdataset.py')},
            'whisperspeech.split_webdataset': { 'whisperspeech.split_webdataset.split_dataset': ( 'split and shuffle '
                                                                                                  'webdataset.html#split_dataset',
                                                                                                  'whisperspeech/split_webdataset.py')},
            'whisperspeech.stoks_lm': { 'whisperspeech.stoks_lm.CharTokenizer': ( '5b. text to semantic token modeling prosodyenc '
                                                                                  'new-copy1.html#chartokenizer',
                                                                                  'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.CharTokenizer.decode': ( '5b. text to semantic token modeling prosodyenc '
                                                                                         'new-copy1.html#chartokenizer.decode',
                                                                                         'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.CharTokenizer.encode': ( '5b. text to semantic token modeling prosodyenc '
                                                                                         'new-copy1.html#chartokenizer.encode',
                                                                                         'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.Decoder': ( '5b. text to semantic token modeling prosodyenc '
                                                                            'new-copy1.html#decoder',
                                                                            'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.Decoder.__init__': ( '5b. text to semantic token modeling prosodyenc '
                                                                                     'new-copy1.html#decoder.__init__',
                                                                                     'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.Decoder.forward': ( '5b. text to semantic token modeling prosodyenc '
                                                                                    'new-copy1.html#decoder.forward',
                                                                                    'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.EmbeddingProjector': ( '5b. text to semantic token modeling prosodyenc '
                                                                                       'new-copy1.html#embeddingprojector',
                                                                                       'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.FlexEmbeddings': ( '5b. text to semantic token modeling prosodyenc '
                                                                                   'new-copy1.html#flexembeddings',
                                                                                   'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.FlexEmbeddings.__init__': ( '5b. text to semantic token modeling '
                                                                                            'prosodyenc '
                                                                                            'new-copy1.html#flexembeddings.__init__',
                                                                                            'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.FlexEmbeddings.forward': ( '5b. text to semantic token modeling prosodyenc '
                                                                                           'new-copy1.html#flexembeddings.forward',
                                                                                           'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.FlexEmbeddings.set_frozen_embeddings': ( '5b. text to semantic token '
                                                                                                         'modeling prosodyenc '
                                                                                                         'new-copy1.html#flexembeddings.set_frozen_embeddings',
                                                                                                         'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.FlexEmbeddings.unembed': ( '5b. text to semantic token modeling prosodyenc '
                                                                                           'new-copy1.html#flexembeddings.unembed',
                                                                                           'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer': ( '5b. text to semantic token modeling prosodyenc '
                                                                                    'new-copy1.html#tsartransformer',
                                                                                    'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.__init__': ( '5b. text to semantic token modeling '
                                                                                             'prosodyenc '
                                                                                             'new-copy1.html#tsartransformer.__init__',
                                                                                             'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer._embed_cps': ( '5b. text to semantic token modeling '
                                                                                               'prosodyenc '
                                                                                               'new-copy1.html#tsartransformer._embed_cps',
                                                                                               'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.device': ( '5b. text to semantic token modeling prosodyenc '
                                                                                           'new-copy1.html#tsartransformer.device',
                                                                                           'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.ensure_tokenizer': ( '5b. text to semantic token modeling '
                                                                                                     'prosodyenc '
                                                                                                     'new-copy1.html#tsartransformer.ensure_tokenizer',
                                                                                                     'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.extract_prosody': ( '5b. text to semantic token modeling '
                                                                                                    'prosodyenc '
                                                                                                    'new-copy1.html#tsartransformer.extract_prosody',
                                                                                                    'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.forward': ( '5b. text to semantic token modeling '
                                                                                            'prosodyenc '
                                                                                            'new-copy1.html#tsartransformer.forward',
                                                                                            'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.generate': ( '5b. text to semantic token modeling '
                                                                                             'prosodyenc '
                                                                                             'new-copy1.html#tsartransformer.generate',
                                                                                             'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.generate_batch': ( '5b. text to semantic token modeling '
                                                                                                   'prosodyenc '
                                                                                                   'new-copy1.html#tsartransformer.generate_batch',
                                                                                                   'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.init_transformer': ( '5b. text to semantic token modeling '
                                                                                                     'prosodyenc '
                                                                                                     'new-copy1.html#tsartransformer.init_transformer',
                                                                                                     'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.load_checkpoint': ( '5b. text to semantic token modeling '
                                                                                                    'prosodyenc '
                                                                                                    'new-copy1.html#tsartransformer.load_checkpoint',
                                                                                                    'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.load_frozen_semantic_embeddings': ( '5b. text to semantic '
                                                                                                                    'token modeling '
                                                                                                                    'prosodyenc '
                                                                                                                    'new-copy1.html#tsartransformer.load_frozen_semantic_embeddings',
                                                                                                                    'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.load_model': ( '5b. text to semantic token modeling '
                                                                                               'prosodyenc '
                                                                                               'new-copy1.html#tsartransformer.load_model',
                                                                                               'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.prep': ( '5b. text to semantic token modeling prosodyenc '
                                                                                         'new-copy1.html#tsartransformer.prep',
                                                                                         'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.save_model': ( '5b. text to semantic token modeling '
                                                                                               'prosodyenc '
                                                                                               'new-copy1.html#tsartransformer.save_model',
                                                                                               'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.TSARTransformer.setup': ( '5b. text to semantic token modeling prosodyenc '
                                                                                          'new-copy1.html#tsartransformer.setup',
                                                                                          'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.Tunables': ( '5b. text to semantic token modeling prosodyenc '
                                                                             'new-copy1.html#tunables',
                                                                             'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.Tunables.__post_init__': ( '5b. text to semantic token modeling prosodyenc '
                                                                                           'new-copy1.html#tunables.__post_init__',
                                                                                           'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm._make_model': ( '5b. text to semantic token modeling prosodyenc '
                                                                                'new-copy1.html#_make_model',
                                                                                'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.ar_padder': ( '5b. text to semantic token modeling prosodyenc '
                                                                              'new-copy1.html#ar_padder',
                                                                              'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.char_per_seconder': ( '5b. text to semantic token modeling prosodyenc '
                                                                                      'new-copy1.html#char_per_seconder',
                                                                                      'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.lang_to_id': ( '5b. text to semantic token modeling prosodyenc '
                                                                               'new-copy1.html#lang_to_id',
                                                                               'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.load_dataset': ( '5b. text to semantic token modeling prosodyenc '
                                                                                 'new-copy1.html#load_dataset',
                                                                                 'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.make_model': ( '5b. text to semantic token modeling prosodyenc '
                                                                               'new-copy1.html#make_model',
                                                                               'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.rand': ( '5b. text to semantic token modeling prosodyenc '
                                                                         'new-copy1.html#rand',
                                                                         'whisperspeech/stoks_lm.py'),
                                        'whisperspeech.stoks_lm.tokenizer': ( '5b. text to semantic token modeling prosodyenc '
                                                                              'new-copy1.html#tokenizer',
                                                                              'whisperspeech/stoks_lm.py')},
            'whisperspeech.t2s_up_wds': { 'whisperspeech.t2s_up_wds.CharTokenizer': ( '5b. text to semantic token '
                                                                                      'modeling.html#chartokenizer',
                                                                                      'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.CharTokenizer.decode': ( '5b. text to semantic token '
                                                                                             'modeling.html#chartokenizer.decode',
                                                                                             'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.CharTokenizer.encode': ( '5b. text to semantic token '
                                                                                             'modeling.html#chartokenizer.encode',
                                                                                             'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Decoder': ( '5b. text to semantic token modeling.html#decoder',
                                                                                'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Decoder.__init__': ( '5b. text to semantic token '
                                                                                         'modeling.html#decoder.__init__',
                                                                                         'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Decoder.forward': ( '5b. text to semantic token '
                                                                                        'modeling.html#decoder.forward',
                                                                                        'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.EmbeddingProjector': ( '5b. text to semantic token '
                                                                                           'modeling.html#embeddingprojector',
                                                                                           'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Encoder': ( '5b. text to semantic token modeling.html#encoder',
                                                                                'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Encoder.__init__': ( '5b. text to semantic token '
                                                                                         'modeling.html#encoder.__init__',
                                                                                         'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Encoder.forward': ( '5b. text to semantic token '
                                                                                        'modeling.html#encoder.forward',
                                                                                        'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer': ( '5b. text to semantic token '
                                                                                        'modeling.html#tsartransformer',
                                                                                        'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.__init__': ( '5b. text to semantic token '
                                                                                                 'modeling.html#tsartransformer.__init__',
                                                                                                 'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.device': ( '5b. text to semantic token '
                                                                                               'modeling.html#tsartransformer.device',
                                                                                               'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.ensure_tokenizer': ( '5b. text to semantic token '
                                                                                                         'modeling.html#tsartransformer.ensure_tokenizer',
                                                                                                         'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.forward': ( '5b. text to semantic token '
                                                                                                'modeling.html#tsartransformer.forward',
                                                                                                'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.generate': ( '5b. text to semantic token '
                                                                                                 'modeling.html#tsartransformer.generate',
                                                                                                 'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.generate_batch': ( '5b. text to semantic token '
                                                                                                       'modeling.html#tsartransformer.generate_batch',
                                                                                                       'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.init_transformer': ( '5b. text to semantic token '
                                                                                                         'modeling.html#tsartransformer.init_transformer',
                                                                                                         'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.load_checkpoint': ( '5b. text to semantic token '
                                                                                                        'modeling.html#tsartransformer.load_checkpoint',
                                                                                                        'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.load_frozen_semantic_embeddings': ( '5b. text to '
                                                                                                                        'semantic token '
                                                                                                                        'modeling.html#tsartransformer.load_frozen_semantic_embeddings',
                                                                                                                        'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.load_model': ( '5b. text to semantic token '
                                                                                                   'modeling.html#tsartransformer.load_model',
                                                                                                   'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.save_model': ( '5b. text to semantic token '
                                                                                                   'modeling.html#tsartransformer.save_model',
                                                                                                   'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.TSARTransformer.setup': ( '5b. text to semantic token '
                                                                                              'modeling.html#tsartransformer.setup',
                                                                                              'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Tunables': ( '5b. text to semantic token modeling.html#tunables',
                                                                                 'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.Tunables.__post_init__': ( '5b. text to semantic token '
                                                                                               'modeling.html#tunables.__post_init__',
                                                                                               'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds._make_model': ( '5b. text to semantic token modeling.html#_make_model',
                                                                                    'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.ar_padder': ( '5b. text to semantic token modeling.html#ar_padder',
                                                                                  'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.build_speaker_map': ( '5b. text to semantic token '
                                                                                          'modeling.html#build_speaker_map',
                                                                                          'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.char_per_seconder': ( '5b. text to semantic token '
                                                                                          'modeling.html#char_per_seconder',
                                                                                          'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.load_dataset': ( '5b. text to semantic token '
                                                                                     'modeling.html#load_dataset',
                                                                                     'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.load_datasets': ( '5b. text to semantic token '
                                                                                      'modeling.html#load_datasets',
                                                                                      'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.make_model': ( '5b. text to semantic token modeling.html#make_model',
                                                                                   'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.rand': ( '5b. text to semantic token modeling.html#rand',
                                                                             'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.speaker_id_extractor': ( '5b. text to semantic token '
                                                                                             'modeling.html#speaker_id_extractor',
                                                                                             'whisperspeech/t2s_up_wds.py'),
                                          'whisperspeech.t2s_up_wds.tokenizer': ( '5b. text to semantic token modeling.html#tokenizer',
                                                                                  'whisperspeech/t2s_up_wds.py')},
            'whisperspeech.t2s_up_wds_mlang': { 'whisperspeech.t2s_up_wds_mlang.CharTokenizer': ( '5b. text to semantic token '
                                                                                                  'modeling-copy1.html#chartokenizer',
                                                                                                  'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.CharTokenizer.decode': ( '5b. text to semantic token '
                                                                                                         'modeling-copy1.html#chartokenizer.decode',
                                                                                                         'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.CharTokenizer.encode': ( '5b. text to semantic token '
                                                                                                         'modeling-copy1.html#chartokenizer.encode',
                                                                                                         'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Decoder': ( '5b. text to semantic token '
                                                                                            'modeling-copy1.html#decoder',
                                                                                            'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Decoder.__init__': ( '5b. text to semantic token '
                                                                                                     'modeling-copy1.html#decoder.__init__',
                                                                                                     'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Decoder.forward': ( '5b. text to semantic token '
                                                                                                    'modeling-copy1.html#decoder.forward',
                                                                                                    'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.EmbeddingProjector': ( '5b. text to semantic token '
                                                                                                       'modeling-copy1.html#embeddingprojector',
                                                                                                       'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Encoder': ( '5b. text to semantic token '
                                                                                            'modeling-copy1.html#encoder',
                                                                                            'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Encoder.__init__': ( '5b. text to semantic token '
                                                                                                     'modeling-copy1.html#encoder.__init__',
                                                                                                     'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Encoder.forward': ( '5b. text to semantic token '
                                                                                                    'modeling-copy1.html#encoder.forward',
                                                                                                    'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer': ( '5b. text to semantic token '
                                                                                                    'modeling-copy1.html#tsartransformer',
                                                                                                    'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.__init__': ( '5b. text to semantic token '
                                                                                                             'modeling-copy1.html#tsartransformer.__init__',
                                                                                                             'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.device': ( '5b. text to semantic token '
                                                                                                           'modeling-copy1.html#tsartransformer.device',
                                                                                                           'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.ensure_tokenizer': ( '5b. text to semantic '
                                                                                                                     'token '
                                                                                                                     'modeling-copy1.html#tsartransformer.ensure_tokenizer',
                                                                                                                     'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.forward': ( '5b. text to semantic token '
                                                                                                            'modeling-copy1.html#tsartransformer.forward',
                                                                                                            'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.generate': ( '5b. text to semantic token '
                                                                                                             'modeling-copy1.html#tsartransformer.generate',
                                                                                                             'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.generate_batch': ( '5b. text to semantic '
                                                                                                                   'token '
                                                                                                                   'modeling-copy1.html#tsartransformer.generate_batch',
                                                                                                                   'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.init_transformer': ( '5b. text to semantic '
                                                                                                                     'token '
                                                                                                                     'modeling-copy1.html#tsartransformer.init_transformer',
                                                                                                                     'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.load_checkpoint': ( '5b. text to semantic '
                                                                                                                    'token '
                                                                                                                    'modeling-copy1.html#tsartransformer.load_checkpoint',
                                                                                                                    'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.load_frozen_semantic_embeddings': ( '5b. '
                                                                                                                                    'text '
                                                                                                                                    'to '
                                                                                                                                    'semantic '
                                                                                                                                    'token '
                                                                                                                                    'modeling-copy1.html#tsartransformer.load_frozen_semantic_embeddings',
                                                                                                                                    'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.load_model': ( '5b. text to semantic token '
                                                                                                               'modeling-copy1.html#tsartransformer.load_model',
                                                                                                               'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.save_model': ( '5b. text to semantic token '
                                                                                                               'modeling-copy1.html#tsartransformer.save_model',
                                                                                                               'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.TSARTransformer.setup': ( '5b. text to semantic token '
                                                                                                          'modeling-copy1.html#tsartransformer.setup',
                                                                                                          'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Tunables': ( '5b. text to semantic token '
                                                                                             'modeling-copy1.html#tunables',
                                                                                             'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.Tunables.__post_init__': ( '5b. text to semantic token '
                                                                                                           'modeling-copy1.html#tunables.__post_init__',
                                                                                                           'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang._make_model': ( '5b. text to semantic token '
                                                                                                'modeling-copy1.html#_make_model',
                                                                                                'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.ar_padder': ( '5b. text to semantic token '
                                                                                              'modeling-copy1.html#ar_padder',
                                                                                              'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.build_speaker_map': ( '5b. text to semantic token '
                                                                                                      'modeling-copy1.html#build_speaker_map',
                                                                                                      'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.char_per_seconder': ( '5b. text to semantic token '
                                                                                                      'modeling-copy1.html#char_per_seconder',
                                                                                                      'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.lang_to_id': ( '5b. text to semantic token '
                                                                                               'modeling-copy1.html#lang_to_id',
                                                                                               'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.load_dataset': ( '5b. text to semantic token '
                                                                                                 'modeling-copy1.html#load_dataset',
                                                                                                 'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.load_datasets': ( '5b. text to semantic token '
                                                                                                  'modeling-copy1.html#load_datasets',
                                                                                                  'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.make_model': ( '5b. text to semantic token '
                                                                                               'modeling-copy1.html#make_model',
                                                                                               'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.rand': ( '5b. text to semantic token '
                                                                                         'modeling-copy1.html#rand',
                                                                                         'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.speaker_id_extractor': ( '5b. text to semantic token '
                                                                                                         'modeling-copy1.html#speaker_id_extractor',
                                                                                                         'whisperspeech/t2s_up_wds_mlang.py'),
                                                'whisperspeech.t2s_up_wds_mlang.tokenizer': ( '5b. text to semantic token '
                                                                                              'modeling-copy1.html#tokenizer',
                                                                                              'whisperspeech/t2s_up_wds_mlang.py')},
            'whisperspeech.t2s_up_wds_mlang_enclm': { 'whisperspeech.t2s_up_wds_mlang_enclm.CharTokenizer': ( '5b. multi-lang text to '
                                                                                                              'semantic token '
                                                                                                              'modeling.html#chartokenizer',
                                                                                                              'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.CharTokenizer.decode': ( '5b. multi-lang text '
                                                                                                                     'to semantic token '
                                                                                                                     'modeling.html#chartokenizer.decode',
                                                                                                                     'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.CharTokenizer.encode': ( '5b. multi-lang text '
                                                                                                                     'to semantic token '
                                                                                                                     'modeling.html#chartokenizer.encode',
                                                                                                                     'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.Encoder': ( '5b. multi-lang text to semantic '
                                                                                                        'token modeling.html#encoder',
                                                                                                        'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.Encoder.__init__': ( '5b. multi-lang text to '
                                                                                                                 'semantic token '
                                                                                                                 'modeling.html#encoder.__init__',
                                                                                                                 'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.Encoder.forward': ( '5b. multi-lang text to '
                                                                                                                'semantic token '
                                                                                                                'modeling.html#encoder.forward',
                                                                                                                'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.T2SEmbedding': ( '5b. multi-lang text to '
                                                                                                             'semantic token '
                                                                                                             'modeling.html#t2sembedding',
                                                                                                             'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.T2SEmbedding.__init__': ( '5b. multi-lang text '
                                                                                                                      'to semantic token '
                                                                                                                      'modeling.html#t2sembedding.__init__',
                                                                                                                      'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.T2SEmbedding.forward': ( '5b. multi-lang text '
                                                                                                                     'to semantic token '
                                                                                                                     'modeling.html#t2sembedding.forward',
                                                                                                                     'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer': ( '5b. multi-lang text to '
                                                                                                                'semantic token '
                                                                                                                'modeling.html#tsartransformer',
                                                                                                                'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.__init__': ( '5b. multi-lang '
                                                                                                                         'text to semantic '
                                                                                                                         'token '
                                                                                                                         'modeling.html#tsartransformer.__init__',
                                                                                                                         'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer._embed_cps': ( '5b. multi-lang '
                                                                                                                           'text to '
                                                                                                                           'semantic token '
                                                                                                                           'modeling.html#tsartransformer._embed_cps',
                                                                                                                           'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.device': ( '5b. multi-lang '
                                                                                                                       'text to semantic '
                                                                                                                       'token '
                                                                                                                       'modeling.html#tsartransformer.device',
                                                                                                                       'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.ensure_tokenizer': ( '5b. '
                                                                                                                                 'multi-lang '
                                                                                                                                 'text to '
                                                                                                                                 'semantic '
                                                                                                                                 'token '
                                                                                                                                 'modeling.html#tsartransformer.ensure_tokenizer',
                                                                                                                                 'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.forward': ( '5b. multi-lang '
                                                                                                                        'text to semantic '
                                                                                                                        'token '
                                                                                                                        'modeling.html#tsartransformer.forward',
                                                                                                                        'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.generate': ( '5b. multi-lang '
                                                                                                                         'text to semantic '
                                                                                                                         'token '
                                                                                                                         'modeling.html#tsartransformer.generate',
                                                                                                                         'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.generate_batch': ( '5b. '
                                                                                                                               'multi-lang '
                                                                                                                               'text to '
                                                                                                                               'semantic '
                                                                                                                               'token '
                                                                                                                               'modeling.html#tsartransformer.generate_batch',
                                                                                                                               'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.generate_next': ( '5b. '
                                                                                                                              'multi-lang '
                                                                                                                              'text to '
                                                                                                                              'semantic '
                                                                                                                              'token '
                                                                                                                              'modeling.html#tsartransformer.generate_next',
                                                                                                                              'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.generate_one': ( '5b. '
                                                                                                                             'multi-lang '
                                                                                                                             'text to '
                                                                                                                             'semantic '
                                                                                                                             'token '
                                                                                                                             'modeling.html#tsartransformer.generate_one',
                                                                                                                             'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.init_transformer': ( '5b. '
                                                                                                                                 'multi-lang '
                                                                                                                                 'text to '
                                                                                                                                 'semantic '
                                                                                                                                 'token '
                                                                                                                                 'modeling.html#tsartransformer.init_transformer',
                                                                                                                                 'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.load_checkpoint': ( '5b. '
                                                                                                                                'multi-lang '
                                                                                                                                'text to '
                                                                                                                                'semantic '
                                                                                                                                'token '
                                                                                                                                'modeling.html#tsartransformer.load_checkpoint',
                                                                                                                                'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.load_frozen_semantic_embeddings': ( '5b. '
                                                                                                                                                'multi-lang '
                                                                                                                                                'text '
                                                                                                                                                'to '
                                                                                                                                                'semantic '
                                                                                                                                                'token '
                                                                                                                                                'modeling.html#tsartransformer.load_frozen_semantic_embeddings',
                                                                                                                                                'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.load_model': ( '5b. multi-lang '
                                                                                                                           'text to '
                                                                                                                           'semantic token '
                                                                                                                           'modeling.html#tsartransformer.load_model',
                                                                                                                           'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.logits_to_probs': ( '5b. '
                                                                                                                                'multi-lang '
                                                                                                                                'text to '
                                                                                                                                'semantic '
                                                                                                                                'token '
                                                                                                                                'modeling.html#tsartransformer.logits_to_probs',
                                                                                                                                'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.multinomial_sample_one_no_sync': ( '5b. '
                                                                                                                                               'multi-lang '
                                                                                                                                               'text '
                                                                                                                                               'to '
                                                                                                                                               'semantic '
                                                                                                                                               'token '
                                                                                                                                               'modeling.html#tsartransformer.multinomial_sample_one_no_sync',
                                                                                                                                               'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.optimize': ( '5b. multi-lang '
                                                                                                                         'text to semantic '
                                                                                                                         'token '
                                                                                                                         'modeling.html#tsartransformer.optimize',
                                                                                                                         'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.prep': ( '5b. multi-lang text '
                                                                                                                     'to semantic token '
                                                                                                                     'modeling.html#tsartransformer.prep',
                                                                                                                     'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.run_encoder': ( '5b. '
                                                                                                                            'multi-lang '
                                                                                                                            'text to '
                                                                                                                            'semantic '
                                                                                                                            'token '
                                                                                                                            'modeling.html#tsartransformer.run_encoder',
                                                                                                                            'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.sample': ( '5b. multi-lang '
                                                                                                                       'text to semantic '
                                                                                                                       'token '
                                                                                                                       'modeling.html#tsartransformer.sample',
                                                                                                                       'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.save_model': ( '5b. multi-lang '
                                                                                                                           'text to '
                                                                                                                           'semantic token '
                                                                                                                           'modeling.html#tsartransformer.save_model',
                                                                                                                           'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.setup': ( '5b. multi-lang text '
                                                                                                                      'to semantic token '
                                                                                                                      'modeling.html#tsartransformer.setup',
                                                                                                                      'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.TSARTransformer.switch_dtypes': ( '5b. '
                                                                                                                              'multi-lang '
                                                                                                                              'text to '
                                                                                                                              'semantic '
                                                                                                                              'token '
                                                                                                                              'modeling.html#tsartransformer.switch_dtypes',
                                                                                                                              'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.Tunables': ( '5b. multi-lang text to semantic '
                                                                                                         'token modeling.html#tunables',
                                                                                                         'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.Tunables.__post_init__': ( '5b. multi-lang '
                                                                                                                       'text to semantic '
                                                                                                                       'token '
                                                                                                                       'modeling.html#tunables.__post_init__',
                                                                                                                       'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm._make_model': ( '5b. multi-lang text to '
                                                                                                            'semantic token '
                                                                                                            'modeling.html#_make_model',
                                                                                                            'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.ar_padder': ( '5b. multi-lang text to semantic '
                                                                                                          'token modeling.html#ar_padder',
                                                                                                          'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.char_per_seconder': ( '5b. multi-lang text to '
                                                                                                                  'semantic token '
                                                                                                                  'modeling.html#char_per_seconder',
                                                                                                                  'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.load_dataset': ( '5b. multi-lang text to '
                                                                                                             'semantic token '
                                                                                                             'modeling.html#load_dataset',
                                                                                                             'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.make_model': ( '5b. multi-lang text to '
                                                                                                           'semantic token '
                                                                                                           'modeling.html#make_model',
                                                                                                           'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.rand': ( '5b. multi-lang text to semantic '
                                                                                                     'token modeling.html#rand',
                                                                                                     'whisperspeech/t2s_up_wds_mlang_enclm.py'),
                                                      'whisperspeech.t2s_up_wds_mlang_enclm.tokenizer': ( '5b. multi-lang text to semantic '
                                                                                                          'token modeling.html#tokenizer',
                                                                                                          'whisperspeech/t2s_up_wds_mlang_enclm.py')},
            'whisperspeech.t2s_up_wds_mlang_latent': { 'whisperspeech.t2s_up_wds_mlang_latent.CharTokenizer': ( '5b. text to semantic '
                                                                                                                'token '
                                                                                                                'modeling-copy2.html#chartokenizer',
                                                                                                                'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.CharTokenizer.decode': ( '5b. text to '
                                                                                                                       'semantic token '
                                                                                                                       'modeling-copy2.html#chartokenizer.decode',
                                                                                                                       'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.CharTokenizer.encode': ( '5b. text to '
                                                                                                                       'semantic token '
                                                                                                                       'modeling-copy2.html#chartokenizer.encode',
                                                                                                                       'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Decoder': ( '5b. text to semantic token '
                                                                                                          'modeling-copy2.html#decoder',
                                                                                                          'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Decoder.__init__': ( '5b. text to semantic '
                                                                                                                   'token '
                                                                                                                   'modeling-copy2.html#decoder.__init__',
                                                                                                                   'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Decoder.forward': ( '5b. text to semantic '
                                                                                                                  'token '
                                                                                                                  'modeling-copy2.html#decoder.forward',
                                                                                                                  'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.EmbeddingProjector': ( '5b. text to semantic '
                                                                                                                     'token '
                                                                                                                     'modeling-copy2.html#embeddingprojector',
                                                                                                                     'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Encoder': ( '5b. text to semantic token '
                                                                                                          'modeling-copy2.html#encoder',
                                                                                                          'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Encoder.__init__': ( '5b. text to semantic '
                                                                                                                   'token '
                                                                                                                   'modeling-copy2.html#encoder.__init__',
                                                                                                                   'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Encoder.forward': ( '5b. text to semantic '
                                                                                                                  'token '
                                                                                                                  'modeling-copy2.html#encoder.forward',
                                                                                                                  'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.FlexEmbeddings': ( '5b. text to semantic '
                                                                                                                 'token '
                                                                                                                 'modeling-copy2.html#flexembeddings',
                                                                                                                 'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.FlexEmbeddings.__init__': ( '5b. text to '
                                                                                                                          'semantic token '
                                                                                                                          'modeling-copy2.html#flexembeddings.__init__',
                                                                                                                          'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.FlexEmbeddings.forward': ( '5b. text to '
                                                                                                                         'semantic token '
                                                                                                                         'modeling-copy2.html#flexembeddings.forward',
                                                                                                                         'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.FlexEmbeddings.set_frozen_embeddings': ( '5b. '
                                                                                                                                       'text '
                                                                                                                                       'to '
                                                                                                                                       'semantic '
                                                                                                                                       'token '
                                                                                                                                       'modeling-copy2.html#flexembeddings.set_frozen_embeddings',
                                                                                                                                       'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.FlexEmbeddings.unembed': ( '5b. text to '
                                                                                                                         'semantic token '
                                                                                                                         'modeling-copy2.html#flexembeddings.unembed',
                                                                                                                         'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer': ( '5b. text to semantic '
                                                                                                                  'token '
                                                                                                                  'modeling-copy2.html#tsartransformer',
                                                                                                                  'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.__init__': ( '5b. text to '
                                                                                                                           'semantic token '
                                                                                                                           'modeling-copy2.html#tsartransformer.__init__',
                                                                                                                           'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer._embed_cps': ( '5b. text to '
                                                                                                                             'semantic '
                                                                                                                             'token '
                                                                                                                             'modeling-copy2.html#tsartransformer._embed_cps',
                                                                                                                             'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer._extract_prosody': ( '5b. '
                                                                                                                                   'text '
                                                                                                                                   'to '
                                                                                                                                   'semantic '
                                                                                                                                   'token '
                                                                                                                                   'modeling-copy2.html#tsartransformer._extract_prosody',
                                                                                                                                   'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.device': ( '5b. text to '
                                                                                                                         'semantic token '
                                                                                                                         'modeling-copy2.html#tsartransformer.device',
                                                                                                                         'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.ensure_tokenizer': ( '5b. '
                                                                                                                                   'text '
                                                                                                                                   'to '
                                                                                                                                   'semantic '
                                                                                                                                   'token '
                                                                                                                                   'modeling-copy2.html#tsartransformer.ensure_tokenizer',
                                                                                                                                   'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.extract_prosody': ( '5b. '
                                                                                                                                  'text to '
                                                                                                                                  'semantic '
                                                                                                                                  'token '
                                                                                                                                  'modeling-copy2.html#tsartransformer.extract_prosody',
                                                                                                                                  'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.forward': ( '5b. text to '
                                                                                                                          'semantic token '
                                                                                                                          'modeling-copy2.html#tsartransformer.forward',
                                                                                                                          'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.generate': ( '5b. text to '
                                                                                                                           'semantic token '
                                                                                                                           'modeling-copy2.html#tsartransformer.generate',
                                                                                                                           'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.generate_batch': ( '5b. text '
                                                                                                                                 'to '
                                                                                                                                 'semantic '
                                                                                                                                 'token '
                                                                                                                                 'modeling-copy2.html#tsartransformer.generate_batch',
                                                                                                                                 'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.init_transformer': ( '5b. '
                                                                                                                                   'text '
                                                                                                                                   'to '
                                                                                                                                   'semantic '
                                                                                                                                   'token '
                                                                                                                                   'modeling-copy2.html#tsartransformer.init_transformer',
                                                                                                                                   'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.load_checkpoint': ( '5b. '
                                                                                                                                  'text to '
                                                                                                                                  'semantic '
                                                                                                                                  'token '
                                                                                                                                  'modeling-copy2.html#tsartransformer.load_checkpoint',
                                                                                                                                  'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.load_frozen_semantic_embeddings': ( '5b. '
                                                                                                                                                  'text '
                                                                                                                                                  'to '
                                                                                                                                                  'semantic '
                                                                                                                                                  'token '
                                                                                                                                                  'modeling-copy2.html#tsartransformer.load_frozen_semantic_embeddings',
                                                                                                                                                  'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.load_model': ( '5b. text to '
                                                                                                                             'semantic '
                                                                                                                             'token '
                                                                                                                             'modeling-copy2.html#tsartransformer.load_model',
                                                                                                                             'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.prep': ( '5b. text to '
                                                                                                                       'semantic token '
                                                                                                                       'modeling-copy2.html#tsartransformer.prep',
                                                                                                                       'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.save_model': ( '5b. text to '
                                                                                                                             'semantic '
                                                                                                                             'token '
                                                                                                                             'modeling-copy2.html#tsartransformer.save_model',
                                                                                                                             'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.TSARTransformer.setup': ( '5b. text to '
                                                                                                                        'semantic token '
                                                                                                                        'modeling-copy2.html#tsartransformer.setup',
                                                                                                                        'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Tunables': ( '5b. text to semantic token '
                                                                                                           'modeling-copy2.html#tunables',
                                                                                                           'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.Tunables.__post_init__': ( '5b. text to '
                                                                                                                         'semantic token '
                                                                                                                         'modeling-copy2.html#tunables.__post_init__',
                                                                                                                         'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent._make_model': ( '5b. text to semantic token '
                                                                                                              'modeling-copy2.html#_make_model',
                                                                                                              'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.ar_padder': ( '5b. text to semantic token '
                                                                                                            'modeling-copy2.html#ar_padder',
                                                                                                            'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.build_speaker_map': ( '5b. text to semantic '
                                                                                                                    'token '
                                                                                                                    'modeling-copy2.html#build_speaker_map',
                                                                                                                    'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.char_per_seconder': ( '5b. text to semantic '
                                                                                                                    'token '
                                                                                                                    'modeling-copy2.html#char_per_seconder',
                                                                                                                    'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.lang_to_id': ( '5b. text to semantic token '
                                                                                                             'modeling-copy2.html#lang_to_id',
                                                                                                             'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.load_dataset': ( '5b. text to semantic token '
                                                                                                               'modeling-copy2.html#load_dataset',
                                                                                                               'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.load_datasets': ( '5b. text to semantic '
                                                                                                                'token '
                                                                                                                'modeling-copy2.html#load_datasets',
                                                                                                                'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.make_model': ( '5b. text to semantic token '
                                                                                                             'modeling-copy2.html#make_model',
                                                                                                             'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.rand': ( '5b. text to semantic token '
                                                                                                       'modeling-copy2.html#rand',
                                                                                                       'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.speaker_id_extractor': ( '5b. text to '
                                                                                                                       'semantic token '
                                                                                                                       'modeling-copy2.html#speaker_id_extractor',
                                                                                                                       'whisperspeech/t2s_up_wds_mlang_latent.py'),
                                                       'whisperspeech.t2s_up_wds_mlang_latent.tokenizer': ( '5b. text to semantic token '
                                                                                                            'modeling-copy2.html#tokenizer',
                                                                                                            'whisperspeech/t2s_up_wds_mlang_latent.py')},
            'whisperspeech.train': { 'whisperspeech.train.SimpleVisual': ('b1. training.html#simplevisual', 'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.__init__': ( 'b1. training.html#simplevisual.__init__',
                                                                                    'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.add_data': ( 'b1. training.html#simplevisual.add_data',
                                                                                    'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.add_table_row': ( 'b1. training.html#simplevisual.add_table_row',
                                                                                         'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.hide': ( 'b1. training.html#simplevisual.hide',
                                                                                'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.on_iter': ( 'b1. training.html#simplevisual.on_iter',
                                                                                   'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.plot': ( 'b1. training.html#simplevisual.plot',
                                                                                'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.show': ( 'b1. training.html#simplevisual.show',
                                                                                'whisperspeech/train.py'),
                                     'whisperspeech.train.train': ('b1. training.html#train', 'whisperspeech/train.py'),
                                     'whisperspeech.train.validate': ('b1. training.html#validate', 'whisperspeech/train.py')},
            'whisperspeech.train_multi': { 'whisperspeech.train_multi.TrainingTask': ( 'b2. training (lightning).html#trainingtask',
                                                                                       'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.__init__': ( 'b2. training '
                                                                                                '(lightning).html#trainingtask.__init__',
                                                                                                'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.configure_optimizers': ( 'b2. training '
                                                                                                            '(lightning).html#trainingtask.configure_optimizers',
                                                                                                            'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.on_fit_start': ( 'b2. training '
                                                                                                    '(lightning).html#trainingtask.on_fit_start',
                                                                                                    'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.on_validation_epoch_end': ( 'b2. training '
                                                                                                               '(lightning).html#trainingtask.on_validation_epoch_end',
                                                                                                               'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.test_step': ( 'b2. training '
                                                                                                 '(lightning).html#trainingtask.test_step',
                                                                                                 'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.training_step': ( 'b2. training '
                                                                                                     '(lightning).html#trainingtask.training_step',
                                                                                                     'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.validation_step': ( 'b2. training '
                                                                                                       '(lightning).html#trainingtask.validation_step',
                                                                                                       'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.load_file_reference': ( 'b2. training '
                                                                                              '(lightning).html#load_file_reference',
                                                                                              'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.parse_and_call': ( 'b2. training (lightning).html#parse_and_call',
                                                                                         'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.parse_dataset_string': ( 'b2. training '
                                                                                               '(lightning).html#parse_dataset_string',
                                                                                               'whisperspeech/train_multi.py')},
            'whisperspeech.train_multi_test': { 'whisperspeech.train_multi_test.TrainingTask': ( 'b2. training '
                                                                                                 '(lightning)-copy1.html#trainingtask',
                                                                                                 'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.TrainingTask.__init__': ( 'b2. training '
                                                                                                          '(lightning)-copy1.html#trainingtask.__init__',
                                                                                                          'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.TrainingTask.configure_optimizers': ( 'b2. training '
                                                                                                                      '(lightning)-copy1.html#trainingtask.configure_optimizers',
                                                                                                                      'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.TrainingTask.on_fit_start': ( 'b2. training '
                                                                                                              '(lightning)-copy1.html#trainingtask.on_fit_start',
                                                                                                              'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.TrainingTask.on_validation_epoch_end': ( 'b2. training '
                                                                                                                         '(lightning)-copy1.html#trainingtask.on_validation_epoch_end',
                                                                                                                         'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.TrainingTask.test_step': ( 'b2. training '
                                                                                                           '(lightning)-copy1.html#trainingtask.test_step',
                                                                                                           'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.TrainingTask.training_step': ( 'b2. training '
                                                                                                               '(lightning)-copy1.html#trainingtask.training_step',
                                                                                                               'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.TrainingTask.validation_step': ( 'b2. training '
                                                                                                                 '(lightning)-copy1.html#trainingtask.validation_step',
                                                                                                                 'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.load_file_reference': ( 'b2. training '
                                                                                                        '(lightning)-copy1.html#load_file_reference',
                                                                                                        'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.parse_and_call': ( 'b2. training '
                                                                                                   '(lightning)-copy1.html#parse_and_call',
                                                                                                   'whisperspeech/train_multi_test.py'),
                                                'whisperspeech.train_multi_test.parse_dataset_string': ( 'b2. training '
                                                                                                         '(lightning)-copy1.html#parse_dataset_string',
                                                                                                         'whisperspeech/train_multi_test.py')},
            'whisperspeech.utils': { 'whisperspeech.utils.AtomicTarWriter': ( 'd. common dataset utilities.html#atomictarwriter',
                                                                              'whisperspeech/utils.py'),
                                     'whisperspeech.utils.derived_dataset': ( 'd. common dataset utilities.html#derived_dataset',
                                                                              'whisperspeech/utils.py'),
                                     'whisperspeech.utils.derived_name': ( 'd. common dataset utilities.html#derived_name',
                                                                           'whisperspeech/utils.py'),
                                     'whisperspeech.utils.find_audio': ( 'd. common dataset utilities.html#find_audio',
                                                                         'whisperspeech/utils.py'),
                                     'whisperspeech.utils.join_datasets': ( 'd. common dataset utilities.html#join_datasets',
                                                                            'whisperspeech/utils.py'),
                                     'whisperspeech.utils.join_datasets.__init__': ( 'd. common dataset '
                                                                                     'utilities.html#join_datasets.__init__',
                                                                                     'whisperspeech/utils.py'),
                                     'whisperspeech.utils.join_datasets.__iter__': ( 'd. common dataset '
                                                                                     'utilities.html#join_datasets.__iter__',
                                                                                     'whisperspeech/utils.py'),
                                     'whisperspeech.utils.join_datasets.__len__': ( 'd. common dataset '
                                                                                    'utilities.html#join_datasets.__len__',
                                                                                    'whisperspeech/utils.py'),
                                     'whisperspeech.utils.merge_in': ( 'd. common dataset utilities.html#merge_in',
                                                                       'whisperspeech/utils.py'),
                                     'whisperspeech.utils.readlines': ( 'd. common dataset utilities.html#readlines',
                                                                        'whisperspeech/utils.py'),
                                     'whisperspeech.utils.resampler': ( 'd. common dataset utilities.html#resampler',
                                                                        'whisperspeech/utils.py'),
                                     'whisperspeech.utils.shard_glob': ( 'd. common dataset utilities.html#shard_glob',
                                                                         'whisperspeech/utils.py'),
                                     'whisperspeech.utils.split_to_chunks': ( 'd. common dataset utilities.html#split_to_chunks',
                                                                              'whisperspeech/utils.py'),
                                     'whisperspeech.utils.torch_audio_opus': ( 'd. common dataset utilities.html#torch_audio_opus',
                                                                               'whisperspeech/utils.py'),
                                     'whisperspeech.utils.vad_dataset': ( 'd. common dataset utilities.html#vad_dataset',
                                                                          'whisperspeech/utils.py')},
            'whisperspeech.vad': { 'whisperspeech.vad.extract_segments': ( '1b. voice activity detection.html#extract_segments',
                                                                           'whisperspeech/vad.py'),
                                   'whisperspeech.vad.fix_dots_in_names': ( '1b. voice activity detection.html#fix_dots_in_names',
                                                                            'whisperspeech/vad.py'),
                                   'whisperspeech.vad.flac_to_vad_name': ( '1b. voice activity detection.html#flac_to_vad_name',
                                                                           'whisperspeech/vad.py'),
                                   'whisperspeech.vad.load_dataset': ( '1b. voice activity detection.html#load_dataset',
                                                                       'whisperspeech/vad.py'),
                                   'whisperspeech.vad.process_shard': ( '1b. voice activity detection.html#process_shard',
                                                                        'whisperspeech/vad.py'),
                                   'whisperspeech.vad.segment_audio': ( '1b. voice activity detection.html#segment_audio',
                                                                        'whisperspeech/vad.py')},
            'whisperspeech.vad_merge': { 'whisperspeech.vad_merge.chunk_merger': ( '1c. vad merging.html#chunk_merger',
                                                                                   'whisperspeech/vad_merge.py'),
                                         'whisperspeech.vad_merge.chunked_audio_dataset': ( '1c. vad merging.html#chunked_audio_dataset',
                                                                                            'whisperspeech/vad_merge.py'),
                                         'whisperspeech.vad_merge.derived_name': ( '1c. vad merging.html#derived_name',
                                                                                   'whisperspeech/vad_merge.py'),
                                         'whisperspeech.vad_merge.merge_by_src_key': ( '1c. vad merging.html#merge_by_src_key',
                                                                                       'whisperspeech/vad_merge.py'),
                                         'whisperspeech.vad_merge.prepare_mvad': ( '1c. vad merging.html#prepare_mvad',
                                                                                   'whisperspeech/vad_merge.py'),
                                         'whisperspeech.vad_merge.random_cutter': ( '1c. vad merging.html#random_cutter',
                                                                                    'whisperspeech/vad_merge.py'),
                                         'whisperspeech.vad_merge.split': ('1c. vad merging.html#split', 'whisperspeech/vad_merge.py')},
            'whisperspeech.verify_wds': { 'whisperspeech.verify_wds.process_shard': ( '0. verify webdataset archives.html#process_shard',
                                                                                      'whisperspeech/verify_wds.py')},
            'whisperspeech.vq_stoks': { 'whisperspeech.vq_stoks.RQBottleneckTransformer': ( '2b. whisper quantization (semantic token) '
                                                                                            'model.html#rqbottlenecktransformer',
                                                                                            'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.__init__': ( '2b. whisper quantization (semantic '
                                                                                                     'token) '
                                                                                                     'model.html#rqbottlenecktransformer.__init__',
                                                                                                     'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.decode_text': ( '2b. whisper quantization '
                                                                                                        '(semantic token) '
                                                                                                        'model.html#rqbottlenecktransformer.decode_text',
                                                                                                        'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.dequantize': ( '2b. whisper quantization (semantic '
                                                                                                       'token) '
                                                                                                       'model.html#rqbottlenecktransformer.dequantize',
                                                                                                       'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.device': ( '2b. whisper quantization (semantic '
                                                                                                   'token) '
                                                                                                   'model.html#rqbottlenecktransformer.device',
                                                                                                   'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.downsample_embeddings': ( '2b. whisper '
                                                                                                                  'quantization (semantic '
                                                                                                                  'token) '
                                                                                                                  'model.html#rqbottlenecktransformer.downsample_embeddings',
                                                                                                                  'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.encode_audio': ( '2b. whisper quantization '
                                                                                                         '(semantic token) '
                                                                                                         'model.html#rqbottlenecktransformer.encode_audio',
                                                                                                         'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.encode_mel': ( '2b. whisper quantization (semantic '
                                                                                                       'token) '
                                                                                                       'model.html#rqbottlenecktransformer.encode_mel',
                                                                                                       'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.ensure_whisper': ( '2b. whisper quantization '
                                                                                                           '(semantic token) '
                                                                                                           'model.html#rqbottlenecktransformer.ensure_whisper',
                                                                                                           'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.extract_teacher': ( '2b. whisper quantization '
                                                                                                            '(semantic token) '
                                                                                                            'model.html#rqbottlenecktransformer.extract_teacher',
                                                                                                            'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.forward': ( '2b. whisper quantization (semantic '
                                                                                                    'token) '
                                                                                                    'model.html#rqbottlenecktransformer.forward',
                                                                                                    'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.get_metrics': ( '2b. whisper quantization '
                                                                                                        '(semantic token) '
                                                                                                        'model.html#rqbottlenecktransformer.get_metrics',
                                                                                                        'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.init_transformer': ( '2b. whisper quantization '
                                                                                                             '(semantic token) '
                                                                                                             'model.html#rqbottlenecktransformer.init_transformer',
                                                                                                             'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.load_checkpoint': ( '2b. whisper quantization '
                                                                                                            '(semantic token) '
                                                                                                            'model.html#rqbottlenecktransformer.load_checkpoint',
                                                                                                            'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.load_model': ( '2b. whisper quantization (semantic '
                                                                                                       'token) '
                                                                                                       'model.html#rqbottlenecktransformer.load_model',
                                                                                                       'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.quantize': ( '2b. whisper quantization (semantic '
                                                                                                     'token) '
                                                                                                     'model.html#rqbottlenecktransformer.quantize',
                                                                                                     'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.save_model': ( '2b. whisper quantization (semantic '
                                                                                                       'token) '
                                                                                                       'model.html#rqbottlenecktransformer.save_model',
                                                                                                       'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.RQBottleneckTransformer.setup': ( '2b. whisper quantization (semantic '
                                                                                                  'token) '
                                                                                                  'model.html#rqbottlenecktransformer.setup',
                                                                                                  'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.Tunables': ( '2b. whisper quantization (semantic token) '
                                                                             'model.html#tunables',
                                                                             'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.Tunables.__post_init__': ( '2b. whisper quantization (semantic token) '
                                                                                           'model.html#tunables.__post_init__',
                                                                                           'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.Tunables.upgrade': ( '2b. whisper quantization (semantic token) '
                                                                                     'model.html#tunables.upgrade',
                                                                                     'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.add_masks': ( '2b. whisper quantization (semantic token) '
                                                                              'model.html#add_masks',
                                                                              'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.derived_dataset': ( '2b. whisper quantization (semantic token) '
                                                                                    'model.html#derived_dataset',
                                                                                    'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.load_dataset': ( '2b. whisper quantization (semantic token) '
                                                                                 'model.html#load_dataset',
                                                                                 'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.logrand': ( '2b. whisper quantization (semantic token) model.html#logrand',
                                                                            'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.make_model': ( '2b. whisper quantization (semantic token) '
                                                                               'model.html#make_model',
                                                                               'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.merge_in': ( '2b. whisper quantization (semantic token) '
                                                                             'model.html#merge_in',
                                                                             'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.rand': ( '2b. whisper quantization (semantic token) model.html#rand',
                                                                         'whisperspeech/vq_stoks.py'),
                                        'whisperspeech.vq_stoks.tokenize_text': ( '2b. whisper quantization (semantic token) '
                                                                                  'model.html#tokenize_text',
                                                                                  'whisperspeech/vq_stoks.py')},
            'whisperspeech.wer_metrics': { 'whisperspeech.wer_metrics.DfBuilder': ( 'c. word error rate metrics.html#dfbuilder',
                                                                                    'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.DfBuilder.__init__': ( 'c. word error rate '
                                                                                             'metrics.html#dfbuilder.__init__',
                                                                                             'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.DfBuilder.df': ( 'c. word error rate metrics.html#dfbuilder.df',
                                                                                       'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.DfBuilder.push': ( 'c. word error rate metrics.html#dfbuilder.push',
                                                                                         'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.WERStats': ( 'c. word error rate metrics.html#werstats',
                                                                                   'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.WERStats.__init__': ( 'c. word error rate '
                                                                                            'metrics.html#werstats.__init__',
                                                                                            'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.WERStats.push_sample': ( 'c. word error rate '
                                                                                               'metrics.html#werstats.push_sample',
                                                                                               'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.librispeech_data': ( 'c. word error rate '
                                                                                           'metrics.html#librispeech_data',
                                                                                           'whisperspeech/wer_metrics.py'),
                                           'whisperspeech.wer_metrics.whisper_normalize': ( 'c. word error rate '
                                                                                            'metrics.html#whisper_normalize',
                                                                                            'whisperspeech/wer_metrics.py')},
            'whisperspeech.wh_transcribe': { 'whisperspeech.wh_transcribe.chunk_merger': ( '2a. whisper quantization dataset '
                                                                                           'preparation.html#chunk_merger',
                                                                                           'whisperspeech/wh_transcribe.py'),
                                             'whisperspeech.wh_transcribe.flac_to_txt_name': ( '2a. whisper quantization dataset '
                                                                                               'preparation.html#flac_to_txt_name',
                                                                                               'whisperspeech/wh_transcribe.py'),
                                             'whisperspeech.wh_transcribe.merge_in': ( '2a. whisper quantization dataset '
                                                                                       'preparation.html#merge_in',
                                                                                       'whisperspeech/wh_transcribe.py'),
                                             'whisperspeech.wh_transcribe.process_shard': ( '2a. whisper quantization dataset '
                                                                                            'preparation.html#process_shard',
                                                                                            'whisperspeech/wh_transcribe.py'),
                                             'whisperspeech.wh_transcribe.random_cutter': ( '2a. whisper quantization dataset '
                                                                                            'preparation.html#random_cutter',
                                                                                            'whisperspeech/wh_transcribe.py'),
                                             'whisperspeech.wh_transcribe.split_to_chunks': ( '2a. whisper quantization dataset '
                                                                                              'preparation.html#split_to_chunks',
                                                                                              'whisperspeech/wh_transcribe.py'),
                                             'whisperspeech.wh_transcribe.wds_compose': ( '2a. whisper quantization dataset '
                                                                                          'preparation.html#wds_compose',
                                                                                          'whisperspeech/wh_transcribe.py')},
            'whisperspeech.wh_transcribe_faster': { 'whisperspeech.wh_transcribe_faster.chunk_merger': ( '2a. whisper quantization dataset '
                                                                                                         'preparation-copy1.html#chunk_merger',
                                                                                                         'whisperspeech/wh_transcribe_faster.py'),
                                                    'whisperspeech.wh_transcribe_faster.flac_to_txt_name': ( '2a. whisper quantization '
                                                                                                             'dataset '
                                                                                                             'preparation-copy1.html#flac_to_txt_name',
                                                                                                             'whisperspeech/wh_transcribe_faster.py'),
                                                    'whisperspeech.wh_transcribe_faster.merge_in': ( '2a. whisper quantization dataset '
                                                                                                     'preparation-copy1.html#merge_in',
                                                                                                     'whisperspeech/wh_transcribe_faster.py'),
                                                    'whisperspeech.wh_transcribe_faster.process_shard': ( '2a. whisper quantization '
                                                                                                          'dataset '
                                                                                                          'preparation-copy1.html#process_shard',
                                                                                                          'whisperspeech/wh_transcribe_faster.py'),
                                                    'whisperspeech.wh_transcribe_faster.random_cutter': ( '2a. whisper quantization '
                                                                                                          'dataset '
                                                                                                          'preparation-copy1.html#random_cutter',
                                                                                                          'whisperspeech/wh_transcribe_faster.py'),
                                                    'whisperspeech.wh_transcribe_faster.split_to_chunks': ( '2a. whisper quantization '
                                                                                                            'dataset '
                                                                                                            'preparation-copy1.html#split_to_chunks',
                                                                                                            'whisperspeech/wh_transcribe_faster.py'),
                                                    'whisperspeech.wh_transcribe_faster.wds_compose': ( '2a. whisper quantization dataset '
                                                                                                        'preparation-copy1.html#wds_compose',
                                                                                                        'whisperspeech/wh_transcribe_faster.py')}}}
