[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "symtorch"
version = "0.0.0"
description = "Symbolic Expressions in PyTorch"
readme = "README.md"
authors = [{ name = "John Gardner", email = "gardner.john97@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
keywords = []
dependencies = ["torch", "sympy", "numpy"]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = ["notebook", "pytest", "pytest-cov", "bumpver", "ruff"]
publish = ["build", "twine"]

[project.urls]
Homepage = "https://github.com/jla-gardner/symtorch"

[tool.bumpver]
current_version = "0.0.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"symtorch.py" = ["{version}"]


[tool.ruff]
# Exclude a variety of commonly ignored directories.
include = ["src", "tests"]
extend-include = ["*.ipynb"]

line-length = 80
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]
ignore = ["SIM300", "E402", "E703"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.coverage.paths]
source = ["symtorch.py"]
