{"name": "HumanEval_27_flip_case", "language": "py", "prompt": "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\n", "tests": "def check(candidate):\n    total_tests = 0\n    failed_tests = 0\n\n    try:\n        total_tests += 1\n        assert candidate('') == ''\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate('Hello!') == 'hELLO!'\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n    except AssertionError:\n        failed_tests += 1\n    print(total_tests, failed_tests)\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n", "completions": ["    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    string = string.lower()\n    new_string = \"\"\n    for letter in string:\n        if letter.islower():\n            new_string += letter.upper()\n        else:\n            new_string += letter.lower()\n    return new_string\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n    # return ''.join([c.upper() if c.islower() else c.lower() for c in string])\n\n", "    \n    return \"\".join(char.upper() if char.islower() else char.lower() for char in string)\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return ''.join(char.upper() if char.islower() else char.lower() for char in string)\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    upper_case = ''\n    lower_case = ''\n    for char in string:\n        if char.islower():\n            lower_case += char.upper()\n        elif char.isupper():\n            upper_case += char.lower()\n    return lower_case + upper_case\n", "    return string.swapcase()\n\n", "    upper = string.upper()\n    return upper[::-1]\n", "    \n    return string.swapcase()\n    ", "    return string.swapcase()\n", "    if not isinstance(string, str):\n        raise TypeError(\"Input string should be a string\")\n    return string.swapcase()\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return ''.join([x.upper() if x.islower() else x.lower() for x in string])\n\n", "    return string.swapcase()\n\n", "    return ''.join(c.upper() if c.islower() else c.lower() for c in string)\n\n", "    return ''.join(x.upper() if x.islower() else x.lower() for x in string)\n", "    return \"\".join([x.upper() if x.islower() else x.lower() for x in string])\n\n", "    return string.swapcase()\n", "    \n    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return \"\".join([char.upper() if char.islower() else char.lower() for char in string])\n\n", "    return string.swapcase()\n\n", "    return \"\".join([char.upper() if char.islower() else char.lower() for char in string])\n\n", "    return string.swapcase()\n\n", "    return \"\".join([c.upper() if c.islower() else c.lower() for c in string])\n    \n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    new_string = \"\"\n    for char in string:\n        if char.islower():\n            new_string += char.upper()\n        else:\n            new_string += char.lower()\n    return new_string\n\n", "    return \"\".join([c.upper() if c.islower() else c.lower() for c in string])\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    upper = ''\n    lower = ''\n    for char in string:\n        if char.isupper():\n            upper += char.lower()\n        else:\n            lower += char.upper()\n    return lower + upper\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return ''.join(\n        [char.upper() if char.islower() else char.lower() for char in string]\n    )\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return ''.join([c.upper() if c.islower() else c.lower() for c in string])\n\n", "    # TODO: complete this function\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    new_string = ''\n    for char in string:\n        if char.isupper():\n            new_string += char.lower()\n        else:\n            new_string += char.upper()\n    return new_string\n\n", "    return string.swapcase()\n\n", "    return ''.join(char.upper() if i % 2 else char.lower() for i, char in enumerate(string))\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    new_string = string.swapcase()\n    return new_string\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    string = string.upper()\n    return string.lower()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return ''.join([x.swapcase() for x in string])\n", "    return string.swapcase()\n\n", "    lower = string.lower()\n    upper = lower.upper()\n    return upper\n\n", "    return string.swapcase()\n\n", "    new_string = ''\n    for character in string:\n        if character.isalpha():\n            if character.islower():\n                new_string += character.upper()\n            else:\n                new_string += character.lower()\n        else:\n            new_string += character\n    return new_string\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    # Your code here\n    s = list(string)\n    for i in range(len(s)):\n        if s[i].isupper():\n            s[i] = s[i].lower()\n        elif s[i].islower():\n            s[i] = s[i].upper()\n    return ''.join(s)\n\n", "    return string.swapcase()\n", "    return ''.join(c.upper() if c.islower() else c.lower() for c in string)\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    new_string = ''\n    for char in string:\n        if char.islower():\n            new_string += char.upper()\n        elif char.isupper():\n            new_string += char.lower()\n        else:\n            new_string += char\n    return new_string\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    if len(string) == 0:\n        return string\n    else:\n        return string[0].lower() + string[1:] + string[0].upper()\n", "    return ''.join([x.upper() if x.islower() else x.lower() for x in string])\n\n", "    return string.swapcase()\n\n", "    new_string = \"\"\n    for letter in string:\n        if letter.islower():\n            new_string += letter.upper()\n        else:\n            new_string += letter.lower()\n    return new_string\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    result = []\n    for s in string:\n        if s.isupper():\n            result.append(s.lower())\n        else:\n            result.append(s.upper())\n    return \"\".join(result)\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    flipped_string = string.swapcase()\n    return flipped_string\n", "    return string.swapcase()\n", "    return string.swapcase()\n", "    result = \"\"\n    for character in string:\n        if character.isupper():\n            result += character.lower()\n        elif character.islower():\n            result += character.upper()\n        else:\n            result += character\n    return result\n\n", "    return \"\".join([x.lower() if x.islower() else x.upper() for x in string])\n\n", "    return ''.join(char.swapcase() if char.islower() else char.lower() for char in string)\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return \"\".join(\n        [\n            \"\".join([c.upper(), c.lower()])\n            if c.isalpha() and c.islower()\n            else c\n            for c in string\n        ]\n    )\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return \"\".join([x.upper() if x.islower() else x.lower() for x in string])\n", "    return string.swapcase()\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return ''.join([\n        char.upper() if char.islower() else char.lower()\n        for char in string\n    ])\n\n", "    return string.swapcase()\n", "    if not isinstance(string, str):\n        raise TypeError(\"string must be a string type\")\n    return string.swapcase()\n", "    return string.swapcase()\n", "    return string.swapcase()\n", "    return \"\".join(x.swapcase() if x.islower() else x for x in string)\n\n", "    new_string = ''\n    for char in string:\n        if char.islower():\n            new_string += char.upper()\n        else:\n            new_string += char.lower()\n    return new_string\n\n", "    return string.swapcase()\n\n", "    return \"\".join([char.upper() if char.islower() else char.lower() for char in string])\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return ''.join(c.upper() if c.islower() else c.lower() for c in string)\n\n", "    return string.swapcase()\n\n", "    result = ''\n    for ch in string:\n        if ch.isupper():\n            result += ch.lower()\n        elif ch.islower():\n            result += ch.upper()\n        else:\n            result += ch\n    return result\n\n", "    return string.swapcase()\n\n", "    upper = string.upper()\n    lower = upper.lower()\n    return lower\n\n", "    flipped_str = ''\n    for char in string:\n        if char.isupper():\n            flipped_str += char.lower()\n        else:\n            flipped_str += char.upper()\n    return flipped_str\n\n", "    return ''.join(map(lambda x: x.upper() if x.islower() else x.lower(), string))\n", "    return string.swapcase()\n\n", "    return string.upper() if string.islower() else string.lower()\n    \n", "    return string.swapcase()\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.swapcase()\n\n", "    return string.upper() if string.islower() else string.lower()\n\n", "    return string.swapcase()\n\n", "    # Your code here\n    return string.swapcase()\n\n", "    return ''.join(x.swapcase() if x.islower() else x.lower() for x in string)\n\n", "    upper_string = \"\"\n    for i in range(len(string)):\n        if string[i].isupper():\n            upper_string = upper_string + string[i].lower()\n        else:\n            upper_string = upper_string + string[i].upper()\n    return upper_string\n\n", "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    if len(string) == 0:\n        return string\n\n    string = list(string)\n    first_char = string[0]\n    if first_char.islower():\n        string[0] = first_char.upper()\n    elif first_char.isupper():\n        string[0] = first_char.lower()\n    return ''.join(string)\n", "    return string.swapcase()\n\n", "    if len(string) == 0:\n        return string\n\n    return string[::-1].swapcase()\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}