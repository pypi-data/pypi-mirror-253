{"name": "HumanEval_157_right_angle_triangle", "language": "py", "prompt": "def right_angle_triangle(a: int, b: int, c: int) -> bool:\n    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2, 3)\n    False\n    \"\"\"\n", "tests": "def check(candidate):\n    total_tests = 0\n    failed_tests = 0\n\n    try:\n        total_tests += 1\n        assert candidate(3, 4, 5) == True\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(1, 2, 3) == False\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(10, 6, 8) == True\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(2, 2, 2) == False\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(7, 24, 25) == True\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(10, 5, 7) == False\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(5, 12, 13) == True\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(15, 8, 17) == True\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(48, 55, 73) == True\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(1, 1, 1) == False\n    except AssertionError:\n        failed_tests += 1\n\n    try:\n        total_tests += 1\n        assert candidate(2, 2, 10) == False\n    except AssertionError:\n        failed_tests += 1\n    print(total_tests, failed_tests)\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n", "completions": ["    if a == b == c:\n        return False\n    else:\n        if a**2 + b**2 == c**2:\n            return True\n        else:\n            return False\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    else:\n        return True\n\n", "    return (a**2 + b**2) == c**2\n", "    if a**2 + b**2 == c**2:\n        return True\n    return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    # a**2 + b**2 = c**2\n    if a**2 + b**2!= c**2:\n        return False\n    if a**2 + c**2!= b**2:\n        return False\n    if b**2 + c**2!= a**2:\n        return False\n    return True\n\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n\n", "    # Right angle triangle is a triangle in which one angle is right angle or \n    # 90 degree.\n    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    if a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n        return True\n    else:\n        return False\n", "    if a * a + b * b == c * c:\n        return True\n    else:\n        return False\n", "    # assert a + b > c, \"The sum of the lengths of the sides should be greater than the length of the third side.\"\n    # assert a + c > b, \"The sum of the lengths of the sides should be greater than the length of the second side.\"\n    # assert b + c > a, \"The sum of the lengths of the sides should be greater than the length of the first side.\"\n\n    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    return False\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n", "    # Check if the side lengths are equal\n    if a == b == c:\n        return False\n\n    # Check if the sides are equal or if the sides are not equal and sides are\n    # not equal and the sides are equal and are unequal\n    if a == b or a == c or b == c:\n        return False\n\n    # Check if the sides are not equal and the sides are not equal and the sides\n    # are equal and are unequal\n    if a!= b and a!= c and b!= c:\n        return False\n\n    # Check if the sides are equal\n    if a == b and a == c:\n        return True\n\n    # Check if the sides are not equal\n    if a!= b and a!= c and b!= c:\n        return True\n\n    # Check if the sides are equal and the sides are equal\n    if a == b and a == c:\n        return True\n\n    # Check if the sides are not equal and the sides are not equal and the sides\n    # are equal and are unequal\n    if a!= b and a!= c and b!= c:\n        return True\n\n    # Check if the sides are not equal\n    if a!= b and a!= c:\n        return True\n\n    # Check if the sides are equal\n    if a == b and a == c:\n        return True\n\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n\n", "    if not is_positive_number(a) or not is_positive_number(b) or not is_positive_number(c):\n        raise ValueError(\"All inputs should be positive numbers\")\n    if a + b <= c or a + c <= b or b + c <= a:\n        raise ValueError(\"The sum of any two sides should be greater than the third side\")\n    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    return False\n", "    return (a + b) > c and (a + c) > b and (b + c) > a\n\n", "    return a ** 2 + b ** 2 == c ** 2\n", "    return (a * a + b * b == c * c) or (a * a + c * c == b * b)\n\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    return a**2 + b**2 == c**2\n", "    if a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n        return True\n    return False\n\n", "    if a == b and b == c:\n        return False\n    elif a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2:\n        return True\n    else:\n        return False\n", "    return a * a + b * b == c * c or a * a + c * c == b * b or c * c + b * b == a * a\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n", "    \n    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    return True\n\n", "    return a**2 + b**2 == c**2\n", "    return (a**2 + b**2) == (c**2) and a**2 == b**2 or \\\n           (a**2 + c**2) == (b**2) and a**2 == c**2\n", "    if a * a + b * b == c * c or a * a + c * c == b * b or b * b + c * c == a * a:\n        return True\n    else:\n        return False\n\n", "    return (a * a + b * b) == c * c\n", "    # check if the sum of a and b is greater than c\n    # if not, then return false\n    if a+b > c:\n        if a**2+b**2 == c**2:\n            return True\n        else:\n            return False\n    else:\n        return False\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    return False\n\n", "    if a**2 + b**2 == c**2:\n        return True\n    return False\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if not is_positive_int(a) or not is_positive_int(b) or not is_positive_int(c):\n        return False\n    elif a == b == c:\n        return True\n    elif a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n        return True\n    else:\n        return False\n\n", "    return abs((a ** 2 + b ** 2 - c ** 2) / 2) < 1e-6\n\n", "    if abs(a*b - c*c) < 1:\n        return True\n    else:\n        return False\n", "    if a + b > c and a + c > b and b + c > a:\n        if a * a + b * b == c * c or a * a + c * c == b * b or b * b + c * c == a * a:\n            return True\n        else:\n            return False\n    else:\n        return False\n\n", "    return a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2 or a ** 2 + c ** 2 == b ** 2\n\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    \n    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n    \n\n\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n\n", "    if a * a + b * b == c * c or a * a + c * c == b * b or c * c + b * b == a * a:\n        return True\n    return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    return a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    else:\n        return True\n\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    \n    if (a**2 + b**2) == c**2 or (a**2 + c**2) == b**2 or (b**2 + c**2) == a**2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    if a == b and a == c:\n        return False\n    if a == b or a == c or b == c:\n        return False\n    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2\n\n", "    # check if triangle is a right angled triangle\n    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    return a ** 2 + b ** 2 == c ** 2\n\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2:\n        return True\n    return False\n", "    return math.sqrt(a**2 + b**2) == c and a**2 + b**2 == c**2\n", "    \n    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if a * a + b * b == c * c:\n        return True\n    else:\n        return False\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    else:\n        return False\n\n", "    # Calculate the semi-perimeter\n    perimeter = a + b + c\n    # Calculate the area\n    area = (perimeter ** 2)/2\n    # Calculate the difference between the area and the desired value\n    diff = abs(area - math.sqrt(area))\n    # If the difference is less than or equal to 0.01, then return True\n    return diff <= 0.01\n", "    return a**2 + b**2 == c**2 or c**2 + b**2 == a**2\n\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2\n\n", "    if a**2 + b**2 == c**2:\n        return True\n    return False\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    else:\n        return False\n\n", "    if not(a + b > c and a + c > b and b + c > a):\n        return False\n    else:\n        if (a**2 + b**2 == c**2) or (b**2 + c**2 == a**2) or (c**2 + a**2 == b**2):\n            return True\n        else:\n            return False\n    \n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or c**2 + a**2 == b**2:\n        return True\n    else:\n        return False\n", "    return (a**2 + b**2) == (c**2) or (b**2 + c**2) == (a**2)\n", "    return (a * a + b * b == c * c) or (a * a + c * c == b * b) or (b * b + c * c == a * a)\n\n", "    return (a**2 + b**2 == c**2) or (a**2 + c**2 == b**2) or (b**2 + c**2 == a**2)\n\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if a**2 + b**2 == c**2 or c**2 + b**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n\n", "    return a**2 + b**2 == c**2\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or c**2 + a**2 == b**2:\n        return True\n    return False\n", "    return a**2 + b**2 == c**2\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    else:\n        return False\n\n", "    if abs(a * a - b * b - c * c) < 1e-10:\n        return True\n    if abs(a * a + b * b - c * c) < 1e-10:\n        return True\n    if abs(a * a + c * c - b * b) < 1e-10:\n        return True\n    return False\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    else:\n        return True\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if (a + b) <= c or (a + c) <= b or (b + c) <= a:\n        return False\n    else:\n        return True\n", "    if (a ** 2 + b ** 2) == (c ** 2):\n        return True\n    else:\n        return False\n", "    if not (a + b > c and a + c > b and b + c > a):\n        return False\n    return True\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n", "    return abs(a ** 2 + b ** 2 - c ** 2) < 1e-6\n\n", "    return a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2\n\n", "    if a * a + b * b == c * c:\n        return True\n    else:\n        return False\n\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n    \n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    else:\n        if a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n            return True\n        else:\n            return False\n\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    return (a**2 + b**2 == c**2) or (b**2 + c**2 == a**2) or (a**2 + c**2 == b**2)\n", "    if a**2 + b**2 == c**2:\n        return True\n    elif a**2 + c**2 == b**2:\n        return True\n    elif b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    # calculate the semi-perimeter\n    s = (a + b + c) / 2\n    \n    # calculate the area\n    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5\n    \n    return area == 1\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or c**2 + a**2 == b**2:\n        return True\n    return False\n", "    if a + b > c and a + c > b and b + c > a:\n        return True\n    else:\n        return False\n\n", "    return abs(a ** 2 + b ** 2 - c ** 2) < 1e-10\n\n", "    return a**2 + b**2 == c**2\n\n", "    return abs(a * c - b * sqrt(pow(a, 2) + pow(b, 2))) < 1e-10\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    return a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or c ** 2 + b ** 2 == a ** 2\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2\n", "    # a**2 + b**2 == c**2\n    return (a * a + b * b) == (c * c)\n\n", "    if (a * a + b * b == c * c) or (a * a + c * c == b * b) or (b * b + c * c == a * a):\n        return True\n    else:\n        return False\n\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2\n", "    return a*a == b*b + c*c or b*b == a*a + c*c or c*c == a*a + b*b\n", "    # TODO: Write function body\n    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    return False\n", "    return (a**2 + b**2) == c**2 or (b**2 + c**2) == a**2 or (a**2 + c**2) == b**2\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2:\n        return True\n    return False\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    return False\n", "    if a**2 + b**2 == c**2:\n        return True\n    elif a**2 + c**2 == b**2:\n        return True\n    elif b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    if not is_positive_int(a) or not is_positive_int(b) or not is_positive_int(c):\n        return False\n    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    if math.sqrt((a**2 + b**2) * (a**2 + c**2) * (b**2 + c**2)) == a:\n        return True\n    return False\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or c**2 + a**2 == b**2:\n        return True\n    else:\n        return False\n", "    # we want the sum of a + b + c to be equal to h\n    # where h = (a + b + c)/2\n    # so we need to check if a + b + c == 2h\n    # since we need to know if h is either 2 or 4\n    return a + b + c == 2 * (a + b + c) / 2\n", "    # check if a, b, c are 3 positive integers.\n    # check if the triangle is right angled.\n    if a >= 0 and b >= 0 and c >= 0:\n        if (a + b <= c) or (b + c <= a) or (a + c <= b):\n            return False\n        else:\n            return True\n    else:\n        return False\n\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    return False\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n\n", "    return (a**2 + b**2) == c**2 or (a**2 + c**2) == b**2 or (b**2 + c**2) == a**2\n", "    if a * a + b * b == c * c or a * a + c * c == b * b or c * c + b * b == a * a:\n        return True\n    else:\n        return False\n\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    return False\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    if a * a + b * b == c * c or a * a + c * c == b * b or c * c + b * b == a * a:\n        return True\n    return False\n\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    else:\n        return False\n", "    if a == b and b == c:\n        return True\n    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2:\n        return True\n    else:\n        return False\n\n", "    # is the length of the third side equal to the sum of the other two sides?\n    if a == b and b == c:\n        return False\n    elif a == b or a == c or b == c:\n        return False\n    # if not, check the sum of the other two sides is equal to the third side\n    elif a*a + b*b == c*c or b*b + c*c == a*a or a*a + c*c == b*b:\n        return True\n    # if not, return false\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2\n", "    return a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or c**2 + a**2 == b**2:\n        return True\n    else:\n        return False\n\n", "    return abs(180 - (a + b + c)) < 1\n\n", "    if not (a+b > c and a+c > b and b+c > a):\n        return False\n    else:\n        if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2:\n            return True\n        else:\n            return False\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2:\n        return True\n    return False\n", "    return a*a + b*b == c*c\n", "    if (a + b) <= c or (a + c) <= b or (b + c) <= a:\n        return False\n    else:\n        return True\n", "    return math.isclose(a**2 + b**2, c**2, abs_tol=0.001)\n", "    return math.isclose(a**2 + b**2, c**2, abs_tol=1)\n\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    return False\n", "    if a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2 or a ** 2 + c ** 2 == b ** 2:\n        return True\n    else:\n        return False\n", "    if a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or c ** 2 + b ** 2 == a ** 2:\n        return True\n    else:\n        return False\n", "    if a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n        return True\n    return False\n\n", "    return a ** 2 + b ** 2 == c ** 2\n", "    \n    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    if a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2 or a ** 2 + c ** 2 == b ** 2:\n        return True\n    else:\n        return False\n\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:\n        return True\n    else:\n        return False\n", "    if a**2 + b**2 == c**2:\n        return True\n    return False\n", "    return a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2\n", "    if a**2 + b**2 == c**2:\n        return True\n    return False\n", "    return (a**2 + b**2) == c**2\n\n", "    return math.isclose(a, b + c) and math.isclose(b, c + a) and math.isclose(c, a + b)\n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return False\n", "    if a == b == c:\n        return True\n    if a == b or b == c or a == c:\n        return True\n    return a**2 + b**2 == c**2\n", "    if (a**2 + b**2) == (c**2):\n        return True\n    elif (a**2 + b**2) > (c**2):\n        return False\n    else:\n        return False\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    else:\n        return False\n", "    if not is_positive(a) or not is_positive(b) or not is_positive(c):\n        return False\n    if a ** 2 + b ** 2!= c ** 2:\n        return False\n    if a ** 2 + c ** 2!= b ** 2:\n        return False\n    if b ** 2 + c ** 2!= a ** 2:\n        return False\n    return True\n\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n", "    return math.isclose(a**2 + b**2, c**2) and a**2 > b**2 > c**2\n\n", "    return (a**2 + b**2 == c**2) or (b**2 + c**2 == a**2)\n\n", "    return (a**2 + b**2 == c**2) or (b**2 + c**2 == a**2) or (a**2 + c**2 == b**2)\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    else:\n        return True\n\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    return False\n\n", "    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    return False\n", "    return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2\n\n", "    return a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2\n", "    # Check if side a is equal to the hypotenuse\n    if a == c:\n        return False\n    # Check if side b is equal to the opposite side of the hypotenuse\n    if b == abs(a - c):\n        return False\n    # Check if side c is equal to the opposite side of the hypotenuse\n    if c == abs(b - a):\n        return False\n    # If all the above checks have been passed, then return True\n    return True\n", "    if a + b > c and a + c > b and b + c > a:\n        if a ** 2 + b ** 2 == c ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n            return True\n        else:\n            return False\n    else:\n        return False\n\n", "    # calculate the semi-perimeter\n    perimeter = a + b + c\n\n    # calculate the area\n    area = (perimeter * (perimeter - a) * (perimeter - b) * (perimeter - c)) ** 0.5\n\n    # if the area is greater than 0\n    return area > 0\n\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    return False\n\n", "    if a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or c**2 + b**2 == a**2:\n        return True\n    else:\n        return False\n\n", "    if a ** 2 + b ** 2 == c ** 2:\n        return True\n    return False\n\n", "    if a == b and b == c:\n        return False\n    elif a == b or b == c or a == c:\n        return False\n    if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or a**2 + c**2 == b**2:\n        return True\n    else:\n        return False\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return False\n    \n    if not (a + b > c and b + c > a and a + c > b):\n        return False\n    \n    return True\n\n", "    if a**2 + b**2 == c**2:\n        return True\n    return False\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}