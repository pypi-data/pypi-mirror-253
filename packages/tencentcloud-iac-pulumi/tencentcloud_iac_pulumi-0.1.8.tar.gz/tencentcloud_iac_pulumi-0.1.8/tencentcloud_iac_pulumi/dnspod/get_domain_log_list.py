# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetDomainLogListResult',
    'AwaitableGetDomainLogListResult',
    'get_domain_log_list',
    'get_domain_log_list_output',
]

@pulumi.output_type
class GetDomainLogListResult:
    """
    A collection of values returned by getDomainLogList.
    """
    def __init__(__self__, domain=None, domain_id=None, id=None, log_lists=None, result_output_file=None):
        if domain and not isinstance(domain, str):
            raise TypeError("Expected argument 'domain' to be a str")
        pulumi.set(__self__, "domain", domain)
        if domain_id and not isinstance(domain_id, int):
            raise TypeError("Expected argument 'domain_id' to be a int")
        pulumi.set(__self__, "domain_id", domain_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if log_lists and not isinstance(log_lists, list):
            raise TypeError("Expected argument 'log_lists' to be a list")
        pulumi.set(__self__, "log_lists", log_lists)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[int]:
        return pulumi.get(self, "domain_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="logLists")
    def log_lists(self) -> Sequence[str]:
        """
        Domain Operation Log List. Note: This field may return null, indicating that no valid value can be obtained.
        """
        return pulumi.get(self, "log_lists")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetDomainLogListResult(GetDomainLogListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDomainLogListResult(
            domain=self.domain,
            domain_id=self.domain_id,
            id=self.id,
            log_lists=self.log_lists,
            result_output_file=self.result_output_file)


def get_domain_log_list(domain: Optional[str] = None,
                        domain_id: Optional[int] = None,
                        result_output_file: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDomainLogListResult:
    """
    Use this data source to query detailed information of dnspod domain_log_list

    ## Example Usage

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    domain_log_list = tencentcloud.Dnspod.get_domain_log_list(domain="iac-tf.cloud",
        domain_id=123)
    ```


    :param str domain: Domain.
    :param int domain_id: Domain ID. The parameter DomainId has a higher priority than the parameter Domain. If the parameter DomainId is passed, the parameter Domain will be ignored. You can find all Domains and DomainIds through the DescribeDomainList interface.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['domain'] = domain
    __args__['domainId'] = domain_id
    __args__['resultOutputFile'] = result_output_file
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('tencentcloud:Dnspod/getDomainLogList:getDomainLogList', __args__, opts=opts, typ=GetDomainLogListResult).value

    return AwaitableGetDomainLogListResult(
        domain=__ret__.domain,
        domain_id=__ret__.domain_id,
        id=__ret__.id,
        log_lists=__ret__.log_lists,
        result_output_file=__ret__.result_output_file)


@_utilities.lift_output_func(get_domain_log_list)
def get_domain_log_list_output(domain: Optional[pulumi.Input[str]] = None,
                               domain_id: Optional[pulumi.Input[Optional[int]]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDomainLogListResult]:
    """
    Use this data source to query detailed information of dnspod domain_log_list

    ## Example Usage

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    domain_log_list = tencentcloud.Dnspod.get_domain_log_list(domain="iac-tf.cloud",
        domain_id=123)
    ```


    :param str domain: Domain.
    :param int domain_id: Domain ID. The parameter DomainId has a higher priority than the parameter Domain. If the parameter DomainId is passed, the parameter Domain will be ignored. You can find all Domains and DomainIds through the DescribeDomainList interface.
    :param str result_output_file: Used to save results.
    """
    ...
