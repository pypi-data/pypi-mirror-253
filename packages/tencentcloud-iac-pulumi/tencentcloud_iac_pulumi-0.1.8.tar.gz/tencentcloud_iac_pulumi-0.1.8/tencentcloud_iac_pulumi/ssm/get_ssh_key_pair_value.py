# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetSshKeyPairValueResult',
    'AwaitableGetSshKeyPairValueResult',
    'get_ssh_key_pair_value',
    'get_ssh_key_pair_value_output',
]

@pulumi.output_type
class GetSshKeyPairValueResult:
    """
    A collection of values returned by getSshKeyPairValue.
    """
    def __init__(__self__, id=None, private_key=None, project_id=None, public_key=None, result_output_file=None, secret_name=None, ssh_key_description=None, ssh_key_id=None, ssh_key_name=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if private_key and not isinstance(private_key, str):
            raise TypeError("Expected argument 'private_key' to be a str")
        pulumi.set(__self__, "private_key", private_key)
        if project_id and not isinstance(project_id, int):
            raise TypeError("Expected argument 'project_id' to be a int")
        pulumi.set(__self__, "project_id", project_id)
        if public_key and not isinstance(public_key, str):
            raise TypeError("Expected argument 'public_key' to be a str")
        pulumi.set(__self__, "public_key", public_key)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if secret_name and not isinstance(secret_name, str):
            raise TypeError("Expected argument 'secret_name' to be a str")
        pulumi.set(__self__, "secret_name", secret_name)
        if ssh_key_description and not isinstance(ssh_key_description, str):
            raise TypeError("Expected argument 'ssh_key_description' to be a str")
        pulumi.set(__self__, "ssh_key_description", ssh_key_description)
        if ssh_key_id and not isinstance(ssh_key_id, str):
            raise TypeError("Expected argument 'ssh_key_id' to be a str")
        pulumi.set(__self__, "ssh_key_id", ssh_key_id)
        if ssh_key_name and not isinstance(ssh_key_name, str):
            raise TypeError("Expected argument 'ssh_key_name' to be a str")
        pulumi.set(__self__, "ssh_key_name", ssh_key_name)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="privateKey")
    def private_key(self) -> str:
        """
        Private key plain text, encoded using base64.
        """
        return pulumi.get(self, "private_key")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> int:
        """
        The project ID to which this key pair belongs.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="publicKey")
    def public_key(self) -> str:
        """
        Public key plain text, encoded using base64.
        """
        return pulumi.get(self, "public_key")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="secretName")
    def secret_name(self) -> str:
        return pulumi.get(self, "secret_name")

    @property
    @pulumi.getter(name="sshKeyDescription")
    def ssh_key_description(self) -> str:
        """
        Description of the SSH key pair. Users can modify the description information of the key pair in the CVM console.
        """
        return pulumi.get(self, "ssh_key_description")

    @property
    @pulumi.getter(name="sshKeyId")
    def ssh_key_id(self) -> str:
        return pulumi.get(self, "ssh_key_id")

    @property
    @pulumi.getter(name="sshKeyName")
    def ssh_key_name(self) -> str:
        """
        SSH key name.
        """
        return pulumi.get(self, "ssh_key_name")


class AwaitableGetSshKeyPairValueResult(GetSshKeyPairValueResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSshKeyPairValueResult(
            id=self.id,
            private_key=self.private_key,
            project_id=self.project_id,
            public_key=self.public_key,
            result_output_file=self.result_output_file,
            secret_name=self.secret_name,
            ssh_key_description=self.ssh_key_description,
            ssh_key_id=self.ssh_key_id,
            ssh_key_name=self.ssh_key_name)


def get_ssh_key_pair_value(result_output_file: Optional[str] = None,
                           secret_name: Optional[str] = None,
                           ssh_key_id: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSshKeyPairValueResult:
    """
    Use this data source to query detailed information of ssm ssh_key_pair_value

    > **NOTE:** Must set at least one of `secret_name` or `ssh_key_id`.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ssm.get_ssh_key_pair_value(secret_name="keep_terraform",
        ssh_key_id="skey-2ae2snwd")
    ```
    ### Or

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ssm.get_ssh_key_pair_value(secret_name="keep_terraform")
    ```
    ### Or

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ssm.get_ssh_key_pair_value(ssh_key_id="skey-2ae2snwd")
    ```


    :param str result_output_file: Used to save results.
    :param str secret_name: Secret name.
    :param str ssh_key_id: The key pair ID is the unique identifier of the key pair in the cloud server.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    __args__['secretName'] = secret_name
    __args__['sshKeyId'] = ssh_key_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('tencentcloud:Ssm/getSshKeyPairValue:getSshKeyPairValue', __args__, opts=opts, typ=GetSshKeyPairValueResult).value

    return AwaitableGetSshKeyPairValueResult(
        id=__ret__.id,
        private_key=__ret__.private_key,
        project_id=__ret__.project_id,
        public_key=__ret__.public_key,
        result_output_file=__ret__.result_output_file,
        secret_name=__ret__.secret_name,
        ssh_key_description=__ret__.ssh_key_description,
        ssh_key_id=__ret__.ssh_key_id,
        ssh_key_name=__ret__.ssh_key_name)


@_utilities.lift_output_func(get_ssh_key_pair_value)
def get_ssh_key_pair_value_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                  secret_name: Optional[pulumi.Input[Optional[str]]] = None,
                                  ssh_key_id: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSshKeyPairValueResult]:
    """
    Use this data source to query detailed information of ssm ssh_key_pair_value

    > **NOTE:** Must set at least one of `secret_name` or `ssh_key_id`.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ssm.get_ssh_key_pair_value(secret_name="keep_terraform",
        ssh_key_id="skey-2ae2snwd")
    ```
    ### Or

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ssm.get_ssh_key_pair_value(secret_name="keep_terraform")
    ```
    ### Or

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Ssm.get_ssh_key_pair_value(ssh_key_id="skey-2ae2snwd")
    ```


    :param str result_output_file: Used to save results.
    :param str secret_name: Secret name.
    :param str ssh_key_id: The key pair ID is the unique identifier of the key pair in the cloud server.
    """
    ...
