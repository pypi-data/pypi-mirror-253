# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetRuleEngineSettingsResult',
    'AwaitableGetRuleEngineSettingsResult',
    'get_rule_engine_settings',
    'get_rule_engine_settings_output',
]

@pulumi.output_type
class GetRuleEngineSettingsResult:
    """
    A collection of values returned by getRuleEngineSettings.
    """
    def __init__(__self__, actions=None, id=None, result_output_file=None):
        if actions and not isinstance(actions, list):
            raise TypeError("Expected argument 'actions' to be a list")
        pulumi.set(__self__, "actions", actions)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def actions(self) -> Sequence['outputs.GetRuleEngineSettingsActionResult']:
        """
        Detail info of actions which can be used in rule engine.
        """
        return pulumi.get(self, "actions")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetRuleEngineSettingsResult(GetRuleEngineSettingsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRuleEngineSettingsResult(
            actions=self.actions,
            id=self.id,
            result_output_file=self.result_output_file)


def get_rule_engine_settings(result_output_file: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRuleEngineSettingsResult:
    """
    Use this data source to query detailed information of teo ruleEngineSettings

    ## Example Usage

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    rule_engine_settings = tencentcloud.Teo.get_rule_engine_settings()
    ```


    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('tencentcloud:Teo/getRuleEngineSettings:getRuleEngineSettings', __args__, opts=opts, typ=GetRuleEngineSettingsResult).value

    return AwaitableGetRuleEngineSettingsResult(
        actions=__ret__.actions,
        id=__ret__.id,
        result_output_file=__ret__.result_output_file)


@_utilities.lift_output_func(get_rule_engine_settings)
def get_rule_engine_settings_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRuleEngineSettingsResult]:
    """
    Use this data source to query detailed information of teo ruleEngineSettings

    ## Example Usage

    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    rule_engine_settings = tencentcloud.Teo.get_rule_engine_settings()
    ```


    :param str result_output_file: Used to save results.
    """
    ...
