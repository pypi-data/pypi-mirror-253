# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OriginGroupArgs', 'OriginGroup']

@pulumi.input_type
class OriginGroupArgs:
    def __init__(__self__, *,
                 configuration_type: pulumi.Input[str],
                 origin_group_name: pulumi.Input[str],
                 origin_records: pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]],
                 origin_type: pulumi.Input[str],
                 zone_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a OriginGroup resource.
        :param pulumi.Input[str] configuration_type: Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
        :param pulumi.Input[str] origin_group_name: OriginGroup Name.
        :param pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]] origin_records: Origin site records.
        :param pulumi.Input[str] origin_type: Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `third_party`: third party cos.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        pulumi.set(__self__, "configuration_type", configuration_type)
        pulumi.set(__self__, "origin_group_name", origin_group_name)
        pulumi.set(__self__, "origin_records", origin_records)
        pulumi.set(__self__, "origin_type", origin_type)
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="configurationType")
    def configuration_type(self) -> pulumi.Input[str]:
        """
        Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
        """
        return pulumi.get(self, "configuration_type")

    @configuration_type.setter
    def configuration_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "configuration_type", value)

    @property
    @pulumi.getter(name="originGroupName")
    def origin_group_name(self) -> pulumi.Input[str]:
        """
        OriginGroup Name.
        """
        return pulumi.get(self, "origin_group_name")

    @origin_group_name.setter
    def origin_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "origin_group_name", value)

    @property
    @pulumi.getter(name="originRecords")
    def origin_records(self) -> pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]]:
        """
        Origin site records.
        """
        return pulumi.get(self, "origin_records")

    @origin_records.setter
    def origin_records(self, value: pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]]):
        pulumi.set(self, "origin_records", value)

    @property
    @pulumi.getter(name="originType")
    def origin_type(self) -> pulumi.Input[str]:
        """
        Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `third_party`: third party cos.
        """
        return pulumi.get(self, "origin_type")

    @origin_type.setter
    def origin_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "origin_type", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Input[str]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "zone_id", value)


@pulumi.input_type
class _OriginGroupState:
    def __init__(__self__, *,
                 configuration_type: Optional[pulumi.Input[str]] = None,
                 origin_group_id: Optional[pulumi.Input[str]] = None,
                 origin_group_name: Optional[pulumi.Input[str]] = None,
                 origin_records: Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]]] = None,
                 origin_type: Optional[pulumi.Input[str]] = None,
                 update_time: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OriginGroup resources.
        :param pulumi.Input[str] configuration_type: Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
        :param pulumi.Input[str] origin_group_id: OriginGroup ID.
        :param pulumi.Input[str] origin_group_name: OriginGroup Name.
        :param pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]] origin_records: Origin site records.
        :param pulumi.Input[str] origin_type: Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `third_party`: third party cos.
        :param pulumi.Input[str] update_time: Last modification date.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        if configuration_type is not None:
            pulumi.set(__self__, "configuration_type", configuration_type)
        if origin_group_id is not None:
            pulumi.set(__self__, "origin_group_id", origin_group_id)
        if origin_group_name is not None:
            pulumi.set(__self__, "origin_group_name", origin_group_name)
        if origin_records is not None:
            pulumi.set(__self__, "origin_records", origin_records)
        if origin_type is not None:
            pulumi.set(__self__, "origin_type", origin_type)
        if update_time is not None:
            pulumi.set(__self__, "update_time", update_time)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="configurationType")
    def configuration_type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
        """
        return pulumi.get(self, "configuration_type")

    @configuration_type.setter
    def configuration_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "configuration_type", value)

    @property
    @pulumi.getter(name="originGroupId")
    def origin_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        OriginGroup ID.
        """
        return pulumi.get(self, "origin_group_id")

    @origin_group_id.setter
    def origin_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "origin_group_id", value)

    @property
    @pulumi.getter(name="originGroupName")
    def origin_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        OriginGroup Name.
        """
        return pulumi.get(self, "origin_group_name")

    @origin_group_name.setter
    def origin_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "origin_group_name", value)

    @property
    @pulumi.getter(name="originRecords")
    def origin_records(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]]]:
        """
        Origin site records.
        """
        return pulumi.get(self, "origin_records")

    @origin_records.setter
    def origin_records(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupOriginRecordArgs']]]]):
        pulumi.set(self, "origin_records", value)

    @property
    @pulumi.getter(name="originType")
    def origin_type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `third_party`: third party cos.
        """
        return pulumi.get(self, "origin_type")

    @origin_type.setter
    def origin_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "origin_type", value)

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> Optional[pulumi.Input[str]]:
        """
        Last modification date.
        """
        return pulumi.get(self, "update_time")

    @update_time.setter
    def update_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "update_time", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[str]]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_id", value)


class OriginGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configuration_type: Optional[pulumi.Input[str]] = None,
                 origin_group_name: Optional[pulumi.Input[str]] = None,
                 origin_records: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupOriginRecordArgs']]]]] = None,
                 origin_type: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a teo origin_group

        ## Example Usage
        ### Self origin group

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        origin_group = tencentcloud.teo.OriginGroup("originGroup",
            configuration_type="weight",
            origin_group_name="test-group",
            origin_records=[tencentcloud.teo.OriginGroupOriginRecordArgs(
                areas=[],
                port=8080,
                private=False,
                record="150.109.8.1",
                weight=100,
            )],
            origin_type="self",
            zone_id="zone-297z8rf93cfw")
        ```
        ### Cos origin group

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        origin_group = tencentcloud.teo.OriginGroup("originGroup",
            configuration_type="weight",
            origin_group_name="test",
            origin_records=[tencentcloud.teo.OriginGroupOriginRecordArgs(
                areas=[],
                port=0,
                private=True,
                record="test-ruichaolin-1310708577.cos.ap-nanjing.myqcloud.com",
                weight=100,
            )],
            origin_type="cos",
            zone_id="zone-2o3h21ed8bpu")
        ```

        ## Import

        teo origin_group can be imported using the zone_id#originGroup_id, e.g. `

        ```sh
         $ pulumi import tencentcloud:Teo/originGroup:OriginGroup origin_group zone-297z8rf93cfw#origin-4f8a30b2-3720-11ed-b66b-525400dceb86
        ```

         `

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] configuration_type: Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
        :param pulumi.Input[str] origin_group_name: OriginGroup Name.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupOriginRecordArgs']]]] origin_records: Origin site records.
        :param pulumi.Input[str] origin_type: Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `third_party`: third party cos.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OriginGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a teo origin_group

        ## Example Usage
        ### Self origin group

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        origin_group = tencentcloud.teo.OriginGroup("originGroup",
            configuration_type="weight",
            origin_group_name="test-group",
            origin_records=[tencentcloud.teo.OriginGroupOriginRecordArgs(
                areas=[],
                port=8080,
                private=False,
                record="150.109.8.1",
                weight=100,
            )],
            origin_type="self",
            zone_id="zone-297z8rf93cfw")
        ```
        ### Cos origin group

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        origin_group = tencentcloud.teo.OriginGroup("originGroup",
            configuration_type="weight",
            origin_group_name="test",
            origin_records=[tencentcloud.teo.OriginGroupOriginRecordArgs(
                areas=[],
                port=0,
                private=True,
                record="test-ruichaolin-1310708577.cos.ap-nanjing.myqcloud.com",
                weight=100,
            )],
            origin_type="cos",
            zone_id="zone-2o3h21ed8bpu")
        ```

        ## Import

        teo origin_group can be imported using the zone_id#originGroup_id, e.g. `

        ```sh
         $ pulumi import tencentcloud:Teo/originGroup:OriginGroup origin_group zone-297z8rf93cfw#origin-4f8a30b2-3720-11ed-b66b-525400dceb86
        ```

         `

        :param str resource_name: The name of the resource.
        :param OriginGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OriginGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configuration_type: Optional[pulumi.Input[str]] = None,
                 origin_group_name: Optional[pulumi.Input[str]] = None,
                 origin_records: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupOriginRecordArgs']]]]] = None,
                 origin_type: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OriginGroupArgs.__new__(OriginGroupArgs)

            if configuration_type is None and not opts.urn:
                raise TypeError("Missing required property 'configuration_type'")
            __props__.__dict__["configuration_type"] = configuration_type
            if origin_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'origin_group_name'")
            __props__.__dict__["origin_group_name"] = origin_group_name
            if origin_records is None and not opts.urn:
                raise TypeError("Missing required property 'origin_records'")
            __props__.__dict__["origin_records"] = origin_records
            if origin_type is None and not opts.urn:
                raise TypeError("Missing required property 'origin_type'")
            __props__.__dict__["origin_type"] = origin_type
            if zone_id is None and not opts.urn:
                raise TypeError("Missing required property 'zone_id'")
            __props__.__dict__["zone_id"] = zone_id
            __props__.__dict__["origin_group_id"] = None
            __props__.__dict__["update_time"] = None
        super(OriginGroup, __self__).__init__(
            'tencentcloud:Teo/originGroup:OriginGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            configuration_type: Optional[pulumi.Input[str]] = None,
            origin_group_id: Optional[pulumi.Input[str]] = None,
            origin_group_name: Optional[pulumi.Input[str]] = None,
            origin_records: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupOriginRecordArgs']]]]] = None,
            origin_type: Optional[pulumi.Input[str]] = None,
            update_time: Optional[pulumi.Input[str]] = None,
            zone_id: Optional[pulumi.Input[str]] = None) -> 'OriginGroup':
        """
        Get an existing OriginGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] configuration_type: Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
        :param pulumi.Input[str] origin_group_id: OriginGroup ID.
        :param pulumi.Input[str] origin_group_name: OriginGroup Name.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupOriginRecordArgs']]]] origin_records: Origin site records.
        :param pulumi.Input[str] origin_type: Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `third_party`: third party cos.
        :param pulumi.Input[str] update_time: Last modification date.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OriginGroupState.__new__(_OriginGroupState)

        __props__.__dict__["configuration_type"] = configuration_type
        __props__.__dict__["origin_group_id"] = origin_group_id
        __props__.__dict__["origin_group_name"] = origin_group_name
        __props__.__dict__["origin_records"] = origin_records
        __props__.__dict__["origin_type"] = origin_type
        __props__.__dict__["update_time"] = update_time
        __props__.__dict__["zone_id"] = zone_id
        return OriginGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="configurationType")
    def configuration_type(self) -> pulumi.Output[str]:
        """
        Type of the origin group, this field should be set when `OriginType` is self, otherwise leave it empty. Valid values: `area`: select an origin by using Geo info of the client IP and `Area` field in Records; `weight`: weighted select an origin by using `Weight` field in Records; `proto`: config by HTTP protocol.
        """
        return pulumi.get(self, "configuration_type")

    @property
    @pulumi.getter(name="originGroupId")
    def origin_group_id(self) -> pulumi.Output[str]:
        """
        OriginGroup ID.
        """
        return pulumi.get(self, "origin_group_id")

    @property
    @pulumi.getter(name="originGroupName")
    def origin_group_name(self) -> pulumi.Output[str]:
        """
        OriginGroup Name.
        """
        return pulumi.get(self, "origin_group_name")

    @property
    @pulumi.getter(name="originRecords")
    def origin_records(self) -> pulumi.Output[Sequence['outputs.OriginGroupOriginRecord']]:
        """
        Origin site records.
        """
        return pulumi.get(self, "origin_records")

    @property
    @pulumi.getter(name="originType")
    def origin_type(self) -> pulumi.Output[str]:
        """
        Type of the origin site. Valid values: `self`: self-build website; `cos`: tencent cos; `third_party`: third party cos.
        """
        return pulumi.get(self, "origin_type")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> pulumi.Output[str]:
        """
        Last modification date.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Output[str]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")

